<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Store.PartnerCenter</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Store.PartnerCenter.AggregatePartnerOperations">
            <summary>
            Aggregate partner implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AggregatePartnerOperations.#ctor(Microsoft.Store.PartnerCenter.IPartnerCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.AggregatePartnerOperations"/> class.
            </summary>
            <param name="credentials">The partner credentials.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AggregatePartnerOperations.With(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Returns a partner operations object which uses the provided context when executing operations.
            </summary>
            <param name="context">An operation context object.</param>
            <returns>A partner operations object which uses the provided operation context.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Agreements.CustomerAgreementCollectionOperations">
            <summary>
            Customer's agreement collection operations implementations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.CustomerAgreementCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Agreements.CustomerAgreementCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance. </param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.CustomerAgreementCollectionOperations.Get">
            <summary>
            Get the partner-customer agreements.
            </summary>
            <returns>List of agreements between the partner and customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.CustomerAgreementCollectionOperations.GetAsync">
            <summary>
            Asynchronously get the partner-customer agreements.
            </summary>
            <returns>List of agreements between the partner and customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.CustomerAgreementCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Agreements.Agreement)">
            <summary>
            Create an agreement between the partner and customer.
            </summary>
            <param name="customerAgreement">The customer agreement to be created.</param>
            <returns>Newly created customer agreement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.CustomerAgreementCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Agreements.Agreement)">
            <summary>
            Asynchronously create an agreement between the partner and customer.
            </summary>
            <param name="customerAgreement">The customer agreement to be created.</param>
            <returns>Newly created customer agreement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Agreements.AgreementDetailsCollectionOperations">
            <summary>
            Agreement details collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.AgreementDetailsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Agreements.AgreementDetailsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.AgreementDetailsCollectionOperations.Get">
            <summary>
            Gets the list of agreement details.
            </summary>
            <returns>List of agreement details.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.AgreementDetailsCollectionOperations.GetAsync">
            <summary>
            Gets the list of agreement details asynchronously.
            </summary>
            <returns>List of agreement details</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Agreements.ICustomerAgreementCollection">
            <summary>
            Defines the operations available on a partner-customer agreement.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.ICustomerAgreementCollection.Get">
            <summary>
            Retrieve the list of agreements between a partner and customer.
            </summary>
            <returns>The list of customer's agreements.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.ICustomerAgreementCollection.GetAsync">
            <summary>
            Asynchronously retrieve the list of agreements between a partner and customer.
            </summary>
            <returns>The list of customer's agreements.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.ICustomerAgreementCollection.Create(Microsoft.Store.PartnerCenter.Models.Agreements.Agreement)">
            <summary>
            Create a new agreement on behalf of the customer.
            </summary>
            <param name="customerAgreement">Customer agreement details.</param>
            <returns>Newly created agreement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.ICustomerAgreementCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.Agreements.Agreement)">
            <summary>
            Asynchronously create a new agreement on behalf of the customer.
            </summary>
            <param name="customerAgreement">Customer agreement details.</param>
            <returns>Newly created agreement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Agreements.IAgreementDetailsCollection">
            <summary>
            This interface represents the agreement details behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.IAgreementDetailsCollection.Get">
            <summary>
            Retrieves the agreement details.
            </summary>
            <returns>List of details about agreements.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Agreements.IAgreementDetailsCollection.GetAsync">
            <summary>
            Asynchronously retrieves the agreement details.
            </summary>
            <returns>List of details about agreements.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.CustomerAnalyticsCollectionOperations">
            <summary>
            Implements the operations on a Customer analytics collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerAnalyticsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.CustomerAnalyticsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id of the customer</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.CustomerAnalyticsCollectionOperations.Licenses">
            <summary>
            Gets the operations on a customer licenses analytics collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesAnalyticsCollectionOperations">
            <summary>
            Implements the operations on a customer licenses analytics collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesAnalyticsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesAnalyticsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id of the customer</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesAnalyticsCollectionOperations.Deployment">
            <summary>
            Gets the operations on a customer's licenses' deployment insights collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesAnalyticsCollectionOperations.Usage">
            <summary>
            Gets the operations on a customer's licenses' usage insights collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesDeploymentInsightsCollectionOperations">
            <summary>
            Implements the operations on customer licenses deployment insights collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesDeploymentInsightsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesDeploymentInsightsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id of the customer</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesDeploymentInsightsCollectionOperations.Get">
            <summary>
            Retrieves the collection of customer's licenses' deployment insights.
            </summary>
            <returns>Collection of customer licenses deployment insights</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesDeploymentInsightsCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the collection of customer's licenses' deployment insights.
            </summary>
            <returns>Collection of customer licenses deployment insights</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesUsageInsightsCollectionOperations">
            <summary>
            Implements the operations on customer licenses usage insights collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesUsageInsightsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesUsageInsightsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id of the customer</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesUsageInsightsCollectionOperations.Get">
            <summary>
            Retrieves the collection of customer's licenses' usage insights.
            </summary>
            <returns>Collection of customer licenses usage insights</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.CustomerLicensesUsageInsightsCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the collection of customer's licenses' usage insights.
            </summary>
            <returns>Collection of customer licenses usage insights</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.ICustomerAnalyticsCollection">
            <summary>
            Holds operations that apply to customer analytics collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.ICustomerAnalyticsCollection.Licenses">
            <summary>
            Gets the customer's licenses analytics collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.ICustomerLicensesAnalyticsCollection">
            <summary>
            Encapsulates collection of customer level analytics
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.ICustomerLicensesAnalyticsCollection.Deployment">
            <summary>
            Encapsulates customer level licenses deployment analytics
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.ICustomerLicensesAnalyticsCollection.Usage">
            <summary>
            Encapsulates customer level licenses usage analytics
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.ICustomerLicensesDeploymentInsightsCollection">
            <summary>
            Encapsulates the operations on the customer's licenses' deployment insights collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.ICustomerLicensesUsageInsightsCollection">
            <summary>
            Encapsulates the operations on the customer's licenses' usage insights collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.PartnerAnalyticsCollectionOperations">
            <summary>
            Implements the operations on partner analytics collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerAnalyticsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.PartnerAnalyticsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.PartnerAnalyticsCollectionOperations.Licenses">
            <summary>
            Gets the operations on partner's licenses' analytics collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.IPartnerAnalyticsCollection">
            <summary>
            Encapsulates collection of partner's analytics.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.IPartnerAnalyticsCollection.Licenses">
            <summary>
            Gets the partner's licenses analytics collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.IPartnerLicensesAnalyticsCollection">
            <summary>
            Encapsulates collection of partner level licenses' analytics.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.IPartnerLicensesAnalyticsCollection.Deployment">
            <summary>
            Gets the partner's licenses' deployment analytics.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.IPartnerLicensesAnalyticsCollection.Usage">
            <summary>
            Gets the partner's licenses' usage analytics.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.IPartnerLicensesDeploymentInsightsCollection">
            <summary>
            Encapsulates the operations on the partner's licenses' deployment insights collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.IPartnerLicensesUsageInsightsCollection">
            <summary>
            Encapsulates the operations on the partner's licenses' usage insights collection.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesAnalyticsCollectionOperations">
            <summary>
            Implements the operations on partner licenses analytics collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesAnalyticsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesAnalyticsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesAnalyticsCollectionOperations.Deployment">
            <summary>
            Gets the partner's licenses' deployment insights collection operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesAnalyticsCollectionOperations.Usage">
            <summary>
            Gets the partner's licenses' usage insights collection operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesDeploymentInsightsCollectionOperations">
            <summary>
            Implements the operations on partner licenses deployment insights collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesDeploymentInsightsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesDeploymentInsightsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesDeploymentInsightsCollectionOperations.Get">
            <summary>
            Retrieves the collection of partner's licenses' deployment insights.
            </summary>
            <returns>Collection of licenses deployment insights</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesDeploymentInsightsCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the collection of partner's licenses' deployment insights.
            </summary>
            <returns>Collection of licenses deployment insights</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesUsageInsightsCollectionOperations">
            <summary>
            Implements the operations on partner licenses usage insights collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesUsageInsightsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesUsageInsightsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesUsageInsightsCollectionOperations.Get">
            <summary>
            Retrieves the collection of partner's licenses' usage insights.
            </summary>
            <returns>Collection of licenses usage insights</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Analytics.PartnerLicensesUsageInsightsCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the collection of partner's licenses' usage insights.
            </summary>
            <returns>Collection of licenses usage insights</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.AuditRecords.AuditRecordsCollection">
            <summary>
            Represents the operations that can be performed on a partner's audit records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AuditRecords.AuditRecordsCollection.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.AuditRecords.AuditRecordsCollection"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AuditRecords.AuditRecordsCollection.Query(System.DateTime,System.Nullable{System.DateTime},Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries audit records associated to the partner.
            The following queries are supported:
            - Specify the number of audit record to return.
            - Filter the result with a customer name.
            </summary>
            <param name="startDate">The start date of the audit record logs.</param>
            <param name="endDate">The end date of the audit record logs.</param>
            <param name="query">The query.</param>
            <returns>The audit records that match the given query.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AuditRecords.AuditRecordsCollection.QueryAsync(System.DateTime,System.Nullable{System.DateTime},Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously audit records invoices associated to the partner.
            The following queries are supported:
            - Specify the number of audit record to return.
            - Filter the result with a customer name.
            </summary>
            <param name="startDate">The start date of the audit record logs.</param>
            <param name="endDate">The end date of the audit record logs.</param>
            <param name="query">The query.</param>
            <returns>The audit records that match the given query.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.AuditRecords.IAuditRecordsCollection">
            <summary>
            Represents the operations that can be done on partners audit collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AuditRecords.IAuditRecordsCollection.Query(System.DateTime,System.Nullable{System.DateTime},Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries audit records associated to the partner.
            The following queries are supported:
            - Specify the number of audit record to return.
            - Filter the result with a customer name.
            </summary>
            <param name="startDate">The start date of the audit record logs.</param>
            <param name="endDate">The end date of the audit record logs.</param>
            <param name="query">The query.</param>
            <returns>The audit records that match the given query.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AuditRecords.IAuditRecordsCollection.QueryAsync(System.DateTime,System.Nullable{System.DateTime},Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries audit records associated to the partner.
            The following queries are supported:
            - Specify the number of audit record to return.
            - Filter the result with a customer name.
            </summary>
            <param name="startDate">The start date of the audit record logs.</param>
            <param name="endDate">The end date of the audit record logs.</param>
            <param name="query">The query.</param>
            <returns>The audit records that match the given query.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.AuthenticationToken">
            <summary>
            Represents an authentication token for a resource.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AuthenticationToken.#ctor(System.String,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.AuthenticationToken"/> class.
            </summary>
            <param name="token">The authentication token.</param>
            <param name="expiryTime">The token expiry time.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.AuthenticationToken.Token">
            <summary>
            Gets the token.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.AuthenticationToken.ExpiryTime">
            <summary>
            Gets the token expiry time.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.AuthenticationToken.ExpiryBuffer">
            <summary>
            Gets or sets the amount of time to deduct from the actual expiry time. This is used to ensure that the token does
            not expire while processing is still in progress.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.AuthenticationToken.IsExpired">
            <summary>
            Indicates whether the token has expired or not.
            </summary>
            <returns>True if token has expired. False if not.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.BasePartnerComponent`1">
            <summary>
            Holds common partner component properties and behavior. All components should inherit from this class.
            </summary>
            <typeparam name="TContext">The context object type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.BasePartnerComponent`1.#ctor(Microsoft.Store.PartnerCenter.IPartner,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.BasePartnerComponent`1"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations that created this component.</param>
            <param name="componentContext">A component context object to work with.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.BasePartnerComponent`1.Partner">
            <summary>
            Gets a reference to the partner operations instance that generated this component.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.BasePartnerComponent`1.Context">
            <summary>
            Gets the component context object.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.BasePartnerComponent">
            <summary>
            Holds common partner component properties and behavior. The context is string type by default.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.BasePartnerComponent.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.BasePartnerComponent"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations that created this component.</param>
            <param name="componentContext">A component context object to work with.</param>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Carts.CartCollectionOperations">
            <summary>
            Cart collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Carts.CartCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Carts.CartCollectionOperations.Item(System.String)">
            <summary>
            Obtains a specific cart behavior.
            </summary>
            <param name="cartId">The cart id.</param>
            <returns>The cart operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartCollectionOperations.ById(System.String)">
            <summary>
            Obtains a specific cart behavior.
            </summary>
            <param name="cartId">The cart id.</param>
            <returns>The cart operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Carts.Cart)">
            <summary>
            Creates a new cart for the customer.
            </summary>
            <param name="newCart"> A cart item to be created.</param>
            <returns>A cart object </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Carts.Cart)">
            <summary>
            Asynchronously creates a new cart for the customer.
            </summary>
            <param name="newCart"> A cart item to be created.</param>
            <returns>A cart object </returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Carts.CartOperations">
            <summary>
            Cart operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Carts.CartOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id</param>
            <param name="cartId">The cart Id</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartOperations.Checkout">
            <summary>
            Checkouts the cart.
            </summary>
            <returns>The cart checkout result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartOperations.CheckoutAsync">
            <summary>
            Asynchronously Checkouts the cart.
            </summary>
            <returns>The cart checkout result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartOperations.Put(Microsoft.Store.PartnerCenter.Models.Carts.Cart)">
            <summary>
            Updates an existing cart.
            </summary>
            <param name="cart">The cart to update.</param>
            <returns>The updated cart object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartOperations.PutAsync(Microsoft.Store.PartnerCenter.Models.Carts.Cart)">
            <summary>
            Asynchronously update an existing cart
            </summary>
            <param name="cart">The cart to update.</param>
            <returns>The updated cart object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartOperations.Get">
            <summary>
            Retrieves a customer cart.
            </summary>
            <returns>Required cart object</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.CartOperations.GetAsync">
            <summary>
            Asynchronously retrieves a customer cart.
            </summary>
            <returns>Required cart object</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Carts.ICart">
            <summary>
            Encapsulates a customer cart behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.ICart.Checkout">
            <summary>
            Checkouts the cart.
            </summary>
            <returns>The cart checkout result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.ICart.CheckoutAsync">
            <summary>
            Asynchronously Checkouts the cart.
            </summary>   
            <returns>The cart checkout result.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Carts.ICartCollection">
            <summary>
            Encapsulates a customer cart behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Carts.ICartCollection.Item(System.String)">
            <summary>
            Gets a specific cart behavior.
            </summary>
            <param name="cartId">The cart id.</param>
            <returns>The cart operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.ICartCollection.ById(System.String)">
            <summary>
            Obtains a specific cart behavior.
            </summary>
            <param name="cartId"> The cart id. </param>
            <returns>New ICart</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.ICartCollection.Create(Microsoft.Store.PartnerCenter.Models.Carts.Cart)">
            <summary>
            Creates a new cart for customer
            </summary>
            <param name="newCart">A cart item to be created.</param>
            <returns>The new cart that was just created.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Carts.ICartCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.Carts.Cart)">
            <summary>
            Asynchronously creates a new cart.
            </summary>
            <param name="newCart">A cart item to be created.</param>
            <returns>The new cart that was just created.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesCollectionOperations">
            <summary>
            Country validation rules collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesCollectionOperations.ByCountry(System.String)">
            <summary>
            Obtains a specific behavior for country validation rules.
            </summary>
            <param name="country">The country.</param>
            <returns>The country validation rules operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CountryValidationRules.ICountryValidationRulesCollection">
            <summary>
            Encapsulates country validation rules behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.ICountryValidationRulesCollection.ByCountry(System.String)">
            <summary>
            Obtains behavior for a specific country's validation rules.
            </summary>
            <param name="country">The country's ISO2 code.</param>
            <returns>The country validation rules operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CountryValidationRules.ICountryValidationRules">
            <summary>
            Represents the behavior of a specific country validation rules.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.ICountryValidationRules.Get">
            <summary>
            Retrieves the country validation rules.
            </summary>
            <returns>The validation rules for the country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.ICountryValidationRules.GetAsync">
            <summary>
            Asynchronously retrieves the country validation rules.
            </summary>
            <returns>The validation rules for the country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesOperations">
            <summary>
            The country validation rules operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="country">The country.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesOperations.Get">
            <summary>
            Gets the market specific validation data by country.
            </summary>
            <returns>The market specific validation data operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CountryValidationRules.CountryValidationRulesOperations.GetAsync">
            <summary>
            Asynchronously gets the country validation rules by country.
            </summary>
            <returns>The country validation rules.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleCollectionOperations">
            <summary>
            Directory role collection operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleCollectionOperations.Item(System.String)">
            <summary>
            Gets a directory role operations object.
            </summary>
            <param name="roleId">The directory role id.</param>
            <returns>The directory role operations object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleCollectionOperations.ById(System.String)">
            <summary>
            Gets a directory role operations object.
            </summary>
            <param name="roleId">The directory role id.</param>
            <returns>The directory role operations object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleCollectionOperations.Get">
            <summary>
            Retrieves all customer directory roles.
            </summary>
            <returns>All the customer directory roles.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all customer directory roles.
            </summary>
            <returns>All the customer directory roles.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleOperations">
            <summary>
            Directory role operations class.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleOperations.directoryRoleUserMemberOperations">
            <summary>
            A lazy reference to the current directory role's user members operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
            <param name="roleId">The directory role I=id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.DirectoryRoleOperations.UserMembers">
            <summary>
            Gets the current directory role's user member collection operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IDirectoryRole">
            <summary>
            Represents the behavior of directory role.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IDirectoryRole.UserMembers">
            <summary>
            Gets the current directory role's user member collection operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IDirectoryRoleCollection">
            <summary>
            Represents the behavior of directory role collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IDirectoryRoleCollection.Item(System.String)">
            <summary>
            Gets a directory role behavior.
            </summary>
            <param name="roleId">The directory role id.</param>
            <returns>The directory role operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IDirectoryRoleCollection.ById(System.String)">
            <summary>
            Gets a directory role behavior.
            </summary>
            <param name="roleId">The directory role id.</param>
            <returns>The directory role operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IDirectoryRoleCollection.Get">
            <summary>
            Retrieves all customer directory roles.
            </summary>
            <returns>All the customer directory roles.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IDirectoryRoleCollection.GetAsync">
            <summary>
            Asynchronously retrieves all customer directory roles.
            </summary>
            <returns>All the customer directory roles.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMember">
            <summary>
            Represents the behavior of a user member.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMember.Delete">
            <summary>
            Remove directory user member from directory role.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMember.DeleteAsync">
            <summary>
            Asynchronously remove directory user member from directory role.
            </summary>
            <returns>A task when the operation is finished.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection">
            <summary>
            Represents the behavior of user member collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.Item(System.String)">
            <summary>
            Gets a single user member behavior.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The user member operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.ById(System.String)">
            <summary>
            Gets a single user member behavior.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The user member operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.Create(Microsoft.Store.PartnerCenter.Models.Roles.UserMember)">
            <summary>
            Adds customer user to a directory role.
            </summary>
            <param name="newEntity">UserMember to add.</param>
            <returns>The customer directory role user member.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.Roles.UserMember)">
            <summary>
            Asynchronously adds customer user to a directory role.
            </summary>
            <param name="newEntity">UserMember to add.</param>
            <returns>The customer directory role user member.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries the user members of a customer directory role.
            </summary>
            <param name="query">A query to apply onto user member collection.</param>
            <returns>The directory role user members.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries the user members of a customer directory role.
            </summary>
            <param name="query">A query to apply onto user member collection.</param>
            <returns>The directory role user members.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.Get">
            <summary>
            Gets all the user members of a customer directory role.
            </summary>
            <returns>The directory role user memberships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.IUserMemberCollection.GetAsync">
            <summary>
            Asynchronously gets all the user members of a customer directory role.
            </summary>
            <returns>The directory role user members.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations">
            <summary>
            User member collection operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The partner operations instance.</param>
            <param name="customerId">Customer id.</param>
            <param name="roleId">The directory role Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.Item(System.String)">
            <summary>
            Get a single user member operations object.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The user member operations instance.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.ById(System.String)">
            <summary>
            Get a single user member operations object.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The user member operations instance.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Roles.UserMember)">
            <summary>
            Adds customer user to a directory role.
            </summary>
            <param name="newEntity">UserMember to add.</param>
            <returns>The customer directory role user member.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Roles.UserMember)">
            <summary>
            Asynchronously adds customer user to a directory role.
            </summary>
            <param name="newEntity">UserMember to add.</param>
            <returns>The customer directory role user member.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.Get">
            <summary>
            Gets all the user members of a customer directory role.
            </summary>
            <returns>The directory role user memberships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.GetAsync">
            <summary>
            Asynchronously gets all the user members of a customer directory role.
            </summary>
            <returns>The directory role user members.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Retrieves the user members of a customer directory role.
            </summary>
            <param name="query">A query to apply onto user member collection.</param>
            <returns>The directory role user memberships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously retrieves the user members of a customer directory role.
            </summary>
            <param name="query">A query to apply onto user member collection.</param>
            <returns>The directory role user members.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberOperations">
            <summary>
            User member operations operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The partner operations instance.</param>
            <param name="customerId">Customer id.</param>
            <param name="roleId">The directory role Id.</param>
            <param name="userId">The user Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberOperations.Delete">
            <summary>
            Remove directory user member from directory role.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerDirectoryRoles.UserMemberOperations.DeleteAsync">
            <summary>
            Asynchronously remove directory user member from directory role.
            </summary>
            <returns>A task when the operation is finished.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityOperations">
            <summary>
            Single customer availability operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The corresponding customer id.</param>
            <param name="productId">The corresponding product id.</param>
            <param name="skuId">The corresponding sku id.</param>
            <param name="availabilityId">The availability id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionByTargetSegmentOperations">
            <summary>
            Implementation of customer availabilities operations by target segment.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionByTargetSegmentOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionByTargetSegmentOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the availabilities.</param>
            <param name="productId">The product id for which to retrieve the availabilities.</param>
            <param name="skuId">The sku id for which to retrieve its availabilities.</param>
            <param name="targetSegment">The target segment used for filtering the availabilities.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionByTargetSegmentOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionByTargetSegmentOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations">
            <summary>
            Implementation of customer availabilities operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the availabilities.</param>
            <param name="productId">The product id for which to retrieve the availabilities.</param>
            <param name="skuId">The sku id for which to retrieve its availabilities.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations.ById(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerAvailabilityCollectionOperations.ByTargetSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations">
            <summary>
            Implementation of customer sku collection operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the skus.</param>
            <param name="productId">The product id for which to retrieve its skus.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations.ById(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionOperations.ByTargetSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionByTargetSegmentOperations">
            <summary>
            Implementation of customer sku collection operations by target segment.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionByTargetSegmentOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionByTargetSegmentOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the skus.</param>
            <param name="productId">The product id for which to retrieve its skus.</param>
            <param name="targetSegment">The target segment used for filtering the skus.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionByTargetSegmentOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuCollectionByTargetSegmentOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuOperations">
            <summary>
            Implements operations for a single customer sku.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuOperations.availabilities">
            <summary>
            The availabilities operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the sku.</param>
            <param name="productId">The product id for which to retrieve its sku.</param>
            <param name="skuId">The sku id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuOperations.Availabilities">
            <summary>
            TODO: implement availabilities for customer.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerSkuOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollectionByTargetView">
            <summary>
            Holds operations that can be performed on products in a given catalog view that apply to a given customer.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollectionByTargetView.Get">
            <summary>
            Retrieves all the products in a given catalog view that apply to a given customer.
            </summary>
            <returns>The products in a given catalog view that apply to a given customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollectionByTargetView.GetAsync">
            <summary>
            Asynchronously retrieves all the products in a given catalog view that apply to a given customer.
            </summary>
            <returns>The products in a given catalog view that apply to a given customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollectionByTargetView.ByTargetSegment(System.String)">
            <summary>
            Retrieves the operations that can be applied on products in a given catalog view and that apply to a given customer, filtered by target segment.
            </summary>
            <param name="targetSegment">The product segment filter.</param>
            <returns>The product collection operations by customer, by target view and by target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollectionByTargetViewByTargetSegment">
            <summary>
            Holds operations that can be performed on products in a given catalog view and that apply to a given customer, filtered by target segment.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollectionByTargetViewByTargetSegment.Get">
            <summary>
            Retrieves all the products in a given catalog view and that apply to a given customer, filtered by target segment.
            </summary>
            <returns>The products in a given catalog view and that apply to a given customer, filtered by target segment.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollectionByTargetViewByTargetSegment.GetAsync">
            <summary>
            Asynchronously retrieves all the products in a given catalog view and that apply to a given customer, filtered by target segment.
            </summary>
            <returns>The products in a given catalog view and that apply to a given customer, filtered by target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollection">
            <summary>
            Holds operations that can be performed on products that apply to a given customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollection.Item(System.String)">
            <summary>
            Retrieves the operations tied with a specific product for a given customer.
            </summary>
            <param name="productId">The product id.</param>
            <returns>The product by customer id operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollection.ById(System.String)">
            <summary>
            Retrieves the operations tied with a specific product for a given customer.
            </summary>
            <param name="productId">The product id.</param>
            <returns>The product by customer id operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.ICustomerProductCollection.ByTargetView(System.String)">
            <summary>
            Retrieves the operations that can be applied on products in a given catalog view and that apply to a given customer.
            </summary>
            <param name="targetView">The product target view.</param>
            <returns>The catalog view operations by customer id and by target view.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewByTargetSegmentOperations">
            <summary>
            Product operations by customer id, by target view and by target segment implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewByTargetSegmentOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewByTargetSegmentOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the products.</param>
            <param name="targetView">The target view which contains the products.</param>
            <param name="targetSegment">The target segment used for filtering the products.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewByTargetSegmentOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewByTargetSegmentOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewOperations">
            <summary>
            Product operations by customer id and by target view implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the products.</param>
            <param name="targetView">The target view which contains the products.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewOperations.ByTargetSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionByTargetViewOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionOperations">
            <summary>
            Product operations by customer id implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the products.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionOperations.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionOperations.ById(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductCollectionOperations.ByTargetView(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductOperations">
            <summary>
            Single product by customer id operations implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductOperations.skus">
            <summary>
            The product skus operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id for which to retrieve the product.</param>
            <param name="productId">The product id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductOperations.Skus">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Products.CustomerProductOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.CustomerServiceCostsCollectionOperations">
            <summary>
            Holds customer service costs behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.CustomerServiceCostsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.CustomerServiceCostsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.CustomerServiceCostsCollectionOperations.ByBillingPeriod(Microsoft.Store.PartnerCenter.Models.ServiceCosts.ServiceCostsBillingPeriod)">
            <summary>
            Obtains the service cost operations by billing period.
            </summary>
            <param name="billingPeriod">The billing period.</param>
            <returns>The service cost operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ICustomerServiceCostsCollection">
            <summary>
            Holds customer service costs behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ICustomerServiceCostsCollection.ByBillingPeriod(Microsoft.Store.PartnerCenter.Models.ServiceCosts.ServiceCostsBillingPeriod)">
            <summary>
            Obtains the service cost operations by billing period.
            </summary>
            <param name="billingPeriod">The billing period.</param>
            <returns>The service cost operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostsCollection">
            <summary>
             Holds the operations related to a customer's service costs.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostsCollection.Summary">
            <summary>
            Gets the customer's service cost summary.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostsCollection.LineItems">
            <summary>
            Gets the customer's service cost line items.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostLineItemsCollection">
            <summary>
            Represents the behavior of the customer service cost line items as a whole.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostLineItemsCollection.Get">
            <summary>
            Retrieves a customer's service cost line items.
            </summary>
            <returns>The service cost line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostLineItemsCollection.GetAsync">
            <summary>
            Asynchronously retrieves a customer's service cost line items.
            </summary>
            <returns>The service cost line items.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostSummary">
            <summary>
            This interface defines the operations available on a customer's service cost summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostSummary.Get">
            <summary>
            Retrieves the customer's service cost summary.
            </summary>
            <returns>The customer's service cost summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.IServiceCostSummary.GetAsync">
            <summary>
            Asynchronously retrieves the service cost summary.
            </summary>
            <returns>The customer's service cost summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostsCollectionOperations">
            <summary>
             Holds the operations related to a customer's service costs.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostsCollectionOperations.summary">
            <summary>
            A lazy reference to the current customer's service cost summary operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostsCollectionOperations.lineItems">
            <summary>
            A lazy reference to the current customer's service cost line items operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,Microsoft.Store.PartnerCenter.Models.ServiceCosts.ServiceCostsBillingPeriod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostsCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id.</param>
            <param name="billingPeriod">The service cost billing period.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostsCollectionOperations.Summary">
            <summary>
            Obtains the customer service cost summary behavior for the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostsCollectionOperations.LineItems">
            <summary>
             Obtains the customer service cost line items behavior for the partner.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostLineItemsOperations">
            <summary>
            Represents the behavior of the customer service cost line items as a whole.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostLineItemsOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.Tuple{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostLineItemsOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="context">The context, including customer id and billing period.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostLineItemsOperations.Get">
            <summary>
            Retrieves a customer's service cost line items.
            </summary>
            <returns>The service cost line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostLineItemsOperations.GetAsync">
            <summary>
            Asynchronously retrieves a customer's service cost line items.
            </summary>
            <returns>The service cost line items.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostSummaryOperations">
            <summary>
            This class implements the operations for a customer's service costs summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostSummaryOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.Tuple{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostSummaryOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="context">The context, including customer id and billing period.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostSummaryOperations.Get">
            <summary>
            Retrieves the customer's service cost summary.
            </summary>
            <returns>The customer's service cost summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ServiceCosts.ServiceCostSummaryOperations.GetAsync">
            <summary>
            Asynchronously retrieves the service cost summary.
            </summary>
            <returns>The customer's service cost summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerBillingProfileOperations">
            <summary>
            Implements the customer billing profile operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerBillingProfileOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerBillingProfileOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerBillingProfileOperations.Get">
            <summary>
            Gets the customer's billing profile.
            </summary>
            <returns>The customer's billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerBillingProfileOperations.GetAsync">
            <summary>
            Asynchronously gets the customer's billing profile.
            </summary>
            <returns>The customer's billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerBillingProfileOperations.Update(Microsoft.Store.PartnerCenter.Models.Customers.CustomerBillingProfile)">
            <summary>
            Updates the customer's billing profile.
            </summary>
            <param name="billingProfile">A customer billing profile with updated fields.</param>
            <returns>The updated customer billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerBillingProfileOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Customers.CustomerBillingProfile)">
            <summary>
            Asynchronously updates the customer's billing profile.
            </summary>
            <param name="billingProfile">A customer billing profile with updated fields.</param>
            <returns>The updated customer billing profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerCompanyProfileOperations">
            <summary>
            Implements the customer company profile operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerCompanyProfileOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerCompanyProfileOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerCompanyProfileOperations.Get">
            <summary>
            Gets the customer's company profile.
            </summary>
            <returns>The customer's company profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerCompanyProfileOperations.GetAsync">
            <summary>
            Asynchronously gets the customer's company profile.
            </summary>
            <returns>The customer's company profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerProfileCollectionOperations">
            <summary>
            Implements customer profile collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerProfileCollectionOperations.billingProfileOperations">
            <summary>
            A lazy reference to a customer billing operations instance.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerProfileCollectionOperations.companyProfileOperations">
            <summary>
            A lazy reference to a customer company operations instance.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerProfileCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerProfileCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerProfileCollectionOperations.Billing">
            <summary>
            Gets the customer's billing profile operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Profiles.CustomerProfileCollectionOperations.Company">
            <summary>
            Gets the customer's company profile operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerProfileCollection">
            <summary>
            Holds the operations related to a customer's profiles.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerProfileCollection.Billing">
            <summary>
            Gets the customer's billing profile operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerProfileCollection.Company">
            <summary>
            Gets the customer's company profile operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerReadonlyProfile`1">
            <summary>
            Encapsulates a single customer readonly profile behavior.
            </summary>
            <typeparam name="T">The type of the customer profile.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerReadonlyProfile`1.Get">
            <summary>
            Retrieves the customer profile.
            </summary>
            <returns>The customer profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerReadonlyProfile`1.GetAsync">
            <summary>
            Asynchronously retrieves the customer profile.
            </summary>
            <returns>The customer profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerProfile`1">
            <summary>
            Encapsulates a single customer profile behavior.
            </summary>
            <typeparam name="T">The type of the customer profile.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerProfile`1.Update(`0)">
            <summary>
            Updates the customer profile.
            </summary>
            <param name="customerProfile">The customer profile information.</param>
            <returns>The updated customer profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.Profiles.ICustomerProfile`1.UpdateAsync(`0)">
            <summary>
            Asynchronously updates the customer profile.
            </summary>
            <param name="customerProfile">The customer profile information.</param>
            <returns>The updated customer profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations">
            <summary>
            The partner customers implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.usageRecords">
            <summary>
            A lazy reference to the current partner's customer usage records operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.relationshipRequest">
            <summary>
            A lazy reference to a customer relationship request operations..
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.UsageRecords">
            <summary>
            Obtains the customer usage records behavior for the partner.
            </summary>
            <returns>The requested customers usage record.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.RelationshipRequest">
            <summary>
            Gets the relationship request behavior used to relate customers into the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.Item(System.String)">
            <summary>
            Gets a single customer operations.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns>The customer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.ById(System.String)">
            <summary>
            Gets a single customer operations.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns>The customer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Customers.Customer)">
            <summary>
            Creates a new customer.
            </summary>
            <param name="newCustomer">The new customer information.</param>
            <returns>The customer information that was just created.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Customers.Customer)">
            <summary>
            Asynchronously creates a new customer.
            </summary>
            <param name="newCustomer">The new customer information.</param>
            <returns>The customer information that was just created.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.Get">
            <summary>
            Retrieves all customers associated to the partner.
            </summary>
            <returns>All customers.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all customers associated to the partner.
            </summary>
            <returns>All customers.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries customers associated to the partner.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported.
            - You can navigate to other pages by specifying a seek query with the seek operation and the continuation
              token sent by the previous operation.
            </summary>
            <param name="customersQuery">A query to apply onto customers. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested customers.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries customers associated to the partner.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported.
            - You can navigate to other pages by specifying a seek query with the seek operation and the continuation
              token sent by the previous operation.
            </summary>
            <param name="customersQuery">A query to apply onto customers. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested customers.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.CustomerOperations">
            <summary>
            Implements a single customer operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.subscriptions">
            <summary>
            The customer subscriptions operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.orders">
            <summary>
            The customer orders operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.profiles">
            <summary>
            The customer profiles operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.serviceCosts">
            <summary>
            The customer's service costs operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.agreements">
            <summary>
            The customer's agreements.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.serviceRequests">
            <summary>
            The customer service requests operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.configurationPolicies">
            <summary>
            The customer configuration policies operations. 
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.devices">
            <summary>
            The customer device collection operations. 
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.batchUploadStatusCollection">
            <summary>
            The customer devices batch upload job status operations. 
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.managedServices">
            <summary>
            The customer managed services.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.offers">
            <summary>
            A lazy reference to the offer operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.products">
            <summary>
            A lazy reference to the product operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.cart">
            <summary>
            A lazy reference to the cart operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.offerCategories">
            <summary>
            A lazy reference to the offer category operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.usageSummary">
            <summary>
            The customer summary for usage-based subscriptions operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.usageBudget">
            <summary>
            The operations for the spending budget allocated to the customer by the partner.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.customerQualification">
            <summary>
            A lazy reference to the customer qualification operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.deviceBatches">
            <summary>
            A lazy reference to the devices batch operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.customerUserCollectionOperations">
            <summary>
            A lazy reference to the customer user license collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.directoryRoleCollectionOperations">
            <summary>
            A lazy reference to the directory role collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.subscribedSkuCollectionOperations">
            <summary>
            A lazy reference to the subscribed SKU collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.customerRelationshipCollectionOperations">
            <summary>
            A lazy reference to the customer relationship collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.analytics">
            <summary>
            A lazy reference to the customer analytics collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.entitlements">
            <summary>
            A lazy reference to the entitlement collection operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Customers.CustomerOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Orders">
            <summary>
            Gets the orders behavior for the customer.
            </summary>
            <returns>The customer orders.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Profiles">
            <summary>
            Obtains the profiles behavior for the customer.
            </summary>
            <returns>The customer profiles.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.ServiceCosts">
            <summary>
            Obtains the service costs behavior for the customer.
            </summary>
            <returns>The customer's service costs.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Agreements">
            <summary>
            Obtains the agreements behavior for the customer.
            </summary>
            <returns>The customer's agreements.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Subscriptions">
            <summary>
            Obtains the subscriptions behavior for the customer.
            </summary>
            <returns>The customer subscriptions.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.ServiceRequests">
            <summary>
            Obtains the service requests behavior for the customer.
            </summary>
            <returns>The customer service request operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.ConfigurationPolicies">
            <summary>
            Obtains the configuration policies behavior for the customer. 
            </summary>
            <returns>The customer configuration policies.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.DeviceBatches">
            <summary>
            Obtains the Devices Batches behavior of the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.DevicePolicy">
            <summary>
            Obtains the Device policy behavior of the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.BatchUploadStatus">
            <summary>
            Obtains the devices batch upload job status behavior of the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.ManagedServices">
            <summary>
            Obtains the managed services behavior for the customer.
            </summary>
            <returns>The customer managed services operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.OfferCategories">
            <summary>
            Obtains the Offer Categories behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Offers">
            <summary>
            Obtains the Offers behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Carts">
            <summary>
            Obtains the Cart behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Products">
            <summary>
            Obtains the Products behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.UsageSummary">
            <summary>
            Obtains the usage summary behavior for the customer.
            </summary>
            <returns>The customer usage summary operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.UsageBudget">
            <summary>
            Obtains the usage spending budget behavior for the customer.
            </summary>
            <returns>The customer usage spending budget operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Qualification">
            <summary>
            Obtains the Customer qualification.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Users">
            <summary>
            Obtains the customer user collection object.
            </summary>
            <returns> The customer user collection operations instance.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.DirectoryRoles">
            <summary>
            Obtains the directory role collection object.
            </summary>
            <returns> The directory role operations instance.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.SubscribedSkus">
            <summary>
            Obtains the subscribed SKU collection object.
            </summary>
            <returns> The subscribed sku collection operations instance.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Relationships">
            <summary>
            Obtains the customer relationship collection object.
            </summary>
            <returns> The customer relationship collection operations instance.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Analytics">
            <summary>
            Obtains the customer level analytics collection object.
            </summary>
            <returns> The customer level analytics collection operations instance.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Entitlements">
            <summary>
            Obtains the entitlement collection object.
            </summary>
            <returns> The entitlement collection operations instance.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Get">
            <summary>
            Retrieves information of a specific customer.
            </summary>
            <returns>The customer object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.GetAsync">
            <summary>
            Asynchronously retrieves information of a specific customer.
            </summary>
            <returns>The customer object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Delete">
            <summary>
            Deletes the customer from a testing in production account. This won't work for real accounts.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.DeleteAsync">
            <summary>
            Asynchronously deletes the customer from a testing in production account. This won't work for real accounts.
            </summary>
            <returns>A task which completes when the customer is deleted.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.Patch(Microsoft.Store.PartnerCenter.Models.Customers.Customer)">
            <summary>
            Removes Customer Partner relationship when RelationshipToPartner == CustomerPartnerRelationship.None.
            </summary>
            <param name="customer">A Customer with RelationshipToPartner == CustomerPartnerRelationship.None. </param>
            <returns>The customer information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.CustomerOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.Customers.Customer)">
            <summary>
            Asynchronously removes Customer Partner relationship when RelationshipToPartner == CustomerPartnerRelationship.None.
            </summary>
            <param name="customer">A Customer with RelationshipToPartner == CustomerPartnerRelationship.None. </param>
            <returns>The customer information.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection">
            <summary>
            Represents the behavior of the partner customers.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.UsageRecords">
            <summary>
            Obtains the customer usage records behavior for the partner.
            </summary>
            <returns>The requested customers usage record.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.RelationshipRequest">
            <summary>
            Gets the relationship request behavior used to relate customers into the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.Item(System.String)">
            <summary>
            Gets the customer operations for a specific customer.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns>The customer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.ById(System.String)">
            <summary>
            Gets the customer operations for a specific customer.
            </summary>
            <param name="customerId">The customer id.</param>
            <returns>The customer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.Get">
            <summary>
            Retrieves all the partner's customers.
            </summary>
            <returns>The partner's customers.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the partner's customers.
            </summary>
            <returns>The partner's customers..</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries customers associated to the partner.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported.
            - You can navigate to other pages by specifying a seek query with the seek operation and the continuation
              token sent by the previous operation.
            </summary>
            <param name="customersQuery">A query to apply onto customers. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested customers.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomerCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries customers associated to the partner.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported.
            - You can navigate to other pages by specifying a seek query with the seek operation and the continuation
              token sent by the previous operation.
            </summary>
            <param name="customersQuery">A query to apply onto customers. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested customers.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Customers.ICustomer">
            <summary>
            Groups operations that can be performed on a single partner customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Orders">
            <summary>
            Gets the orders behavior for the customer.
            </summary>
            <returns>The customer orders.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Profiles">
            <summary>
            Obtains the profiles behavior for the customer.
            </summary>
            <returns>The customer profiles.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.ServiceCosts">
            <summary>
            Obtains the service costs behavior for the customer.
            </summary>
            <returns>The customer's service costs.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Agreements">
            <summary>
            Obtains the agreements behavior for the customer.
            </summary>
            <returns>The customer agreements.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Subscriptions">
            <summary>
            Obtains the subscriptions behavior for the customer.
            </summary>
            <returns>The customer subscriptions.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.ServiceRequests">
            <summary>
            Obtains the service requests behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.ConfigurationPolicies">
            <summary>
            Obtains the configuration policies behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.DeviceBatches">
            <summary>
            Obtains the devices batch behavior of the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.DevicePolicy">
            <summary>
            Obtains the device policy behavior of the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.BatchUploadStatus">
            <summary>
            Obtains the devices batch upload status behavior of the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.ManagedServices">
            <summary>
            Obtains the managed services behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.OfferCategories">
            <summary>
            Obtains the Offer Categories behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Offers">
            <summary>
            Obtains the Offers behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Products">
            <summary>
            Obtains the Products behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.UsageSummary">
            <summary>
            Obtains the usage summary behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.UsageBudget">
            <summary>
            Obtains the usage spending budget behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Qualification">
            <summary>
            Obtains the qualification behavior of the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Users">
            <summary>
            Obtains the users behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.DirectoryRoles">
            <summary>
            Obtains the directory role behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.SubscribedSkus">
            <summary>
            Obtains the subscribed SKUs collection behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Relationships">
            <summary>
            Obtains the relationship collection behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Analytics">
            <summary>
            Obtains the analytics collection behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Carts">
            <summary>
            Obtains the Cart collection behavior for the customer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Customers.ICustomer.Entitlements">
            <summary>
            Obtains the entitlement collection behavior for the customer.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomer.Get">
            <summary>
            Retrieves the customer information.
            </summary>
            <returns>The customer information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomer.GetAsync">
            <summary>
            Asynchronously retrieves the customer information.
            </summary>
            <returns>The customer information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomer.Delete">
            <summary>
            Deletes the customer from a testing in production account. This won't work for real accounts.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomer.DeleteAsync">
            <summary>
            Asynchronously deletes the customer from a testing in production account. This won't work for real accounts.
            </summary>
            <returns>A task which completes when the customer is deleted.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomer.Patch(Microsoft.Store.PartnerCenter.Models.Customers.Customer)">
            <summary>
            Removes Customer Partner relationship when RelationshipToPartner == CustomerPartnerRelationship.None.
            </summary>
            <param name="customer">A Customer with RelationshipToPartner == CustomerPartnerRelationship.None. </param>
            <returns>The customer information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Customers.ICustomer.PatchAsync(Microsoft.Store.PartnerCenter.Models.Customers.Customer)">
            <summary>
            Asynchronously removes Customer Partner relationship when RelationshipToPartner == CustomerPartnerRelationship.None.
            </summary>
            <param name="customer">A Customer with RelationshipToPartner == CustomerPartnerRelationship.None. </param>
            <returns>The customer information.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.CustomerDevicesCollectionOperations">
            <summary>
            Implements operations that apply to device collections.  
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.CustomerDevicesCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.CustomerDevicesCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.CustomerDevicesCollectionOperations.Update(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.DevicePolicyUpdateRequest)">
            <summary>
            Updates devices with configuration policies.
            </summary>
            <param name="devicePolicyUpdateRequest">The device policy update request with devices to be updated.</param>
            <returns>The location which indicates the URL of the API to query for the status of update request.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.CustomerDevicesCollectionOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.DevicePolicyUpdateRequest)">
            <summary>
            Asynchronously update devices with configuration policies.
            </summary>
            <param name="devicePolicyUpdateRequest">The device policy update request with devices to be updated.</param>
            <returns>The location which indicates the URL of the API to query for the status of update request.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchOperations">
            <summary>
            Represents the operations that apply to devices batch of the customer.  
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchOperations.devices">
            <summary>
            The customer device collection operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="deviceBatchId">The devices batch Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchOperations.Devices">
            <summary>
            Gets the device collection operations for the customer.
            </summary>
            <returns>The device collection operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations">
            <summary>
            Implements operations that apply to configuration policy collections.  
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations.Item(System.String)">
            <summary>
            Retrieves configuration policy behavior.
            </summary>
            <param name="policyId">The policy id.</param>
            <returns>The customer configuration policy behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations.ById(System.String)">
            <summary>
            Retrieves configuration policy behavior.
            </summary>
            <param name="policyId">The policy id.</param>
            <returns>The customer configuration policy.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations.Get">
            <summary>
            Retrieves a collection of configuration policies associated to the customer.
            </summary>
            <returns>A collection of configuration policies. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations.GetAsync">
            <summary>
            Retrieves a collection of configuration policies associated to the customer asynchronously.
            </summary>
            <returns>A collection of configuration policies. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.ConfigurationPolicy)">
            <summary>
            Creates a new configuration policy.
            </summary>
            <param name="newPolicy">The new configuration policy information.</param>
            <returns>The policy information that was just created.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.ConfigurationPolicy)">
            <summary>
            Asynchronously creates a new configuration policy.
            </summary>
            <param name="newPolicy">The new configuration policy information.</param>
            <returns>The policy information that was just created.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations">
            <summary>
            Implements operations that apply to configuration policy. 
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="policyId">Policy Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations.Get">
            <summary>
            Gets the policy details.
            </summary>
            <returns>The policy retrieved by policy Id under a particular customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations.GetAsync">
            <summary>
            Gets the policy details asynchronously.
            </summary>
            <returns>The policy retrieved by policy Id under a particular customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations.Patch(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.ConfigurationPolicy)">
            <summary>
            Updates a configuration policy.
            </summary>
            <param name="policy">Payload of the update request.</param>
            <returns>Updated configuration policy.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.ConfigurationPolicy)">
            <summary>
            Updates a configuration policy asynchronously.
            </summary>
            <param name="policy">Payload of the update request.</param>
            <returns>Updated configuration policy.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations.Delete">
            <summary>
            Deletes a configuration policy.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ConfigurationPolicyOperations.DeleteAsync">
            <summary>
            Deletes a configuration policy asynchronously.
            </summary>
            <returns>An operation that completes when the delete is complete.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusCollectionOperations">
            <summary>
            Implements operations that apply to devices batch upload status collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusCollectionOperations.Item(System.String)">
            <summary>
            Retrieves a specific customer's devices batch upload status operations.
            </summary>
            <param name="trackingId">The device collection upload tracking id.</param>
            <returns>The customer's devices batch upload status operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusCollectionOperations.ById(System.String)">
            <summary>
            Retrieves a specific customer's devices batch upload status operations.
            </summary>
            <param name="trackingId">The tracking id.</param>
            <returns>The customer's devices batch upload status operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations">
            <summary>
            Implements operations that apply to device collections.  
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
            <param name="deviceBatchId">The devices batch Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations.Item(System.String)">
            <summary>
            Retrieves a customer's device operations.
            </summary>
            <param name="deviceId">The device id.</param>
            <returns>The customer's device operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations.ById(System.String)">
            <summary>
            Retrieves a customer's device operations.
            </summary>
            <param name="deviceId">The device id.</param>
            <returns>The customer's device operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations.Get">
            <summary>
            Retrieves devices associated to the customer.
            </summary>
            <returns>A collection of devices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations.GetAsync">
            <summary>
            Retrieves devices associated to the customer asynchronously.
            </summary>
            <returns>A collection of devices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations.Create(System.Collections.Generic.IEnumerable{Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device})">
            <summary>
            Adds devices to existing devices batch.
            </summary>
            <param name="newDevices">The new devices to be created.</param>
            <returns>The location which indicates the URL of the API to query for status of the create request.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceCollectionOperations.CreateAsync(System.Collections.Generic.IEnumerable{Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device})">
            <summary>
            Asynchronously adds devices to existing devices batch.
            </summary>
            <param name="newDevices">The new devices to be created.</param>
            <returns>The location which indicates the URL of the API to query for status of the create request.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusOperations">
            <summary>
            Implements operations that apply to devices batch upload status.  
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
            <param name="trackingId">The status tracking Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusOperations.Get">
            <summary>
            Retrieves devices batch upload status of the customer.
            </summary>
            <returns>Devices batch upload status.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.BatchJobStatusOperations.GetAsync">
            <summary>
            Retrieves batch upload status of the customer asynchronously.
            </summary>
            <returns>Devices batch upload status. </returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations">
            <summary>
            Implements operations that apply to devices batch collection.  
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations.Item(System.String)">
            <summary>
            Retrieves a specific customer's devices batch behavior.
            </summary>
            <param name="deviceBatchId">The devices batch id.</param>
            <returns>The customer devices batch operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations.ById(System.String)">
            <summary>
            Retrieves a specific customer devices batch.
            </summary>
            <param name="deviceBatchId">The devices batch id.</param>
            <returns>The customer devices batch behavior. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.DeviceBatchCreationRequest)">
            <summary>
            Creates a new devices batch along with the devices.
            </summary>
            <param name="newDeviceBatch">The new devices batch.</param>
            <returns>The location to track the status of the create.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.DeviceBatchCreationRequest)">
            <summary>
            Asynchronously creates a new devices batch along with the devices.
            </summary>
            <param name="newDeviceBatch">The new devices batch information.</param>
            <returns>The location to track the status of the create.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations.Get">
            <summary>
            Retrieves devices batches associated to the customer.
            </summary>
            <returns>A collection of devices batches. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DevicesBatchCollectionOperations.GetAsync">
            <summary>
            Retrieves devices batches associated to the customer asynchronously.
            </summary>
            <returns>A collection of devices batches. </returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceOperations">
            <summary>
            Implements operations that apply to device.  
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
            <param name="deviceBatchId">The devices batch Id.</param>
            <param name="deviceId">The device Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceOperations.Patch(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device)">
            <summary>
            Updates a device associated to the customer with a configuration policy.
            </summary>
            <param name="updateDevice">The device that is to be updated.</param>
            <returns>Device to be updated.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device)">
            <summary>
            Updates a device with configuration policy asynchronously.
            </summary>
            <param name="updateDevice">Payload of the update request.</param>
            <returns>Updated device.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceOperations.Delete">
            <summary>
            Deletes a device associated to the customer.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.DeviceOperations.DeleteAsync">
            <summary>
            Deletes device associated to the customer asynchronously.
            </summary>
            <returns>An operation that completes when delete is complete.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.ICustomerDeviceCollection">
            <summary>
            Represents the operations that can be done on the partner's devices.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.ICustomerDeviceCollection.Update(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.DevicePolicyUpdateRequest)">
            <summary>
            Updates the devices with configuration policies.
            </summary>
            <param name="devicePolicyUpdateRequest">The device policy update request with devices to be updated.</param>
            <returns>The location of the status to track the update.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevicesBatch">
            <summary>
            Represents the operations that can be done on the partner's devices batches.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevicesBatch.Devices">
            <summary>
            Obtains the Devices behavior of the devices batch.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IBatchJobStatusCollection">
            <summary>
            Represents the operations that can be done on the partner's batch upload status collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.IBatchJobStatusCollection.Item(System.String)">
            <summary>
            Retrieves a specific customer's devices batch upload status behavior.
            </summary>
            <param name="trackingId">The tracking id.</param>
            <returns>The customer's devices batch upload status operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IBatchJobStatusCollection.ById(System.String)">
            <summary>
            Retrieves a specific customer's devices batch upload status behavior.
            </summary>
            <param name="trackingId">The tracking id.</param>
            <returns>The customer's devices batch upload status operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicy">
            <summary>
            Represents all the operations that can be done on a configuration policy.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicy.Get">
            <summary>
            Retrieves the configuration policy. 
            </summary>
            <returns>The configuration policy. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicy.GetAsync">
            <summary>
            Retrieves the configuration policy asynchronously. 
            </summary>
            <returns>The configuration policy. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicy.Patch(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.ConfigurationPolicy)">
            <summary>
            Patches the configuration policy. 
            </summary>
            <param name="policy">policy to be updated. </param>
            <returns>Updated configuration policy. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicy.PatchAsync(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.ConfigurationPolicy)">
            <summary>
            Patches the configuration policy asynchronously.
            </summary>
            <param name="policy">policy to be updated. </param>
            <returns>Updated configuration policy. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicy.Delete">
            <summary>
            Deletes the configuration policy. 
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicy.DeleteAsync">
            <summary>
            Deletes the configuration policy asynchronously. 
            </summary>
            <returns>A task which completed when the request is finished.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicyCollection">
            <summary>
            Represents the operations that can be done on the partner's configuration policies.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicyCollection.Item(System.String)">
            <summary>
            Retrieves configuration policy behavior.
            </summary>
            <param name="policyId">The policy id.</param>
            <returns>The configuration policy behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicyCollection.ById(System.String)">
            <summary>
            Retrieves configuration policy behavior.
            </summary>
            <param name="policyId">The policy id.</param>
            <returns>The configuration policy behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicyCollection.Get">
            <summary>
            Retrieves all configuration policies.
            </summary>
            <returns>The collection of configuration policies.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IConfigurationPolicyCollection.GetAsync">
            <summary>
            Asynchronously retrieves all configuration policies.
            </summary>
            <returns>The collection of configuration policies.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevice">
            <summary>
            Represents the operations that can be done on the partner's device.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevice.Patch(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device)">
            <summary>
            Updates a device associated to the customer with a configuration policy.
            </summary>
            <param name="updateDevice">Device to be updated.</param>
            <returns>Device that is to be updated.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevice.PatchAsync(Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device)">
            <summary>
            Asynchronously updates a device with a configuration policy.
            </summary>
            <param name="updateDevice">Device to be updated. </param>
            <returns>The updated device.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevice.Delete">
            <summary>
            Deletes a device.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevice.DeleteAsync">
            <summary>
            Asynchronously deletes a device.
            </summary>
            <returns>The task that is returned once the operation is completed.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IDeviceCollection">
            <summary>
            Represents the operations that can be done on the partner's devices.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.IDeviceCollection.Item(System.String)">
            <summary>
            Retrieves a specific customer's device behavior.
            </summary>
            <param name="deviceId">The device id.</param>
            <returns>The customer device behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDeviceCollection.ById(System.String)">
            <summary>
            Retrieves a specific customer's device behavior.
            </summary>
            <param name="deviceId">The device id.</param>
            <returns>The customer device behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDeviceCollection.Get">
            <summary>
            Retrieves all devices.
            </summary>
            <returns>The devices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDeviceCollection.GetAsync">
            <summary>
            Asynchronously retrieves all devices.
            </summary>
            <returns>The devices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDeviceCollection.Create(System.Collections.Generic.IEnumerable{Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device})">
            <summary>
            Adds devices to existing devices batch.
            </summary>
            <param name="newDevices">The new devices to be created.</param>
            <returns>The location which indicates the URL of the API to query for status of the create request.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDeviceCollection.CreateAsync(System.Collections.Generic.IEnumerable{Microsoft.Store.PartnerCenter.Models.DevicesDeployment.Device})">
            <summary>
            Asynchronously adds devices to existing devices batch.
            </summary>
            <param name="newDevices">The new devices to be created.</param>
            <returns>The location which indicates the URL of the API to query for status of the create request.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IBatchJobStatus">
            <summary>
            Represents the operations that can be done on the partner's Batch Upload Status.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IBatchJobStatus.Get">
            <summary>
            Retrieves a specific customer devices batch upload status details.
            </summary>
            <returns>The devices batch upload status details.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IBatchJobStatus.GetAsync">
            <summary>
            Retrieves a specific customer devices batch upload status details asynchronously.
            </summary>
            <returns>The devices batch upload status details.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevicesBatchCollection">
            <summary>
            Represents the operations that can be done on the partner's devices batches.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevicesBatchCollection.Item(System.String)">
            <summary>
            Retrieves a specific customer devices batch behavior.
            </summary>
            <param name="devicebatchId">The devices batch id.</param>
            <returns>The devices batch behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevicesBatchCollection.ById(System.String)">
            <summary>
            Retrieves a specific customer devices batch behavior.
            </summary>
            <param name="devicebatchId">The devices batch id.</param>
            <returns>The devices batch behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevicesBatchCollection.Get">
            <summary>
            Retrieves all devices batches.
            </summary>
            <returns>The devices batches.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.DevicesDeployment.IDevicesBatchCollection.GetAsync">
            <summary>
            Asynchronously retrieves all devices batches.
            </summary>
            <returns>The devices batches.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionByEntitlementTypeOperations">
            <summary>
            Entitlement collection by entitlement type operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionByEntitlementTypeOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionByEntitlementTypeOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer id.</param>
            <param name="entitlementType">The entitlement type.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionByEntitlementTypeOperations.Get">
            <summary>
            Retrieves entitlement collection with the given entitlement type.
            </summary>
            <returns>The collection of entitlements corresponding to a specific entitlement type for the customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionByEntitlementTypeOperations.GetAsync">
            <summary>
            Asynchronously retrieves entitlement collection with the given entitlement type.
            </summary>
            <returns>The collection of entitlements corresponding to a specific entitlement type for the customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionByEntitlementTypeOperations.Get(System.Boolean)">
            <summary>
            Retrieves entitlement collection with the given entitlement type.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements corresponding to a specific entitlement type for the customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionByEntitlementTypeOperations.GetAsync(System.Boolean)">
            <summary>
            Asynchronously retrieves entitlement collection with the given entitlement type.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements corresponding to a specific entitlement type for the customer.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations">
            <summary>
            Entitlement collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations.ByEntitlementType(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations.Get(System.Boolean)">
            <summary>
            Retrieves the entitlements for a customer.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements for the customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.EntitlementCollectionOperations.GetAsync(System.Boolean)">
            <summary>
            An asynchronous operation to retrieve the entitlements for a customer.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements for the customer.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Entitlements.IEntitlementCollection">
            <summary>
            Holds operations that can be performed on entitlements associated to the customer based on the logged in partner.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.IEntitlementCollection.ByEntitlementType(System.String)">
            <summary>
            Retrieves the operations that can be applied on entitlements with a given entitlement type.
            </summary>
            <param name="entitlementType">The Entitlement Type.</param>
            <returns>The entitlement collection operations by entitlement type.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.IEntitlementCollection.Get(System.Boolean)">
            <summary>
            Retrieves the entitlements for a customer.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements for the customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.IEntitlementCollection.GetAsync(System.Boolean)">
            <summary>
            An asynchronous operation to retrieve the entitlements for a customer.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements for the customer.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Entitlements.IEntitlementCollectionByEntitlementType">
            <summary>
            Holds operations that can be performed on entitlements (by type) associated to the customer based on the logged in partner.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.IEntitlementCollectionByEntitlementType.Get(System.Boolean)">
            <summary>
            Retrieves entitlement collection with the given entitlement type.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements corresponding to a specific entitlement type for the customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Entitlements.IEntitlementCollectionByEntitlementType.GetAsync(System.Boolean)">
            <summary>
            Asynchronously retrieves entitlement collection with the given entitlement type.
            </summary>
            <param name="showExpiry">A flag to indicate if the expiry date is required to be returned along with the entitlement (if applicable).</param>
            <returns>The collection of entitlements corresponding to a specific entitlement type for the customer.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Enumerators.IUtilizationCollectionEnumeratorContainer">
            <summary>
            Groups all supported utilization record enumerators for usage based subscriptions.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IUtilizationCollectionEnumeratorContainer.Azure">
            <summary>
            Gets a factory that creates Azure utilization record collection enumerators.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Enumerators.UtilizationCollectionEnumeratorContainer">
            <summary>
            Utilization collection enumerator container implementation class.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.UtilizationCollectionEnumeratorContainer.azureUtilizationRecordEnumeratorFactory">
            <summary>
            A lazy reference to an Azure utilization record enumerator factory.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.UtilizationCollectionEnumeratorContainer.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Enumerators.UtilizationCollectionEnumeratorContainer"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.UtilizationCollectionEnumeratorContainer.Azure">
            <summary>
            Gets a factory that creates Azure utilization record collection enumerators.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1">
            <summary>
            Base implementation for resource collection enumerators.
            </summary>
            <typeparam name="T">The type of the resource collection.</typeparam>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.resourceCollection">
            <summary>
            The current resource collection.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.resourceCollectionConverter">
            <summary>
            The resource collection JSON converter.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.#ctor(Microsoft.Store.PartnerCenter.IPartner,`0,Newtonsoft.Json.JsonConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="resourceCollection">The initial resource collection.</param>
            <param name="resourceCollectionConverter">An optional converter.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.IsFirstPage">
            <summary>
            Gets whether the current customer collection is the first page of results or not.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.IsLastPage">
            <summary>
            Gets whether the current customer collection is the last page of results or not.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.HasValue">
            <summary>
            Gets whether the current result collection has a value or not. This indicates if the collection has been fully enumerated or not.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.Current">
            <summary>
            The current resource collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.Next(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Retrieves the next customer result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.NextAsync(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Asynchronously retrieves the next customer result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
            <returns>A task which completes when fetching the next set of results is done.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.Previous(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Retrieves the previous customer result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.BaseResourceCollectionEnumerator`1.PreviousAsync(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Asynchronously retrieves the previous customer result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
            <returns>A task which completes when fetching the previous set of results is done.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Enumerators.IndexBasedCollectionEnumerator`2">
            <summary>
            Enumerator for index based pagination
            Index based - Paged query where index and page size is used.
            </summary>
            <typeparam name="T">The type of resource</typeparam>
            /// <typeparam name="TResourceCollection">The type of resource collection.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.IndexBasedCollectionEnumerator`2.#ctor(Microsoft.Store.PartnerCenter.IPartner,`1,Newtonsoft.Json.JsonConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Enumerators.IndexBasedCollectionEnumerator`2"/> class.
            </summary>
            <param name="partnerOperations">A partner operations instance.</param>
            <param name="seekBasedResourceCollection">The paged resource collection to enumerate from.</param>
            <param name="resourceCollectionConverter">Optional: The resource collection converter.</param>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1">
            <summary>
            Provides resource collection enumeration capabilities. This interface can page through results and determines whether the current page
            is the first or last page or not.
            </summary>
            <typeparam name="T">The enumeration result type.</typeparam>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.IsFirstPage">
            <summary>
            Gets whether the current result collection is the first page of results or not.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.IsLastPage">
            <summary>
            Gets whether the current result collection is the last page of results or not.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.HasValue">
            <summary>
            Gets whether the current result collection has a value or not. This indicates if the collection has been fully enumerated or not.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.Current">
            <summary>
            Gets the current resource collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.Next(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Retrieves the next result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.NextAsync(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Asynchronously retrieves the next result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
            <returns>A task which completes when fetching the next set of results is done.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.Previous(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Retrieves the previous result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumerator`1.PreviousAsync(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Asynchronously retrieves the previous result set.
            </summary>
            <param name="context">An optional request context. If not provided, the context associated with the partner operations will be used.</param>
            <returns>A task which completes when fetching the previous set of results is done.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer">
            <summary>
            Contains supported resource collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.Offers">
            <summary>
            Gets a factory that creates offer collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.Customers">
            <summary>
            Gets a factory that creates customer collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.CustomerUsers">
            <summary>
            Gets a factory that creates customer user collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.Invoices">
            <summary>
            Gets a factory that creates invoice collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.ServiceRequests">
            <summary>
            Gets a factory that creates service request collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.InvoiceLineItems">
            <summary>
            Gets a factory that creates invoice line item collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.AuditRecords">
            <summary>
            Gets a factory that creates audit record collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.Utilization">
            <summary>
            Gets factories that create enumerators for utilization records for different subscriptions.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.IResourceCollectionEnumeratorContainer.Products">
            <summary>
            Gets a factory that creates product collection enumerators.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer">
            <summary>
            Contains supported resource collection enumerators.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.offerEnumeratorFactory">
            <summary>
            A lazy reference to an offer enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.customerEnumeratorFactory">
            <summary>
            A lazy reference to a customer enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.customerUserEnumeratorFactory">
            <summary>
            A lazy reference to a customer user enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.invoiceEnumeratorFactory">
            <summary>
            A lazy reference to an invoice enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.serviceRequestEnumeratorFactory">
            <summary>
            A lazy reference to a service request enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.invoiceLineItemEnumeratorFactory">
            <summary>
            A lazy reference to an invoice line enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.reconciliationLineItemEnumeratorFactory">
            <summary>
            A lazy reference to an reconciliation line enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.auditRecordEnumeratorFactory">
            <summary>
            A lazy reference to an audit record enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.utilizationRecordEnumeratorContainer">
            <summary>
            A lazy reference to a utilization record enumerator factory.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.productEnumeratorFactory">
            <summary>
            A lazy reference to a product enumerator factory.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.Offers">
            <summary>
            Gets a factory that creates offer collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.Customers">
            <summary>
            Gets a factory that creates customer collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.Invoices">
            <summary>
            Gets a factory that creates invoice collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.ServiceRequests">
            <summary>
            Gets a factory that creates service request collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.InvoiceLineItems">
            <summary>
            Gets a factory that creates invoice line item collection enumerators.
            </summary>        
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.CustomerUsers">
            <summary>
            Gets a factory that creates customer user collection enumerators.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.AuditRecords">
            <summary>
            Gets a factory that creates an enumerator for audit records.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.Utilization">
            <summary>
            Gets factories that create enumerators for utilization records for different subscriptions.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Enumerators.ResourceCollectionEnumeratorContainer.Products">
            <summary>
            Gets a factory that creates product collection enumerators.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityPutOperations`1">
            <summary>
            Groups operations for updating a single entity.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityPutOperations`1.Put(`0)">
            <summary>
            Updates an entity.
            </summary>
            <param name="entity">The entity information.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityPutOperations`1.PutAsync(`0)">
            <summary>
            Asynchronously updates an entity.
            </summary>
            <param name="entity">The entity information.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntitySelector`1">
            <summary>
            Defines operations for selecting an entity out of a collection.
            </summary>
            <typeparam name="TEntity">The type of the entity behavior.</typeparam>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.GenericOperations.IEntitySelector`1.Item(System.String)">
            <summary>
            Gets the behavior for an entity using the entity's ID.
            </summary>
            <param name="id">The entity's ID.</param>
            <returns>The entity's behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntitySelector`1.ById(System.String)">
            <summary>
            Retrieves the behavior for an entity using the entity's ID.
            </summary>
            <param name="id">The entity's ID.</param>
            <returns>The entity's behavior.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.ICountrySelector`1">
            <summary>
            Returns operations interfaces based on the given country.
            </summary>
            <typeparam name="TOperations">The type of the operations to return.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.ICountrySelector`1.ByCountry(System.String)">
            <summary>
            Customizes operations based on the given country.
            </summary>
            <param name="country">The country to be used by the returned operations.</param>
            <returns>An operations interface customized for the provided country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityDeleteOperations`1">
            <summary>
            Groups operations for deleting a single entity.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityDeleteOperations`1.Delete">
            <summary>
            Deletes an entity.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityDeleteOperations`1.DeleteAsync">
            <summary>
            Asynchronously deletes an entity.
            </summary>
            <returns>A task which completes once the deletion is done.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityPatchOperations`1">
            <summary>
            Groups operations for patching a single entity.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityPatchOperations`1.Patch(`0)">
            <summary>
            Patches an entity.
            </summary>
            <param name="entity">The entity information.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityPatchOperations`1.PatchAsync(`0)">
            <summary>
            Asynchronously patches an entity.
            </summary>
            <param name="entity">The entity information.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityExistsOperations">
            <summary>
            Groups operations for checking if a single entity exists or not.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityExistsOperations.Exists">
            <summary>
            Checks if an entity exists or not.
            </summary>
            <returns>A value indicating whether the entity exists or not.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityExistsOperations.ExistsAsync">
            <summary>
            Asynchronously checks if an entity exists or not.
            </summary>
            <returns>A value indicating whether the entity exists or not.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntireEntityCollectionRetrievalOperations`2">
            <summary>
            A generic interface which represents operations for getting an entire collection of entities.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <typeparam name="TResourceCollection">The entity collection type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntireEntityCollectionRetrievalOperations`2.Get">
            <summary>
            Retrieves all entities.
            </summary>
            <returns>The entities.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntireEntityCollectionRetrievalOperations`2.GetAsync">
            <summary>
            Asynchronously retrieves all entities.
            </summary>
            <returns>The entities.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityCollectionRetrievalOperations`2">
            <summary>
            Groups all operations related to retrieving a collection of entities.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <typeparam name="TResourceCollection">The entity collection type.</typeparam>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityCreateOperations`1">
            <summary>
            Groups operations for creating a single entity.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityCreateOperations`2">
            <summary>
            Groups operations for creating a single entity.
            </summary>
            <typeparam name="T">The entity type request.</typeparam>
            <typeparam name="T1">The entity type response.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityCreateOperations`2.Create(`0)">
            <summary>
            Creates a new entity.
            </summary>
            <param name="newEntity">The new entity information.</param>
            <returns>The entity information that was just created.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityCreateOperations`2.CreateAsync(`0)">
            <summary>
            Asynchronously creates a new entity.
            </summary>
            <param name="newEntity">The new entity information.</param>
            <returns>The entity information that was just created.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityGetOperations`1">
            <summary>
            Groups operations for getting a single entity.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityGetOperations`1.Get">
            <summary>
            Retrieves an entity.
            </summary>
            <returns>The entity.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityGetOperations`1.GetAsync">
            <summary>
            Asynchronously retrieves an entity.
            </summary>
            <returns>The entity.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.GenericOperations.IEntityUpdateOperations`1">
            <summary>
            Groups operations for updating a single entity.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityUpdateOperations`1.Update(`0)">
            <summary>
            Updates an entity.
            </summary>
            <param name="entity">The entity information.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.GenericOperations.IEntityUpdateOperations`1.UpdateAsync(`0)">
            <summary>
            Asynchronously updates an entity.
            </summary>
            <param name="entity">The entity information.</param>
            <returns>The updated entity.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Extensions.ExtensionsOperations">
            <summary>
            Extensions operations implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Extensions.ExtensionsOperations.product">
            <summary>
            The product extensions operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.ExtensionsOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Extensions.ExtensionsOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Extensions.ExtensionsOperations.Product">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Extensions.IExtensions">
            <summary>
            Holds operations that extend another set of operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Extensions.IExtensions.Product">
            <summary>
            Retrieves the product extension operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Extensions.Products.IProductExtensions">
            <summary>
            Holds extension operations for products.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.IProductExtensions.ByCountry(System.String)">
            <summary>
            Retrieves the extension operations that can be applied on products from a given country.
            </summary>
            <param name="country">The country name.</param>
            <returns>The product extensions operations by country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Extensions.Products.IProductExtensionsByCountry">
            <summary>
            Holds extension operations for products by country.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.IProductExtensionsByCountry.CheckInventory(Microsoft.Store.PartnerCenter.Models.Products.InventoryCheckRequest)">
            <summary>
            Retrieves inventory validation results for the provided country.
            </summary>
            <param name="checkRequest">The request for the inventory check.</param>
            <returns>The inventory check results.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.IProductExtensionsByCountry.CheckInventoryAsync(Microsoft.Store.PartnerCenter.Models.Products.InventoryCheckRequest)">
            <summary>
            Asynchronously retrieves inventory validation results for the provided country.
            </summary>
            <param name="checkRequest">The request for the inventory check.</param>
            <returns>The inventory check results.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsByCountryOperations">
            <summary>
            Product extensions operations implementation by country.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsByCountryOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsByCountryOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="country">The country on which to base the corresponding products.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsByCountryOperations.CheckInventory(Microsoft.Store.PartnerCenter.Models.Products.InventoryCheckRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsByCountryOperations.CheckInventoryAsync(Microsoft.Store.PartnerCenter.Models.Products.InventoryCheckRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsOperations">
            <summary>
            Extensions operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Extensions.Products.ProductExtensionsOperations.ByCountry(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IEstimateCollection">
            <summary>
            Represents the operations that can be done on the partner's estimate collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IEstimateCollection.Links">
            <summary>
            Obtains the estimate links of the reconciliation line items.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IEstimateLink">
            <summary>
            Represents the operations available to an estimate link.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IEstimateLink.ByCurrency(System.String)">
            <summary>
            Retrieves the operations that can be applied on products from a given country.
            </summary>
            <param name="currencyCode">The country name.</param>
            <returns>The product collection operations by country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IEstimateLinkCollectionByCurrency">
            <summary>
            Holds operations that can be performed on estimate link collection that belong to a given currency.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IEstimateLinkCollectionByCurrency.Get">
            <summary>
            Retrieves all the products in the given country and catalog view.
            </summary>
            <returns>The products in the given country and catalog view.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IEstimateLinkCollectionByCurrency.GetAsync">
            <summary>
            Asynchronously retrieves all the products in the given country and catalog view.
            </summary>
            <returns>The products in the given country and catalog view.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IReconciliationLineItemCollection">
            <summary>
            Represents the operations that can be done on partner's reconciliation line items.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IReconciliationLineItemCollection.Get">
            <summary>
            Retrieves reconciliation line items for a specific billing provider and invoice line item type 
            </summary>
            <returns>The collection of reconciliation line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IReconciliationLineItemCollection.GetAsync">
            <summary>
            Asynchronously retrieves reconciliation line items collection of the partner
            </summary>
            <returns>The collection of reconciliation line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IReconciliationLineItemCollection.Seek(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Seeks pages of reconciliation line items collection  of the partner
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>The next page of utilization records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IReconciliationLineItemCollection.SeekAsync(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Asynchronously seeks pages of reconciliation line items collection of the partner
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>A task that returns the next page of utilization records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoiceSummaryCollection">
            <summary>
            Represents all the operations that can be done on invoice summary collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceSummaryCollection.Get">
            <summary>
            Retrieves the invoice summary collection. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice summary collection.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceSummaryCollection.GetAsync">
            <summary>
            Asynchronously retrieves the invoice summary collection. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice summary collection.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoiceTaxReceiptStatement">
            <summary>
            Represents the operations available to an invoice tax receipt statement.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceTaxReceiptStatement.Get">
            <summary>
            Retrieves the PDF invoice tax receipt statement.
            </summary>
            <returns>The invoice tax receipt statement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceTaxReceiptStatement.GetAsync">
            <summary>
            Asynchronously retrieves the PDF invoice tax receipt statement.
            </summary>
            <returns>The invoice tax receipt statement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.EstimateCollectionOperations">
            <summary>
            Defines the operations available for estimate collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.EstimateCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.EstimateCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.EstimateCollectionOperations.Links">
            <summary>
            Gets an estimate links operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkOperations">
            <summary>
            Represents the operations available on an estimate link.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkOperations.ByCurrency(System.String)">
            <summary>
            Get estimate link collection by currency
            </summary>
            <param name="currencyCode">The currency code</param>
            <returns>The estimate link collection by currency operations</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkCollectionByCurrencyOperations">
            <summary>
            Represents the operations available on an estimate link collection by currency.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkCollectionByCurrencyOperations.currencyCode">
            <summary>
            The currency code.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkCollectionByCurrencyOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkCollectionByCurrencyOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="currencyCode">The currency code.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkCollectionByCurrencyOperations.Get">
            <summary>
            Retrieves the estimate link resource collection.
            </summary>
            <returns>The estimate link resource collection.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.EstimateLinkCollectionByCurrencyOperations.GetAsync">
            <summary>
            Asynchronously retrieves the estimate link resource collection.
            </summary>
            <returns>The estimate link resource collection.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations">
            <summary>
            The operations available for the partner's reconciliation line item collection.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.provider">
            <summary>
            The type of provider.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.invoiceLineItemType">
            <summary>
            The provider of invoice line item type information.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.currencyCode">
            <summary>
            The type of currency code.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.period">
            <summary>
            The provider of period information.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.pageSize">
            <summary>
            The page size.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.pageMaxSizeReconciliationLineItems">
            <summary>
            The maximum page size for reconciliation line items.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The partner operations.</param>
            <param name="invoiceId">The invoice Id.</param>
            <param name="billingProvider">The billing provider type. example: All, Marketplace.</param>
            <param name="invoiceLineItemType">The invoice line item. example: BillingLineItems, UsageLineItems.</param>
            <param name="currencyCode">The currency code.</param>
            <param name="period">The period for unbilled reconciliation. example: current, previous.</param>
            <param name="size">The page size.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.Get">
            <summary>
             Retrieves reconciliation line items for a specific billing provider and recon line item type 
            </summary>
            <returns>The collection of reconciliation line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.GetAsync">
            <summary>
             Asynchronously retrieves reconciliation line items collection of the partner
            </summary>
            <returns>The collection of reconciliation line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.Seek(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Seeks pages of reconciliation line items collection of the partner
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>The next page of reconciliation line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReconciliationLineItemCollectionOperations.SeekAsync(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Asynchronously seeks pages of reconciliation line items collection of the partner
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>A task that returns the next page of reconciliation line items.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryCollectionOperations">
            <summary>
            Represents the operations that can be done on invoice summary collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryCollectionOperations.Get">
            <summary>
            Retrieves invoice summary collection of the partner's billing information.
            </summary>
            <returns>The invoice summary collection.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves invoice summary collection of the partner's billing information.
            </summary>
            <returns>The invoice summary collection.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceTaxReceiptStatementOperations">
            <summary>
            Represents the operations available on an invoice tax receipt statement.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceTaxReceiptStatementOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceTaxReceiptStatementOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id.</param>
            <param name="taxReceiptId">The tax receipt id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceTaxReceiptStatementOperations.Get">
            <summary>
            Retrieves the invoice tax receipt statement. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice tax receipt statement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceTaxReceiptStatementOperations.GetAsync">
            <summary>
            Asynchronously retrieves the invoice tax receipt statement. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice tax receipt statement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IReceipt">
            <summary>
            Represents the operations that can be done on Partner's invoice receipts.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IReceipt.Documents">
            <summary>
            Obtains the receipt documents behavior of the invoices.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IReceiptCollection">
            <summary>
            Represents the operations that can be done on Partner's invoice receipts.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IReceiptCollection.Item(System.String)">
            <summary>
            Gets a specific Invoice receipt behavior.
            </summary>
            <param name="receiptId">The receipt Id.</param>
            <returns>Invoice receipt operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IReceiptCollection.ById(System.String)">
            <summary>
            Obtains a specific Invoice receipt behavior.
            </summary>
            <param name="receiptId">The receipt id.</param>
            <returns>Invoice receipt operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IReceiptDocuments">
            <summary>
            Defines the operations available on receipt documents.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IReceiptDocuments.Statement">
            <summary>
            Gets an invoice statement operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IReceiptStatement">
            <summary>
            Represents the operations available to an invoice statement.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IReceiptStatement.Get">
            <summary>
            Retrieves the PDF receipt statement.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IReceiptStatement.GetAsync">
            <summary>
            Asynchronously retrieves the PDF receipt statement.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptCollectionOperations">
            <summary>
            Represents the operations that can be done on Partner's invoice receipts.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReceiptCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.ReceiptCollectionOperations.Item(System.String)">
            <summary>
            Gets a single receipt operations.
            </summary>
            <param name="receiptId">The receipt id.</param>
            <returns>The invoice operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReceiptCollectionOperations.ById(System.String)">
            <summary>
            Gets a single receipt operations.
            </summary>
            <param name="receiptId">The invoice id.</param>
            <returns>The invoice operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptDocumentsOperations">
            <summary>
            Defines the operations available for an invoice document.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReceiptDocumentsOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptDocumentsOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id</param>
            <param name="receiptId">The receipt id</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.ReceiptDocumentsOperations.Statement">
            <summary>
            Gets an invoice statement operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptOperations">
            <summary>
            Represents the operations that can be done on Partner's invoice receipts.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReceiptOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id.</param>
            <param name="receiptId">The receipt id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.ReceiptOperations.Documents">
            <summary>
            Gets an invoice documents operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptStatementOperations">
            <summary>
            Represents the operations available on an receipt statement.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReceiptStatementOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.ReceiptStatementOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id.</param>
            <param name="receiptId">The receipt id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReceiptStatementOperations.Get">
            <summary>
            Retrieves the receipt statement. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.ReceiptStatementOperations.GetAsync">
            <summary>
            Asynchronously retrieves the invoice statement. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoiceDocuments">
            <summary>
            Defines the operations available on invoice documents.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IInvoiceDocuments.Statement">
            <summary>
            Gets an invoice statement operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoiceLineItemCollection">
            <summary>
            Represents the operations that can be done on partner's invoice line items.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceLineItemCollection.Get">
            <summary>
            Retrieves invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <returns>The collection of invoice line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceLineItemCollection.GetAsync">
            <summary>
            Asynchronously retrieves invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <returns>The collection of invoice line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceLineItemCollection.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <param name="size">The maximum number of invoice line items to return.</param>
            <param name="offset">The page offset.</param>
            <returns>The subset of invoice line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceLineItemCollection.GetAsync(System.Int32,System.Int32)">
            <summary>
             Asynchronously retrieves a subset of invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <param name="size">The maximum number of invoice line items to return.</param>
            <param name="offset">The page offset.</param>
            <returns>The subset of invoice line items.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoiceStatement">
            <summary>
            Represents the operations available to an invoice statement.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceStatement.Get">
            <summary>
            Retrieves the PDF invoice statement.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceStatement.GetAsync">
            <summary>
            Asynchronously retrieves the PDF invoice statement.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoiceSummary">
            <summary>
            Represents all the operations that can be done on an invoice summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceSummary.Get">
            <summary>
            Retrieves the invoice summary. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceSummary.GetAsync">
            <summary>
            Asynchronously retrieves the invoice summary. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceDocumentsOperations">
            <summary>
            Defines the operations available for an invoice document.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceDocumentsOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceDocumentsOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.InvoiceDocumentsOperations.Statement">
            <summary>
            Gets an invoice statement operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations">
            <summary>
            The operations available for the partner's invoice line item collection.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations.billingProvider">
            <summary>
            The provider of billing information.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations.invoiceLineItemType">
            <summary>
            The type of invoice line item.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,Microsoft.Store.PartnerCenter.Models.Invoices.BillingProvider,Microsoft.Store.PartnerCenter.Models.Invoices.InvoiceLineItemType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The partner operations.</param>
            <param name="invoiceId">The invoice Id.</param>
            <param name="billingProvider">The provider of billing information,</param>
            <param name="invoiceLineItemType">The type of invoice line item.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations.Get">
            <summary>
             Retrieves invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <returns>The collection of invoice line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations.GetAsync">
            <summary>
             Asynchronously retrieves invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <returns>The collection of invoice line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations.Get(System.Int32,System.Int32)">
            <summary>
             Retrieves a subset of invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <param name="size">The maximum number of invoice line items to return.</param>
            <param name="offset">The page offset.</param>
            <returns>The subset of invoice line items.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceLineItemCollectionOperations.GetAsync(System.Int32,System.Int32)">
            <summary>
             Asynchronously retrieves a subset of invoice line items for a specific billing provider and invoice line item type 
            </summary>
            <param name="size">The maximum number of invoice line items to return.</param>
            <param name="offset">The page offset.</param>
            <returns>The subset of invoice line items.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceStatementOperations">
            <summary>
            Represents the operations available on an invoice statement.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceStatementOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceStatementOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceStatementOperations.Get">
            <summary>
            Retrieves the invoice statement. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceStatementOperations.GetAsync">
            <summary>
            Asynchronously retrieves the invoice statement. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice statement.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryOperations">
            <summary>
            Represents the operations that can be done on an invoice summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryOperations.Get">
            <summary>
            Retrieves summary of the partner's billing information.
            </summary>
            <returns>The invoice summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceSummaryOperations.GetAsync">
            <summary>
            Asynchronously retrieves summary of the partner's billing information.
            </summary>
            <returns>The invoice summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection">
            <summary>
            Represents the operations that can be done on the partner's invoices.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.Summary">
            <summary>
            Gets an invoice summary operations.
            </summary>
            <returns>The invoice summary operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.Summaries">
            <summary>
            Gets invoice summary collection operations.
            </summary>
            <returns>The invoice summary collection.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.Estimates">
            <summary>
            Gets an estimates operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.Item(System.String)">
            <summary>
            Gets a single invoice operations.
            </summary>
            <param name="invoiceId">The invoice id.</param>
            <returns>The invoice operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.ById(System.String)">
            <summary>
            Gets a single invoice operations.
            </summary>
            <param name="invoiceId">The invoice id.</param>
            <returns>The invoice operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.Get">
            <summary>
            Retrieves all the invoices.
            </summary>
            <returns>The invoices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the invoices.
            </summary>
            <returns>The invoices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries invoices associated to the partner.
            </summary>
            <param name="query">The invoice query.
            The <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> can be used to build queries.
            Invoice queries support simple and indexed queries. You can retrieve subsets of invoices by providing an indexed query and specifying the index to start from
            and the page size to retrieve.
            You can also filter invoices using their dates. <see cref="T:Microsoft.Store.PartnerCenter.Models.Invoices.InvoiceSearchField"/> lists
            the supported search fields. You can use the <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation" /> enumeration to specify filtering operations.
            Supported filtering operations are: greater than, greater than or equals, less than, less than or equals, equals, and not equals. You can also compose compound filters
            that use the AND and OR field filter operations to retrieve a specific invoice subset.
            </param>
            <returns>The invoices that match the given query.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoiceCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries invoices associated to the partner.
            </summary>
            <param name="query">The invoice query.
            The <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> can be used to build queries.
            Invoice queries support simple and indexed queries. You can retrieve subsets of invoices by providing an indexed query and specifying the index to start from
            and the page size to retrieve.
            You can also filter invoices using their dates. <see cref="T:Microsoft.Store.PartnerCenter.Models.Invoices.InvoiceSearchField"/> lists
            the supported search fields. You can use the <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation" /> enumeration to specify filtering operations.
            Supported filtering operations are: greater than, greater than or equals, less than, less than or equals, equals, and not equals. You can also compose compound filters
            that use the AND and OR field filter operations to retrieve a specific invoice subset.
            </param>
            <returns>The invoices that match the given query.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.IInvoice">
            <summary>
            Represents all the operations that can be done on an invoice.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IInvoice.Documents">
            <summary>
            Gets the invoice's documents operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.IInvoice.Receipts">
            <summary>
            Obtains the Receipts behavior of the invoice.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoice.By(Microsoft.Store.PartnerCenter.Models.Invoices.BillingProvider,Microsoft.Store.PartnerCenter.Models.Invoices.InvoiceLineItemType)">
            <summary>
            Creates an invoice line item collection operations given a billing provider and invoice line item type.
            </summary>
            <param name="billingProvider">The billing provider.</param>
            <param name="invoiceLineItemType">The invoice line item type.</param>
            <returns>The invoice line item collection operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoice.By(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an invoice line item collection operations given a billing provider and invoice line item type.
            </summary>
            <param name="provider">The provider type. example: All, Marketplace.</param>
            <param name="invoiceLineItemType">The invoice line item. example: BillingLineItems, UsageLineItems.</param>
            <param name="currencyCode">The currency code.</param>
            <param name="period">The period for unbilled reconciliation. example: current, previous.</param>
            <param name="size">The page size.</param>
            <returns>The reconciliation line item collection operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoice.Get">
            <summary>
            Retrieves the invoice. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.IInvoice.GetAsync">
            <summary>
            Asynchronously retrieves the invoice. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The invoice.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations">
            <summary>
            Represents the operations that can be done on Partner's invoices.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.Summary">
            <summary>
            Gets a single invoice summary operations.
            </summary>
            <returns>The invoice summary operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.Summaries">
            <summary>
            Gets invoice summaries operations.
            </summary>
            <returns>The invoice summary operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.Estimates">
            <summary>
            Gets estimates operations.
            </summary>
            <returns>The estimates operations.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.Item(System.String)">
            <summary>
            Gets a single invoice operations.
            </summary>
            <param name="invoiceId">The invoice id.</param>
            <returns>The invoice operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.ById(System.String)">
            <summary>
            Gets a single invoice operations.
            </summary>
            <param name="invoiceId">The invoice id.</param>
            <returns>The invoice operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.Get">
            <summary>
            Retrieves all invoices associated to the partner.
            </summary>
            <returns>The collection of invoices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all invoices associated to the partner.
            </summary>
            <returns>The collection of invoices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Retrieves all invoices associated to the partner.
            </summary>
            <param name="query">The query parameter.</param>
            <returns>The subset of invoices.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously retrieves all invoices associated to the partner.
            </summary>
            <param name="query">The query parameter.</param>
            <returns>The subset of invoices.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations">
            <summary>
            Operations available for the reseller's invoice.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="invoiceId">The invoice id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations.Documents">
            <summary>
            Gets an invoice documents operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations.Receipts">
            <summary>
            Obtains the Receipts behavior of the invoice.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations.By(Microsoft.Store.PartnerCenter.Models.Invoices.BillingProvider,Microsoft.Store.PartnerCenter.Models.Invoices.InvoiceLineItemType)">
            <summary>
            Creates an invoice line item collection operation given a billing provider and invoice line item type.
            </summary>
            <param name="billingProvider">The billing provider.</param>
            <param name="invoiceLineItemType">The invoice line item type.</param>
            <returns>The invoice line item collection operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations.By(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates an invoice line item collection operations given a billing provider and invoice line item type.
            </summary>
            <param name="provider">The provider type. example: All, Marketplace.</param>
            <param name="invoiceLineItemType">The invoice line item. example: BillingLineItems, UsageLineItems.</param>
            <param name="currencyCode">The currency code.</param>
            <param name="period">The period for unbilled reconciliation. example: current, previous.</param>
            <param name="size">The page size.</param>
            <returns>The reconciliation line item collection operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations.Get">
            <summary>
            Retrieves information about a specific invoice.
            </summary>
            <returns>The invoice.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Invoices.InvoiceOperations.GetAsync">
            <summary>
            Asynchronously retrieves information about a specific invoice.
            </summary>
            <returns>The invoice.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCategoryCollectionOperations">
            <summary>
            Customer Offer Category operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCategoryCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCategoryCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCategoryCollectionOperations.Get">
            <summary>
            Gets the offer categories available to customer from partner.
            </summary>
            <returns>Offer categories available to customer from partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCategoryCollectionOperations.GetAsync">
            <summary>
            Asynchronously gets the offer categories available to customer from partner.
            </summary>
            <returns>Offer categories available to customer from partner.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCollectionOperations">
            <summary>
            Customer Offer operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCollectionOperations.Get">
            <summary>
            Gets the offers available to customer from partner.
            </summary>
            <returns>Offers available to customer from partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCollectionOperations.GetAsync">
            <summary>
            Asynchronously gets the offers available to customer from partner.
            </summary>
            <returns>Offers available to customer from partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCollectionOperations.Get(System.Int32,System.Int32)">
            <summary>
            Gets a segment of the offers available to customer from partner.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The desired segment size.</param>
            <returns>The required offers segment.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CustomerOfferCollectionOperations.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously gets a segment of the offers available to customer from partner.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The desired segment size.</param>
            <returns>The required offers segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCategoryCollection">
            <summary>
            Holds operations that can be performed on OfferCategories available for the Customer.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCategoryCollection.Get">
            <summary>
            Retrieves all the offer categories for the provided Customer.
            </summary>
            <returns>The offers for the provided customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCategoryCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the offer categories for the provided Customer.
            </summary>
            <returns>The offers for the provided customer.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCollection">
            <summary>
            Holds operations that can be performed on Offers available for the Customer.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCollection.Get">
            <summary>
            Retrieves all the offers for the provided Customer.
            </summary>
            <returns>The offers for the provided customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the offers for the provided Customer.
            </summary>
            <returns>The offers for the provided customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCollection.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of offers for the provided customer.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers for the provided customer.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICustomerOfferCollection.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of offers for the provided customer.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers for the provided customer.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.CategoryOffersCollectionOperations">
            <summary>
            Category offers operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CategoryOffersCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.CategoryOffersCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="categoryId">The category ID which contains the offers.</param>
            <param name="country">The country on which to base the offers.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CategoryOffersCollectionOperations.Get">
            <summary>
            Retrieves all the offers in the given offer category.
            </summary>
            <returns>The offers in the given offer category.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CategoryOffersCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all the offers in the given offer category.
            </summary>
            <returns>The offers in the given offer category.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CategoryOffersCollectionOperations.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of offers in the given offer category.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers in the given offer category.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.CategoryOffersCollectionOperations.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of offers in the given offer category.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers in the given offer category.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.ICategoryOffersCollection">
            <summary>
            Holds operations that can be performed on offers that belong to an offer category.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICategoryOffersCollection.Get">
            <summary>
            Retrieves all the offers in the given offer category.
            </summary>
            <returns>The offers in the given offer category.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICategoryOffersCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the offers in the given offer category.
            </summary>
            <returns>The offers in the given offer category.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICategoryOffersCollection.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of offers in the given offer category.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers in the given offer category.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.ICategoryOffersCollection.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of offers in the given offer category.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers in the given offer category.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.OfferCountrySelector">
            <summary>
            An implementation that scopes offers and categories into a specific country.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCountrySelector.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.OfferCountrySelector"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCountrySelector.Microsoft#Store#PartnerCenter#GenericOperations#ICountrySelector{Microsoft#Store#PartnerCenter#Offers#IOfferCollection}#ByCountry(System.String)">
            <summary>
            Scopes offers behavior to a specific country.
            </summary>
            <param name="country">The country for which to return offer operations.</param>
            <returns>The offer collection operations customized for the given country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCountrySelector.Microsoft#Store#PartnerCenter#GenericOperations#ICountrySelector{Microsoft#Store#PartnerCenter#Offers#IOfferCategoryCollection}#ByCountry(System.String)">
            <summary>
            Scopes offer categories behavior to a specific country.
            </summary>
            <param name="country">The country for which to return offer category operations.</param>
            <returns>The offer category collection operations customized for the given country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.IOfferAddOns">
            <summary>
            Defines the behavior of an offer's add-ons.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferAddOns.Get">
            <summary>
            Retrieves all the add-ons for the provided offer.
            </summary>
            <returns>The offer add-ons.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferAddOns.GetAsync">
            <summary>
            Asynchronously retrieves all add-ons for the provided offer.
            </summary>
            <returns>The offer add-ons.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferAddOns.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of add-ons for the provided offer.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offer add-ons to return.</param>
            <returns>The requested segment of the offer add-ons.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferAddOns.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of add-ons for the provided offer.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offer add-ons to return.</param>
            <returns>The requested segment of the offer add-ons.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.IOfferCategoryCollection">
            <summary>
            Represents the behavior of offer categories available to partners.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCategoryCollection.Get">
            <summary>
            Retrieves all offer categories available to the partner for the provided country.
            </summary>
            <returns>All offer categories for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCategoryCollection.GetAsync">
            <summary>
            Asynchronously retrieves all offer categories available to the partner for the provided country.
            </summary>
            <returns>All offer categories for the provided country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.IOfferCollection">
            <summary>
            Holds operations that can be performed on offers.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Offers.IOfferCollection.Item(System.String)">
            <summary>
            Gets the operations tied with a specific offer.
            </summary>
            <param name="offerId">The offer id.</param>
            <returns>The offer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCollection.ById(System.String)">
            <summary>
            Retrieves the operations tied with a specific offer.
            </summary>
            <param name="offerId">The offer id.</param>
            <returns>The offer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCollection.Get">
            <summary>
            Retrieves all the offers for the provided country.
            </summary>
            <returns>The offers for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the offers for the provided country.
            </summary>
            <returns>The offers for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCollection.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of offers for the provided country.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers for the given country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCollection.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of offers for the provided country.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers for the given country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOfferCollection.ByCategory(System.String)">
            <summary>
            Retrieves the operations that can be applied on offers that belong to an offer category.
            </summary>
            <param name="categoryId">The offer category Id.</param>
            <returns>The category offers operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.IOffer">
            <summary>
            Holds operations that can be performed on a single offer.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Offers.IOffer.AddOns">
            <summary>
            Gets the operations for the current offer's add-ons.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOffer.Get">
            <summary>
            Retrieves the offer information.
            </summary>
            <returns>The offer information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.IOffer.GetAsync">
            <summary>
            Asynchronously retrieves the offer information.
            </summary>
            <returns>The offer information.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.OfferAddOnsOperations">
            <summary>
            Implements offer add-ons behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferAddOnsOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.OfferAddOnsOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="offerId">The offer Id to get its add on offers.</param>
            <param name="country">The country on which to base the offer add-ons.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferAddOnsOperations.Get">
            <summary>
            Retrieves the add-ons for the given offer.
            </summary>
            <returns>The offer add-ons.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferAddOnsOperations.GetAsync">
            <summary>
            Asynchronously retrieves the add-ons for the given offer.
            </summary>
            <returns>The offer add-ons.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferAddOnsOperations.Get(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of offers  for the provided country.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferAddOnsOperations.GetAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of offers  for the provided country.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers for the provided country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.OfferCategoryCollectionOperations">
            <summary>
            Offers categories implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCategoryCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.OfferCategoryCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="country">The country on which to base the offer categories.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCategoryCollectionOperations.Get">
            <summary>
            Retrieves all offer categories available to the partner for the provided country.
            </summary>
            <returns>All offer categories for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCategoryCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all offer categories available to the partner for the provided country.
            </summary>
            <returns>All offer categories for the provided country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations">
            <summary>
            Offer Collection operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="country">The country on which to base the offers.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.Item(System.String)">
            <summary>
            Gets the operations tied with a specific offer.
            </summary>
            <param name="offerId">The offer id.</param>
            <returns>The offer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.ById(System.String)">
            <summary>
            Retrieves the operations tied with a specific offer.
            </summary>
            <param name="offerId">The offer id.</param>
            <returns>The offer operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.Get">
            <summary>
            Retrieves all the offers for the provided country.
            </summary>
            <returns>All offers for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all the offers for the provided country.
            </summary>
            <returns>All offers for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.Get(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of offers for the provided country.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers  for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.GetAsync(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of offers  for the provided country.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of offers to return.</param>
            <returns>The requested segment of the offers for the provided country.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferCollectionOperations.ByCategory(System.String)">
            <summary>
            Retrieves the operations that can be applied on offers the belong to an offer category.
            </summary>
            <param name="categoryId">The offer category Id.</param>
            <returns>The category offers operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Offers.OfferOperations">
            <summary>
            Single offer operations implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Offers.OfferOperations.addOns">
            <summary>
            The offer add on operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Offers.OfferOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="offerId">The offer Id.</param>
            <param name="country">The country on which to base the offer.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Offers.OfferOperations.AddOns">
            <summary>
            Gets the operations for the current offer's add-ons.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferOperations.Get">
            <summary>
            Retrieves the offer details.
            </summary>
            <returns>The offer details.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Offers.OfferOperations.GetAsync">
            <summary>
            Asynchronously retrieves the offer details.
            </summary>
            <returns>The offer details.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrderActivationLinks">
            <summary>
            Encapsulates customer order activation link behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderActivationLinks.Get">
            <summary>
            Retrieves the order activation link.
            </summary>
            <returns>The order activation link.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderActivationLinks.GetAsync">
            <summary>
            Asynchronously retrieves the order activation link.
            </summary>
            <returns>The order activation link.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrderLineItem">
            <summary>
            Encapsulates a customer order line item behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.IOrderLineItem.ActivationLink">
            <summary>
            Encapsulates a customer order line item activation link.
            </summary>
            <returns>The activation link.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrderLineItemActivationLink">
            <summary>
            Encapsulates customer order line item activation link behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderLineItemActivationLink.Get">
            <summary>
            Retrieves the order line item activation link.
            </summary>
            <returns>The order line item activation link.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderLineItemActivationLink.GetAsync">
            <summary>
            Asynchronously retrieves the order line item activation link.
            </summary>
            <returns>The order line item activation link.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrderLineItemCollection">
            <summary>
            Encapsulates customer order line item behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.IOrderLineItemCollection.Item(System.String)">
            <summary>
            Gets a specific order line item behavior.
            </summary>
            <param name="lineItemNumber">The line item number.</param>
            <returns>The order operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderLineItemCollection.ById(System.String)">
            <summary>
            Obtains a specific order line item behavior.
            </summary>
            <param name="lineItemNumber">The line item number.</param>
            <returns>The order operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrderProvisioningStatus">
            <summary>
            Holds operations that apply Order provisioning status.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderProvisioningStatus.Get">
            <summary>
            Retrieves the order provisioning status.
            </summary>
            <returns>The order provisioning status.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderProvisioningStatus.GetAsync">
            <summary>
            Asynchronously retrieves the order provisioning status.
            </summary>
            <returns>The order provisioning status.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderActivationLinks">
            <summary>
            Order activation link operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderActivationLinks.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderActivationLinks"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="orderId">The order Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderActivationLinks.Get">
            <summary>
            Retrieves the order activation link collection.
            </summary>
            <returns>The order activation link collection.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderActivationLinks.GetAsync">
            <summary>
            Asynchronously retrieves the activation link collection for an order.
            </summary>
            <returns>The order activation link collection.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderLineItemActivationLinkOperations">
            <summary>
            Order line item activation link operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderLineItemActivationLinkOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderLineItemActivationLinkOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="orderId">The order Id.</param>
            <param name="lineItemNumber">The line item number.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderLineItemActivationLinkOperations.Get">
            <summary>
            Retrieves the order line item activation link collection.
            </summary>
            <returns>The order line item activation link collection.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderLineItemActivationLinkOperations.GetAsync">
            <summary>
            Asynchronously retrieves the order line item activation link collection.
            </summary>
            <returns>The order line item activation link collection.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderLineItemCollectionOperations">
            <summary>
            Order line item collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderLineItemCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderLineItemCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
            <param name="orderId">The order Id</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.OrderLineItemCollectionOperations.Item(System.String)">
            <summary>
            Obtains the order line item operations.
            </summary>
            <param name="lineItemNumber">The order line item number.</param>
            <returns>The order line item operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderLineItemCollectionOperations.ById(System.String)">
            <summary>
            Obtains a specific line item operations.
            </summary>
            <param name="lineItemNumber">The order line item number.</param>
            <returns>The order line item operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderLineItemOperations">
            <summary>
            Order line item operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderLineItemOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderLineItemOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="orderId">The order Id.</param>
            <param name="lineItemNumber">The line item number</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.OrderLineItemOperations.ActivationLink">
            <summary>
            Gets an Order line item activation link operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderProvisioningStatusOperations">
            <summary>
            Implements operations that apply to order provisioning status.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderProvisioningStatusOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderProvisioningStatusOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="orderId">The order Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderProvisioningStatusOperations.Get">
            <summary>
            Retrieves the order provisioning status.
            </summary>
            <returns>The customer order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderProvisioningStatusOperations.GetAsync">
            <summary>
            Asynchronously retrieves the order provisioning status.
            </summary>
            <returns>The order provisioning status.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrderCollectionByBillingCycleType">
            <summary>
            Holds operations that can be performed on orders given a billing cycle type.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollectionByBillingCycleType.Get">
            <summary>
            Retrieves all customer orders.
            </summary>
            <returns>The customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollectionByBillingCycleType.GetAsync">
            <summary>
            Asynchronously retrieves all customer orders.
            </summary>
            <returns>The customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollectionByBillingCycleType.Get(System.Boolean)">
            <summary>
            Retrieves all customer orders.
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>The customer orders including pricing details (based on access permissions) when requested..</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollectionByBillingCycleType.GetAsync(System.Boolean)">
            <summary>
            Asynchronously retrieves all customer orders.
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>The customer orders including pricing details (based on access permissions) when requested..</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderCollectionByBillingCycleTypeOperations">
            <summary>
            Order collection by billing cycle type operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionByBillingCycleTypeOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,Microsoft.Store.PartnerCenter.Models.Offers.BillingCycleType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderCollectionByBillingCycleTypeOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
            <param name="billingCyleType">The billing cycle type.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionByBillingCycleTypeOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionByBillingCycleTypeOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionByBillingCycleTypeOperations.Get(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionByBillingCycleTypeOperations.GetAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrderCollection">
            <summary>
            Encapsulates customer orders behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.Item(System.String)">
            <summary>
            Gets a specific order behavior.
            </summary>
            <param name="orderId">The order id.</param>
            <returns>The order operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.ById(System.String)">
            <summary>
            Obtains a specific order behavior.
            </summary>
            <param name="orderId">The order id.</param>
            <returns>The order operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.Create(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Places a new order for the customer.
            </summary>
            <param name="newOrder">The new order information.</param>
            <returns>The order that was just placed.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Asynchronously places a new order for the customer.
            </summary>
            <param name="newEntity">The new order information.</param>
            <returns>The order that was just placed.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.Get">
            <summary>
            Retrieves all customer orders.
            </summary>
            <returns>The customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.Get(System.Boolean)">
            <summary>
            Retrieves all customer orders including pricing details (based on access permissions) when requested..
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>The customer orders including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.GetAsync">
            <summary>
            Asynchronously retrieves all customer orders.
            </summary>
            <returns>The customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.GetAsync(System.Boolean)">
            <summary>
            Retrieves all customer orders including pricing details (based on access permissions) when requested..
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>The customer orders including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrderCollection.ByBillingCycleType(Microsoft.Store.PartnerCenter.Models.Offers.BillingCycleType)">
            <summary>
            Obtains the order collection behavior given a billing cycle type.
            </summary>
            <param name="billingCycleType">The billing cycle type.</param>
            <returns>The order collection by billing cycle type.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.IOrder">
            <summary>
            Encapsulates a customer order behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.IOrder.ProvisioningStatus">
            <summary>
            Gets the order provisioning status operations.
            </summary>       
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.IOrder.OrderLineItems">
            <summary>
            Gets the order line item collection operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.IOrder.OrderActivationLinks">
            <summary>
            Gets order activation link collection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrder.Get">
            <summary>
            Retrieves the order information.
            </summary>
            <returns>The order information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrder.Get(System.Boolean)">
            <summary>
            Retrieves the order information including pricing details (based on access permissions) when requested..
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>The order information including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrder.GetAsync">
            <summary>
            Asynchronously retrieves the order information.
            </summary>
            <returns>The order information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrder.GetAsync(System.Boolean)">
            <summary>
            Asynchronously retrieves the order information including pricing details (based on access permissions) when requested..
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>The order information including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrder.Patch(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Patches the order.
            </summary>
            <param name="partialOrder">An order that has the properties to be patched set.</param>
            <returns>The updated order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.IOrder.PatchAsync(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Asynchronously patches the order.
            </summary>
            <param name="partialOrder">An order that has the properties to be patched set.</param>
            <returns>The updated order.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations">
            <summary>
            Order collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.Item(System.String)">
            <summary>
            Obtains a specific order behavior.
            </summary>
            <param name="orderId">The order id.</param>
            <returns>The order operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.ById(System.String)">
            <summary>
            Obtains a specific order behavior.
            </summary>
            <param name="orderId">The order id.</param>
            <returns>The order operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Places a new order for the customer.
            </summary>
            <param name="newOrder">The new order.</param>
            <returns>The newly created order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Asynchronously places a new order for the customer.
            </summary>
            <param name="newOrder">The new order.</param>
            <returns>The newly created order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.Get">
            <summary>
            Retrieves all the orders the customer made.
            </summary>
            <returns>All the customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.Get(System.Boolean)">
            <summary>
            Retrieves all the orders the customer made including pricing details (based on access permissions) when requested..
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>All the customer orders including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all the orders the customer made.
            </summary>
            <returns>All the customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.GetAsync(System.Boolean)">
            <summary>
            Asynchronously retrieves all the orders the customer made including pricing details (based on access permissions) when requested..
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>All the customer orders including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderCollectionOperations.ByBillingCycleType(Microsoft.Store.PartnerCenter.Models.Offers.BillingCycleType)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Orders.OrderOperations">
            <summary>
            Order operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Orders.OrderOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="orderId">The order Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.OrderOperations.ProvisioningStatus">
            <summary>
            Gets an Order provisioning status operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.OrderOperations.OrderLineItems">
            <summary>
            Gets line item collection operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Orders.OrderOperations.OrderActivationLinks">
            <summary>
            Gets order activation link collection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderOperations.Get">
            <summary>
            Retrieves the customer order.
            </summary>
            <returns>The customer order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderOperations.Get(System.Boolean)">
            <summary>
            Retrieves the order information including pricing details (based on access permissions) when requested..
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>The order information including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderOperations.GetAsync">
            <summary>
            Asynchronously retrieves the customer order.
            </summary>
            <returns>The customer order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderOperations.GetAsync(System.Boolean)">
            <summary>
            Asynchronously retrieves all the orders the customer made including pricing details (based on access permissions) when requested.
            </summary>
            <param name="includePrice">Whether to include pricing details in the order information.</param>
            <returns>All the customer orders including pricing details (based on access permissions) when requested.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderOperations.Patch(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Patches a customer order.
            </summary>
            <param name="order">The order to patch.</param>
            <returns>The updated order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Orders.OrderOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.Orders.Order)">
            <summary>
            Asynchronously patches a customer order.
            </summary>
            <param name="order">The order to patch.</param>
            <returns>The updated order.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionByTargetSegmentOperations">
            <summary>
            Availabilities implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionByTargetSegmentOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionByTargetSegmentOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="productId">The corresponding product id.</param>
            <param name="skuId">The corresponding sku id.</param>
            <param name="country">The country on which to base the product.</param>
            <param name="targetSegment">The target segment used for filtering the availabilities.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionByTargetSegmentOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionByTargetSegmentOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations">
            <summary>
            Availabilities implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="productId">The corresponding product id.</param>
            <param name="skuId">The corresponding sku id.</param>
            <param name="country">The country on which to base the product.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations.ById(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityCollectionOperations.ByTargetSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollection">
            <summary>
            Holds operations that can be performed on availabilities.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollection.Item(System.String)">
            <summary>
            Retrieves the operations tied with a specific availability.
            </summary>
            <param name="availabilityId">The availability id.</param>
            <returns>The availability operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollection.ById(System.String)">
            <summary>
            Retrieves the operations tied with a specific availability.
            </summary>
            <param name="availabilityId">The availability id.</param>
            <returns>The availability operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollection.Get">
            <summary>
            Retrieves all the availabilities for the provided sku.
            </summary>
            <returns>The availability for the provided sku.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the availabilities for the provided sku.
            </summary>
            <returns>The availabilities for the provided sku.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollection.ByTargetSegment(System.String)">
            <summary>
            Retrieves the operations that can be applied on availabilities filtered by a specific target segment.
            </summary>
            <param name="targetSegment">The availability segment filter.</param>
            <returns>The availability collection operations by target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollectionByTargetSegment">
            <summary>
            Holds operations that can be performed on availabilities for a specific target segment.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollectionByTargetSegment.Get">
            <summary>
            Retrieves all the availabilities for the provided sku on a specific target segment.
            </summary>
            <returns>The availability for the provided sku on a specific target segment.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailabilityCollectionByTargetSegment.GetAsync">
            <summary>
            Asynchronously retrieves all the availabilities for the provided sku on a specific target segment.
            </summary>
            <returns>The availabilities for the provided sku on a specific target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IAvailability">
            <summary>
            Holds operations that can be performed on a single availability.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailability.Get">
            <summary>
            Retrieves the availability information.
            </summary>
            <returns>The availability information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IAvailability.GetAsync">
            <summary>
            Asynchronously retrieves the availability information.
            </summary>
            <returns>The availability information.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IProduct">
            <summary>
            Holds operations that can be performed on a single product.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.IProduct.Skus">
            <summary>
            Retrieves the skus for the product.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProduct.Get">
            <summary>
            Retrieves the product information.
            </summary>
            <returns>The product information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProduct.GetAsync">
            <summary>
            Asynchronously retrieves the product information.
            </summary>
            <returns>The product information.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IProductCollection">
            <summary>
            Holds operations that can be performed on products.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollection.ByCountry(System.String)">
            <summary>
            Retrieves the operations that can be applied on products from a given country.
            </summary>
            <param name="country">The country name.</param>
            <returns>The product collection operations by country.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountryByTargetViewByTargetSegment">
            <summary>
            Holds operations that can be performed on products that belong to a given country, a catalog view and a specific target segment.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountryByTargetViewByTargetSegment.Get">
            <summary>
            Retrieves all the products in the given country, catalog view and target segment.
            </summary>
            <returns>The products in the given country, catalog view and target segment.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountryByTargetViewByTargetSegment.GetAsync">
            <summary>
            Asynchronously retrieves all the products in the given country, catalog view and target segment.
            </summary>
            <returns>The products in the given country, catalog view and target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ISku">
            <summary>
            Holds operations that can be performed on a single sku.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.ISku.Availabilities">
            <summary>
            Retrieves the operations for the current sku's availabilities.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISku.Get">
            <summary>
            Retrieves the sku information.
            </summary>
            <returns>The sku information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISku.GetAsync">
            <summary>
            Asynchronously retrieves the sku information.
            </summary>
            <returns>The sku information.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ISkuCollection">
            <summary>
            Holds operations that can be performed on skus.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.ISkuCollection.Item(System.String)">
            <summary>
            Retrieves the operations tied with a specific sku.
            </summary>
            <param name="skuId">The sku id.</param>
            <returns>The sku operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISkuCollection.ById(System.String)">
            <summary>
            Retrieves the operations tied with a specific sku.
            </summary>
            <param name="skuId">The sku id.</param>
            <returns>The sku operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISkuCollection.Get">
            <summary>
            Retrieves all the skus for the provided product.
            </summary>
            <returns>The skus for the provided product.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISkuCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the skus for the provided product.
            </summary>
            <returns>The skus for the provided product.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISkuCollection.ByTargetSegment(System.String)">
            <summary>
            Retrieves the operations that can be applied on skus that belong to a segment.
            </summary>
            <param name="targetSegment">The sku segment filter.</param>
            <returns>The sku collection operations by target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ISkuCollectionByTargetSegment">
            <summary>
            Holds operations that can be performed on skus from a specific target segment.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISkuCollectionByTargetSegment.Get">
            <summary>
            Retrieves all the skus for the provided product and target segment.
            </summary>
            <returns>The skus for the provided product and target segment.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ISkuCollectionByTargetSegment.GetAsync">
            <summary>
            Asynchronously retrieves all the skus for the provided product and target segment.
            </summary>
            <returns>The skus for the provided product and target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewByTargetSegmentOperations">
            <summary>
            Product operations by country, by target view and by target segment implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewByTargetSegmentOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewByTargetSegmentOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="targetView">The target view which contains the products.</param>
            <param name="country">The country on which to base the products.</param>
            <param name="targetSegment">The target segment used for filtering the products.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewByTargetSegmentOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewByTargetSegmentOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewOperations">
            <summary>
            Product operations by country and by target view implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="targetView">The target view which contains the products.</param>
            <param name="country">The country on which to base the products.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewOperations.ByTargetSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryByTargetViewOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountryByTargetView">
            <summary>
            Holds operations that can be performed on products that belong to a given country and a catalog view.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountryByTargetView.Get">
            <summary>
            Retrieves all the products in the given country and catalog view.
            </summary>
            <returns>The products in the given country and catalog view.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountryByTargetView.GetAsync">
            <summary>
            Asynchronously retrieves all the products in the given country and catalog view.
            </summary>
            <returns>The products in the given country and catalog view.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountryByTargetView.ByTargetSegment(System.String)">
            <summary>
            Retrieves the operations that can be applied on products that belong to a given country, catalog view and target segment.
            </summary>
            <param name="targetSegment">The target segment filter.</param>
            <returns>The product collection operations by country, by target view and by target segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountry">
            <summary>
            Holds operations that can be performed on products from a given country.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountry.Item(System.String)">
            <summary>
            Retrieves the operations tied with a specific product.
            </summary>
            <param name="productId">The product id.</param>
            <returns>The product operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountry.ById(System.String)">
            <summary>
            Retrieves the operations tied with a specific product.
            </summary>
            <param name="productId">The product id.</param>
            <returns>The product operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.IProductCollectionByCountry.ByTargetView(System.String)">
            <summary>
            Retrieves the operations that can be applied on products that belong to a given country and catalog view.
            </summary>
            <param name="targetView">The product target view.</param>
            <returns>The product collection operations by country and by target view.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionOperations">
            <summary>
            Product collection operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionOperations.ByCountry(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryOperations">
            <summary>
            Product operations by country implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="country">The country on which to base the products.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryOperations.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryOperations.ById(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductCollectionByCountryOperations.ByTargetView(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.AvailabilityOperations">
            <summary>
            Single availability operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.AvailabilityOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="productId">The corresponding product id.</param>
            <param name="skuId">The corresponding sku id.</param>
            <param name="availabilityId">The availability id.</param>
            <param name="country">The country on which to base the availability.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.AvailabilityOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.ProductOperations">
            <summary>
            Single product operations implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Products.ProductOperations.skus">
            <summary>
            The product skus operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.ProductOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="productId">The product Id.</param>
            <param name="country">The country on which to base the product.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.ProductOperations.Skus">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.ProductOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.SkuCollectionByTargetSegmentOperations">
            <summary>
            Sku Collection operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionByTargetSegmentOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.SkuCollectionByTargetSegmentOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="productId">The product id.</param>
            <param name="country">The country on which to base the product.</param>
            <param name="targetSegment">The target segment used for filtering the skus.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionByTargetSegmentOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionByTargetSegmentOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations">
            <summary>
            Sku Collection operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="productId">The product id.</param>
            <param name="country">The country on which to base the product.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations.ById(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuCollectionOperations.ByTargetSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Products.SkuOperations">
            <summary>
            Implements a single sku operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Products.SkuOperations.availabilities">
            <summary>
            The availability operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Products.SkuOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="productId">The product id.</param>
            <param name="skuId">The sku id.</param>
            <param name="country">The country on which to base the sku.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Products.SkuOperations.Availabilities">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuOperations.Get">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Products.SkuOperations.GetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations">
            <summary>
            This class implements the operations available on a customer's qualification.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations.Get">
            <summary>
            Gets the customer qualification.
            </summary>
            <returns>The customer qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations.GetAsync">
            <summary>
            Asynchronously gets the customer qualification.
            </summary>
            <returns>The customer qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations.Update(Microsoft.Store.PartnerCenter.Models.Customers.CustomerQualification)">
            <summary>
            Updates the customer qualification.
            </summary>
            <param name="customerQualification">Customer qualification to be updated.</param>
            <returns>The updated customer qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations.Update(Microsoft.Store.PartnerCenter.Models.Customers.CustomerQualification,Microsoft.Store.PartnerCenter.Models.ValidationCodes.ValidationCode)">
            <summary>
            Updates the customer qualification.  Use for GovernmentCommunityCloud with validation code after successful registration through Microsoft.
            </summary>
            <param name="customerQualification">Customer qualification to be updated.</param>
            <param name="governmentCommunityCloudValidationCode">Validation code necessary to complete only Government Community Cloud customer creation.  List validation codes with GetValidationCodes in ValidationOperations.</param>
            <returns>The updated customer qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Customers.CustomerQualification)">
            <summary>
            Asynchronously updates the customer qualification.
            </summary>
            <param name="customerQualification">Customer qualification to be updated.</param>
            <returns>The updated customer qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.CustomerQualificationOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Customers.CustomerQualification,Microsoft.Store.PartnerCenter.Models.ValidationCodes.ValidationCode)">
            <summary>
            Asynchronously updates the customer qualification.  Use for GovernmentCommunityCloud with validation code after successful registration through Microsoft.
            </summary>
            <param name="customerQualification">Customer qualification to be updated.</param>
            <param name="governmentCommunityCloudValidationCode">Validation code necessary to complete only Government Community Cloud customer creation.  List validation codes with GetValidationCodes in ValidationOperations.</param>
            <returns>The updated customer qualification.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Qualification.ICustomerQualification">
            <summary>
            Defines the operations available on a customer's qualification.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.ICustomerQualification.Get">
            <summary>
            Retrieves the customer qualification.
            </summary>
            <returns>Customer Qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.ICustomerQualification.GetAsync">
            <summary>
            Asynchronously retrieves the customer qualification.
            </summary>
            <returns>Customer Qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.ICustomerQualification.Update(Microsoft.Store.PartnerCenter.Models.Customers.CustomerQualification)">
            <summary>
            Updates the customer qualification.
            </summary>
            <param name="customerQualification">Customer Qualification.</param>
            <returns>The updated customer qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.ICustomerQualification.Update(Microsoft.Store.PartnerCenter.Models.Customers.CustomerQualification,Microsoft.Store.PartnerCenter.Models.ValidationCodes.ValidationCode)">
            <summary>
            Updates the customer qualification.  Use for GovernmentCommunityCloud with validation code after successful registration through Microsoft.
            </summary>
            <param name="customerQualification">Customer qualification to be updated.</param>
            <param name="governmentCommunityCloudValidationCode">Validation code necessary to complete only Government Community Cloud customer creation.  List validation codes with GetValidationCodes in ValidationOperations.</param>
            <returns>The updated customer qualification.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Qualification.ICustomerQualification.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Customers.CustomerQualification,Microsoft.Store.PartnerCenter.Models.ValidationCodes.ValidationCode)">
            <summary>
            Asynchronously updates the customer qualification.  Use for GovernmentCommunityCloud with validation code after successful registration through Microsoft.
            </summary>
            <param name="customerQualification">Customer qualification to be updated.</param>
            <param name="governmentCommunityCloudValidationCode">Validation code necessary to complete only Government Community Cloud customer creation.  List validation codes with GetValidationCodes in ValidationOperations.</param>
            <returns>The updated customer qualification.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations">
            <summary>
            Implements operations that apply to Azure rate card.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations.Get(System.String,System.String)">
            <summary>
            Gets the Azure rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations.GetAsync(System.String,System.String)">
            <summary>
            Asynchronously gets the Azure rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>        
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations.GetShared(System.String,System.String)">
            <summary>
            Asynchronously gets the Azure CSL rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>        
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations.GetSharedAsync(System.String,System.String)">
            <summary>
            Asynchronously gets the Azure CSL rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>        
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.AzureRateCardOperations.GetPartnerServiceProxy(System.String,System.String,System.Boolean)">
            <summary>
            Creates PartnerServiceProxy used to fetch Azure CSP/CSL rate card data
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>
            <param name="isAzureShared">Is true for Azure CSL offer, false for other offer types.</param>
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RateCards.IAzureRateCard">
            <summary>
            Holds operations that apply to Azure rate card.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.IAzureRateCard.Get(System.String,System.String)">
            <summary>
            Gets the Azure rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.IAzureRateCard.GetAsync(System.String,System.String)">
            <summary>
            Asynchronously gets the Azure rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.IAzureRateCard.GetShared(System.String,System.String)">
            <summary>
            Asynchronously gets the Azure CSL rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.IAzureRateCard.GetSharedAsync(System.String,System.String)">
            <summary>
            Asynchronously gets the Azure CSL rate card which provides real-time prices for Azure offers.
            </summary>
            <param name="currency">An optional three letter ISO code for the currency in which the resource rates will be provided.
            The default is the currency associated with the market in the partner's profile.</param>
            <param name="region">An optional two-letter ISO country/region code that indicates the market where the offer is purchased.
            The default is the country/region code set in the partner profile.</param>
            <returns>The Azure rate card for the partner.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RateCards.RateCardCollectionOperations">
            <summary>
            Implements operations that apply to rate cards.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RateCards.RateCardCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RateCards.RateCardCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RateCards.RateCardCollectionOperations.Azure">
            <summary>
            Gets the Azure rate card operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RateCards.IRateCardCollection">
            <summary>
            Holds operations that apply to rate cards.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RateCards.IRateCardCollection.Azure">
            <summary>
            Gets the Azure rate card operations.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Relationships.CustomerRelationshipCollectionOperations">
            <summary>
            For two-tier partner scenarios, holds the operations for retrieving partner relationships of a customer with respect to
            the logged in partner.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.CustomerRelationshipCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Relationships.CustomerRelationshipCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.CustomerRelationshipCollectionOperations.Get">
            <summary>
            Retrieves all the partners relationships associated to a specific customer.
            </summary>
            <returns>The partner relationships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.CustomerRelationshipCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all the partners relationships associated to a specific customer.
            </summary>
            <returns>The partner relationships.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Relationships.ICustomerRelationshipCollection">
            <summary>
            For two-tier partner scenarios, holds the operations for retrieving partner relationships of a customer with respect to
            the logged in partner.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.ICustomerRelationshipCollection.Get">
            <summary>
            Retrieves all the partner relationships associated to the customer based on the logged in partner.
            </summary>
            <returns>The partner relationships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.ICustomerRelationshipCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the partner relationships associated to the customer based on the logged in partner.
            </summary>
            <returns>The partner relationships.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Relationships.IRelationshipCollection">
            <summary>
            This interface represents the operations that can be done on a partner's relationships.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.IRelationshipCollection.Get(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType)">
            <summary>
            Retrieves all the partner relationships.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <returns>The partner relationships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.IRelationshipCollection.GetAsync(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType)">
            <summary>
            Asynchronously retrieves all the partner relationships.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <returns>The partner relationships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.IRelationshipCollection.Query(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType,Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries partner relationships associated to the partner.
            - Only <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleQuery"/> with a <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleFieldFilter"/> is supported.
            - This query supports a <see cref="F:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation.Substring"/> search of the partner. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipSearchField"/> for
            the list of supported search fields.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <param name="query">A query to apply onto partner relationships. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The partner relationships that match the given query.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.IRelationshipCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType,Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries partner relationships associated to the partner.
            - Only <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleQuery"/> with a <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleFieldFilter"/> is supported.
            - This query supports a <see cref="F:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation.Substring"/> search of the partner. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipSearchField"/> for
            the list of supported search fields.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <param name="query">A query to apply onto partner relationships. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The partner relationships that match the given query.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Relationships.RelationshipCollectionOperations">
            <summary>
            The relationship collection implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.RelationshipCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Relationships.RelationshipCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.RelationshipCollectionOperations.Get(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType)">
            <summary>
            Retrieves all the partner relationships.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <returns>The partner relationships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.RelationshipCollectionOperations.GetAsync(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType)">
            <summary>
            Asynchronously retrieves all the partner relationships.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <returns>The partner relationships.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.RelationshipCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType,Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries partner relationships associated to the partner.
            - Only <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleQuery"/> with a <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleFieldFilter"/> is supported.
            - This query supports a <see cref="F:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation.Substring"/> search of the partner. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipSearchField"/> for
            the list of supported search fields.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <param name="query">A query to apply onto partner relationships. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The partner relationships that match the given query.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Relationships.RelationshipCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipType,Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously Queries partner relationships associated to the partner.
            - Only <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleQuery"/> with a <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.SimpleFieldFilter"/> is supported.
            - This query supports a <see cref="F:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation.Substring"/> search of the partner. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Relationships.PartnerRelationshipSearchField"/> for
            the list of supported search fields.
            </summary>
            <param name="partnerRelationshipType">The type of partner relationship.</param>
            <param name="query">A query to apply onto partner relationships. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The partner relationships that match the given query.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceIncidents.IServiceIncidentCollection">
            <summary>
            Defines the operations available on service incidents.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.IServiceIncidentCollection.Get">
            <summary>
            Retrieves all service incidents.
            </summary>
            <returns>The service incidents.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.IServiceIncidentCollection.GetAsync">
            <summary>
            Asynchronously retrieves all service incidents.
            </summary>
            <returns>The service incidents.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.IServiceIncidentCollection.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries service incidents.
            </summary>
            <param name="serviceIncidentsQuery">A query to retrieve service incidents based on the active status.
            The <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> can be used to build queries.
            Service incident queries support simple queries. You can filter service incidents using their active status.
            <see cref="T:Microsoft.Store.PartnerCenter.Models.ServiceIncidents.ServiceIncidentSearchField"/> lists
            the supported search fields. You can use the <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation" /> enumeration to specify filtering operations.
            Supported filtering operations are: equals.
            </param>
            <returns> The list of service incidents that match the query.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.IServiceIncidentCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries service incidents.
            </summary>
            <param name="serviceIncidentsQuery">A query to retrieve service incidents based on the active status.
            The <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> can be used to build queries.
            Service incident queries support simple queries. You can filter service incidents using their active status.
            <see cref="T:Microsoft.Store.PartnerCenter.Models.ServiceIncidents.ServiceIncidentSearchField"/> lists
            the supported search fields. You can use the <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.FieldFilterOperation" /> enumeration to specify filtering operations.
            Supported filtering operations are: equals.
            </param>
            <returns> The list of service incidents that match the query.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceIncidents.ServiceIncidentCollectionOperations">
            <summary>
            Service incident collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.ServiceIncidentCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.ServiceIncidents.ServiceIncidentCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.ServiceIncidentCollectionOperations.Get">
            <summary>
            Gets the list of service incidents.
            </summary>
            <returns>List of active service incidents. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.ServiceIncidentCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Gets the list of service incidents.
            </summary>
            <param name="serviceIncidentsQuery">The query with search parameters.</param>
            <returns>List of active service incidents. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.ServiceIncidentCollectionOperations.GetAsync">
            <summary>
            Asynchronously gets the service incidents collection.
            </summary>
            <returns>List of service incidents. </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceIncidents.ServiceIncidentCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously gets the service incidents collection.
            </summary>
            <param name="serviceIncidentsQuery">The query with search parameters.</param>
            <returns>List of service incidents. </returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.SubscribedSkus.CustomerSubscribedSkuCollectionOperations">
            <summary>
            Customer subscribed products collection operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.SubscribedSkus.CustomerSubscribedSkuCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.SubscribedSkus.CustomerSubscribedSkuCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.SubscribedSkus.CustomerSubscribedSkuCollectionOperations.Get(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Retrieves all the customer subscribed products.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>All the customer subscribed products.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.SubscribedSkus.CustomerSubscribedSkuCollectionOperations.GetAsync(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Asynchronously retrieves all the customer subscribed products.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>All the customer subscribed products.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.SubscribedSkus.ICustomerSubscribedSkuCollection">
            <summary>
            Represents the behavior of the customer's subscribed products.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.SubscribedSkus.ICustomerSubscribedSkuCollection.Get(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Retrieves all the customer subscribed products.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>All the customer subscribed products.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.SubscribedSkus.ICustomerSubscribedSkuCollection.GetAsync(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Asynchronously retrieves all the customer subscribed products.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>All the customer subscribed products.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseUpdateOperations">
            <summary>
            Customer user license update collection operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseUpdateOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseUpdateOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="userId">The user Id or UPN depending upon the method which is consuming it.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseUpdateOperations.Create(Microsoft.Store.PartnerCenter.Models.Licenses.LicenseUpdate)">
            <summary>
            Assign licenses to a user.
            This method serves three scenarios:
            1. Add license to a customer user.
            2. Remove license from a customer user.
            3. Update existing license for a customer user.
            </summary>
            <param name="entity">License update object.</param>
            <returns>Returned license update object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseUpdateOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Licenses.LicenseUpdate)">
            <summary>
            Asynchronously assign licenses to a user.
            This method serves three scenarios:
            1. Add license to a customer user.
            2. Remove license from a customer user.
            3. Update existing license for a customer user.
            </summary>
            <param name="entity">License update object.</param>
            <returns>Returned license update object.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations">
            <summary>
            Customer user collection operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.Item(System.String)">
            <summary>
            Gets a specific customer user behavior.
            </summary>
            <param name="customerUserId">The customer tenant id.</param>
            <returns>The customer user operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.ById(System.String)">
            <summary>
            Obtains a specific customer user behavior.
            </summary>
            <param name="customerUserId">The customer tenant id.</param>
            <returns>The customer user operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.Get">
            <summary>
            Retrieves all the customer users.
            </summary>
            <returns>All the customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all the customer users.
            </summary>
            <returns>All the customer users.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries customer users associated to the partner's customers.
            - Count queries are not supported by this operation.
            - You can set page size, filter and sort option.
            - You can navigate to other pages by specifying a seek query with the seek operation and the continuation
              token sent by the previous operation.
            </summary>
            <param name="customerusersQuery">A query to apply onto customer users collection. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested customer users.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries customer users associated to the partner's customers.
            </summary>
            <param name="customerusersQuery">A query to apply onto customer users collection.</param>
            <returns>Customer user collection.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Create a new user for the customer.
            </summary>
            <param name="newEntity">The user object containing details for the new user to be created.</param>
            <returns>User entity</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUsersCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Create a new user for the customer.
            </summary>
            <param name="newEntity">The user object containing details for the new user to be created.</param>
            <returns>User entity</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseCollectionOperations">
            <summary>
            Customer user license collection operations class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="userId">The user Id or UPN depending upon the method which is consuming it.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseCollectionOperations.Get(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Retrieves the customer user all licenses.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>The customer user all licenses.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserLicenseCollectionOperations.GetAsync(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Asynchronously retrieves the customer user all licenses.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>The customer user all licenses.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserRoleCollectionOperations">
            <summary>
            Represents the behavior of the customers user's directory roles.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserRoleCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserRoleCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant id.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserRoleCollectionOperations.Get">
            <summary>
            Retrieves the customer user's directory roles.
            </summary>
            <returns>The customer user's directory roles.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserRoleCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the customer user's directory roles.
            </summary>
            <returns>The customer user's directory roles.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations">
            <summary>
            Customer user operations class.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.customerUserDirectoryRoleCollectionOperations">
            <summary>
            A lazy reference to the customer user directory role collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.customerUserLicenseCollectionOperations">
            <summary>
            A lazy reference to the customer user license collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.customerUserLicenseUpdateOperations">
            <summary>
            A lazy reference to the customer user license update operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="userId">The user Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.DirectoryRoles">
            <summary>
            Gets the current user's directory roles collection operation.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.Licenses">
            <summary>
            Gets the current user's license collection operation.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.LicenseUpdates">
            <summary>
            Gets the current user's license updates operation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.Get">
            <summary>
            Retrieves the customer user.
            </summary>
            <returns>The customer user.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.GetAsync">
            <summary>
            Asynchronously retrieves the customer user.
            </summary>
            <returns>The customer order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.Delete">
            <summary>
            Deletes a user.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.DeleteAsync">
            <summary>
            Asynchronously deletes a user.
            </summary>
            <returns>Returns task.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.Patch(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Updates the customer user.
            </summary>
            <param name="entity">Customer user entity.</param>
            <returns>The updated user.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.CustomerUserOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Asynchronously updates the customer user.
            </summary>
            <param name="entity">Customer user entity.</param>
            <returns>The updated user.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser">
            <summary>
            Encapsulates a customer user behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.DirectoryRoles">
            <summary>
            Gets the current user's directory role collection operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.Licenses">
            <summary>
            Gets the current user's licenses collection operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.LicenseUpdates">
            <summary>
            Gets the current user's license updates operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.Get">
            <summary>
            Retrieves the customer user.
            </summary>
            <returns>The customer user.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.GetAsync">
            <summary>
            Asynchronously retrieves the customer user.
            </summary>
            <returns>The customer order.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.Delete">
            <summary>
            Deletes a user.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.DeleteAsync">
            <summary>
            Asynchronously deletes a user.
            </summary>
            <returns>Returns task.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.Patch(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Updates the customer user.
            </summary>
            <param name="entity">Customer user entity.</param>
            <returns>The updated user.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUser.PatchAsync(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Asynchronously updates the customer user.
            </summary>
            <param name="entity">Customer user entity.</param>
            <returns>The updated user.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection">
            <summary>
            Represents the behavior of the customers users.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.Item(System.String)">
            <summary>
            Gets a single customer user operations.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The customer user operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.ById(System.String)">
            <summary>
            Gets a single customer user operations.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The customer user operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries users associated to the customer.
            - Count queries are not supported by this operation.
            - You can set page size, filter and sort option.
            - You can navigate to other pages by specifying a seek query with the seek operation and the continuation
              token sent by the previous operation.
            </summary>
            <param name="customerUsersQuery">A query to apply onto customer users. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested customer users.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries users of customer.
            - Count queries are not supported by this operation.
            - You can set page size, filter and sort option.
            - You can navigate to other pages by specifying a seek query with the seek operation and the continuation
              token sent by the previous operation.
            </summary>
            <param name="customerUsersQuery">A query to apply onto customer users. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested customer users.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.Create(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Create a new user for the customer.
            </summary>
            <param name="newEntity">The user object containing details for the new user to be created.</param>
            <returns>User entity</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.Users.CustomerUser)">
            <summary>
            Create a new user for the customer.
            </summary>
            <param name="newEntity">The user object containing details for the new user to be created.</param>
            <returns>User entity</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.Get">
            <summary>
            Retrieves all the customer users.
            </summary>
            <returns>All the customer orders.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the customer users.
            </summary>
            <returns>All the customer users.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserLicenseCollection">
            <summary>
            Represents the behavior of a customer's user license collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserLicenseCollection.Get(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Retrieves the assigned licenses to a customer user.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>The assigned licenses to a customer user.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserLicenseCollection.GetAsync(System.Collections.Generic.List{Microsoft.Store.PartnerCenter.Models.Licenses.LicenseGroupId})">
            <summary>
            Asynchronously retrieves the assigned licenses to a customer user.
            </summary>
            <param name="licenseGroupIds"> License group id.</param>
            <returns>The assigned licenses to a customer user.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserLicenseUpdates">
            <summary>
            Represents the behavior of a customer user's license update collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserLicenseUpdates.Create(Microsoft.Store.PartnerCenter.Models.Licenses.LicenseUpdate)">
            <summary>
            Assign licenses to a user.
            This method serves three scenarios:
            1. Add license to a customer user.
            2. Remove license from a customer user.
            3. Update existing license for a customer user.
            </summary>
            <param name="entity">License update object.</param>
            <returns>Returned license update object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserLicenseUpdates.CreateAsync(Microsoft.Store.PartnerCenter.Models.Licenses.LicenseUpdate)">
            <summary>
            Asynchronously assign licenses to a user.
            This method serves three scenarios:
            1. Add license to a customer user.
            2. Remove license from a customer user.
            3. Update existing license for a customer user.
            </summary>
            <param name="entity">License update object.</param>
            <returns>Returned license update object.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserRoleCollection">
            <summary>
            Represents the behavior of the customers user's directory roles.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserRoleCollection.Get">
            <summary>
            Retrieves the customer user's directory roles.
            </summary>
            <returns>The customer user's directory roles.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.CustomerUsers.ICustomerUserRoleCollection.GetAsync">
            <summary>
            Asynchronously retrieves the customer user's directory roles.
            </summary>
            <returns>The customer user's directory roles.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionActivationLinks">
            <summary>
            A resource collection of subscription activation links.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionActivationLinks.Get">
            <summary>
            Retrieves all activation links for a specific subscription.
            </summary>
            <returns>A resource collection of activation links.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionActivationLinks.GetAsync">
            <summary>
            Asynchronously retrieves a resource collection of subscription activation links.
            </summary>
            <returns>The  resource collection of subscription activation links.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionRegistration">
            <summary>
            Defines the operations available on a customer's subscription registrations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionRegistration.Register">
            <summary>
            Register a subscription to enable Azure Reserved instance purchase.
            </summary>
            <returns>The location which indicates the URL of the API to query for status.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionRegistration.RegisterAsync">
            <summary>
            Asynchronously register a subscription to enable Azure Reserved instance purchase.
            </summary>
            <returns>The location which indicates the URL of the API to query for status.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionRegistrationStatus">
            <summary>
            Defines the operations available on a customer's subscription registration status.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionRegistrationStatus.Get">
            <summary>
            Retrieves a subscription registration status.
            </summary>
            <returns>The subscription registration status details.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionRegistrationStatus.GetAsync">
            <summary>
            Asynchronously retrieves a subscription registration status.
            </summary>
            <returns>The subscription registration status details.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionProvisioningStatus">
            <summary>
            The subscription provisioning status..
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionProvisioningStatus.Get">
            <summary>
            Retrieves all subscription provisioning status details.
            </summary>
            <returns>The subscription provisioning status details.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionProvisioningStatus.GetAsync">
            <summary>
            Asynchronously retrieves all subscription provisioning status details.
            </summary>
            <returns>The subscription provisioning status details.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionActivationLinks">
            <summary>
            Implements getting customer subscription activation link resource collection for a given subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionActivationLinks.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionActivationLinks"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionActivationLinks.Get">
            <summary>
            Synchronously gets the subscription activation links.
            </summary>
            <returns>The subscription activation links.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionActivationLinks.GetAsync">
            <summary>
            Asynchronously gets the subscription activation links.
            </summary>
            <returns>The subscription activation links.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationOperations">
            <summary>
            This class implements the operations available on a customer's subscription registration.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationOperations.Register">
            <summary>
            Register a subscription to enable Azure Reserved instance purchase.
            </summary>
            <returns>The location which indicates the URL of the API to query for status.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationOperations.RegisterAsync">
            <summary>
            Asynchronously register a subscription to enable Azure Reserved instance purchase.
            </summary>
            <returns>The location which indicates the URL of the API to query for status.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationStatusOperations">
            <summary>
            This class implements the operations available on a customer's subscription registration status.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationStatusOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationStatusOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationStatusOperations.Get">
            <summary>
            Retrieves a subscription registration status.
            </summary>
            <returns>The subscription registration status details.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionRegistrationStatusOperations.GetAsync">
            <summary>
            Asynchronously retrieves a subscription registration status.
            </summary>
            <returns>The subscription registration status details.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionProvisioningStatusOperations">
            <summary>
            Implements getting customer subscription provisioning status details for a given subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionProvisioningStatusOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionProvisioningStatusOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionProvisioningStatusOperations.Get">
            <summary>
            Gets the subscription provisioning status details.
            </summary>
            <returns>The subscription usage summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionProvisioningStatusOperations.GetAsync">
            <summary>
            Asynchronously gets the subscription provisioning status details.
            </summary>
            <returns>The subscription provisioning status details.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionConversionCollection">
            <summary>
            This interface defines the conversion operations available on a customer's trial subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionConversionCollection.Create(Microsoft.Store.PartnerCenter.Models.Subscriptions.Conversion)">
            <summary>
            Submits a trial subscription conversion.
            </summary>
            <param name="conversion">The new subscription conversion information.</param>
            <returns>The subscription conversion results.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionConversionCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.Conversion)">
            <summary>
            Asynchronously submits a trial subscription conversion.
            </summary>
            <param name="conversion">The new subscription conversion information.</param>
            <returns>The subscription conversion results.</returns>       
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionConversionCollection.Get">
            <summary>
            Retrieves all conversions for the trial subscription.
            </summary>
            <returns>The subscription conversions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionConversionCollection.GetAsync">
            <summary>
            Asynchronously retrieves all conversions for the trial subscription.
            </summary>
            <returns>The subscription conversions.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionSupportContact">
            <summary>
            Defines the operations available on a customer's subscription support contact.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionSupportContact.Get">
            <summary>
            Retrieves the support contact of the customer's subscription.
            </summary>
            <returns>The support contact.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionSupportContact.GetAsync">
            <summary>
            Asynchronously retrieves the support contact of the customer's subscription.
            </summary>
            <returns>The support contact.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionSupportContact.Update(Microsoft.Store.PartnerCenter.Models.Subscriptions.SupportContact)">
            <summary>
            Updates the support contact of the customer's subscription.
            </summary>
            <param name="supportContact">The support contact.</param>
            <returns>The updated support contact.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionSupportContact.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.SupportContact)">
            <summary>
            Asynchronously updates the support contact of the customer's subscription.
            </summary>
            <param name="supportContact">The support contact.</param>
            <returns>The updated support contact.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionConversionCollectionOperations">
            <summary>
            The customer subscription conversion implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionConversionCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionConversionCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id to whom the subscriptions belong.</param>
            <param name="subscriptionId">The subscription Id where the upgrade is occurring.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionConversionCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Subscriptions.Conversion)">
            <summary>
            Submits a subscription conversion.
            </summary>
            <param name="conversion">The new subscription conversion information.</param>
            <returns>The subscription conversion results.</returns>       
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionConversionCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.Conversion)">
            <summary>
            Asynchronously submits a subscription conversion.
            </summary>
            <param name="conversion">The new subscription conversion information.</param>
            <returns>The subscription conversion results.</returns>       
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionConversionCollectionOperations.Get">
            <summary>
            Retrieves all conversions for the trial subscription.
            </summary>
            <returns>The subscription conversions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionConversionCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all conversions for the trial subscription.
            </summary>
            <returns>The subscription conversions.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionSupportContactOperations">
            <summary>
            This class implements the operations for a customer's subscription support contact.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionSupportContactOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionSupportContactOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionSupportContactOperations.Get">
            <summary>
            Retrieves the support contact of the customer's subscription.
            </summary>
            <returns>The support contact.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionSupportContactOperations.GetAsync">
            <summary>
            Asynchronously retrieves the support contact of the customer's subscription.
            </summary>
            <returns>The support contact.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionSupportContactOperations.Update(Microsoft.Store.PartnerCenter.Models.Subscriptions.SupportContact)">
            <summary>
            Updates the support contact of the customer's subscription.
            </summary>
            <param name="supportContact">The support contact.</param>
            <returns>The updated support contact.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionSupportContactOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.SupportContact)">
            <summary>
            Asynchronously updates the support contact of the customer's subscription.
            </summary>
            <param name="supportContact">The support contact.</param>
            <returns>The updated support contact.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionAddOnCollection">
            <summary>
            Defines the behavior for a subscription's add-ons.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionAddOnCollection.Get">
            <summary>
            Retrieves all subscription add-ons.
            </summary>
            <returns>The subscription add-ons.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionAddOnCollection.GetAsync">
            <summary>
            Asynchronously retrieves all subscription add-ons.
            </summary>
            <returns>The subscription add-ons.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection">
            <summary>
            Represents the behavior of the customer subscriptions as a whole.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection.UsageRecords">
            <summary>
            Obtains the subscription usage records behavior for the customer.
            </summary>
            <returns>The customer subscription usage records behavior.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection.Item(System.String)">
            <summary>
            Retrieves a specific customer subscription behavior.
            </summary>
            <param name="subscriptionId">The subscription id.</param>
            <returns>The customer subscription behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection.ById(System.String)">
            <summary>
            Retrieves a specific customer subscription behavior.
            </summary>
            <param name="subscriptionId">The subscription id.</param>
            <returns>The customer subscription behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection.Get">
            <summary>
            Retrieves all subscriptions.
            </summary>
            <returns>The subscriptions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection.GetAsync">
            <summary>
            Asynchronously retrieves all subscriptions.
            </summary>
            <returns>The subscriptions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection.ByOrder(System.String)">
            <summary>
            Groups customer subscriptions by an order.
            </summary>
            <param name="orderId">The order id.</param>
            <returns>The order subscriptions operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionCollection.ByPartner(System.String)">
            <summary>
            Groups customer subscriptions by a partner.
            </summary>
            <param name="partnerId">The partner id.</param>
            <returns>The partner subscriptions operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionUpgradeCollectionOperations">
            <summary>
            The customer subscription upgrade implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionUpgradeCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionUpgradeCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id to whom the subscriptions belong.</param>
            <param name="subscriptionId">The subscription Id where the upgrade is occurring.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionUpgradeCollectionOperations.Get">
            <summary>
            Retrieves all subscription upgrades.
            </summary>
            <returns>The subscription upgrades.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionUpgradeCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves all subscription upgrades.
            </summary>
            <returns>The subscription upgrades.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionUpgradeCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.Subscriptions.Upgrade)">
            <summary>
            Performs a subscription upgrade.
            </summary>
            <param name="subscriptionUpgrade">The subscription upgrade to perform.</param>
            <returns>The subscription upgrade result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionUpgradeCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.Upgrade)">
            <summary>
            Asynchronously performs a subscription upgrade.
            </summary>
            <param name="subscriptionUpgrade">The subscription upgrade to perform.</param>
            <returns>A task containing the subscription upgrade result.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionUpgradeCollection">
            <summary>
            This interface defines the upgrade operations available on a customer's subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionUpgradeCollection.Create(Microsoft.Store.PartnerCenter.Models.Subscriptions.Upgrade)">
            <summary>
            Submits a subscription upgrade.
            </summary>
            <param name="upgrade">The new subscription upgrade information.</param>
            <returns>The subscription upgrade results.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionUpgradeCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.Upgrade)">
            <summary>
            Asynchronously submits a subscription upgrade.
            </summary>
            <param name="upgrade">The new subscription upgrade information.</param>
            <returns>The subscription upgrade results.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionUpgradeCollection.Get">
            <summary>
            Retrieves all subscription upgrades.
            </summary>
            <returns>The subscription upgrades.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscriptionUpgradeCollection.GetAsync">
            <summary>
            Asynchronously retrieves all subscription upgrades.
            </summary>
            <returns>The subscription upgrades.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription">
            <summary>
            This interface defines the operations available on a customer's subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.AddOns">
            <summary>
            Gets the current subscription's add-ons operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.Upgrades">
            <summary>
            Gets the current subscription's upgrade operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.Conversions">
            <summary>
            Gets the current subscription's conversion operations. These operations will only apply to trial subscriptions.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.UsageRecords">
            <summary>
            Gets the current subscription's resource usage records operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.UsageSummary">
            <summary>
            Gets the current subscription's usage summary operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.Utilization">
            <summary>
            Gets the current subscription's utilization operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.ProvisioningStatus">
            <summary>
            Gets the current subscription's provisioning status operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.SupportContact">
            <summary>
            Gets the current subscription's support contact operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.Registration">
            <summary>
            Gets the current subscription's registration operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.RegistrationStatus">
            <summary>
            Gets the current subscription's registration status operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.ActivationLinks">
            <summary>
            Gets the current subscription's activation links.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.Get">
            <summary>
            Retrieves the subscription.
            </summary>
            <returns>The subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.GetAsync">
            <summary>
            Asynchronously retrieves the subscription.
            </summary>
            <returns>The subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.Patch(Microsoft.Store.PartnerCenter.Models.Subscriptions.Subscription)">
            <summary>
            Patches the subscription.
            </summary>
            <param name="subscription">A subscription that has the properties to be patched set.</param>
            <returns>The updated subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.ISubscription.PatchAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.Subscription)">
            <summary>
            Asynchronously patches the subscription.
            </summary>
            <param name="subscription">A subscription that has the properties to be patched set.</param>
            <returns>The updated subscription.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.OrderSubscriptionCollectionOperations">
            <summary>
            Implements getting customer subscriptions for a given order.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.OrderSubscriptionCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.OrderSubscriptionCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="orderId">The order Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.OrderSubscriptionCollectionOperations.Get">
            <summary>
            Gets the subscriptions for the given order.
            </summary>
            <returns>The order subscriptions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.OrderSubscriptionCollectionOperations.GetAsync">
            <summary>
            Asynchronously gets the subscriptions for the given order.
            </summary>
            <returns>The order subscriptions.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.PartnerSubscriptionCollectionOperations">
            <summary>
            Implements customer subscription operations grouped by a Microsoft partner.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.PartnerSubscriptionCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.PartnerSubscriptionCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="partnerId">The partner Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.PartnerSubscriptionCollectionOperations.Get">
            <summary>
            Gets the subscriptions for the given partner.
            </summary>
            <returns>The partner subscriptions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.PartnerSubscriptionCollectionOperations.GetAsync">
            <summary>
            Asynchronously gets the subscriptions for the given partner.
            </summary>
            <returns>The partner subscriptions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.PartnerSubscriptionCollectionOperations.Get(System.Int32,System.Int32)">
            <summary>
            Gets a segment of the subscriptions for the given partner.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The desired segment size.</param>
            <returns>The required subscriptions segment.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.PartnerSubscriptionCollectionOperations.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously gets a segment of the subscriptions for the given partner.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The desired segment size.</param>
            <returns>The required subscriptions segment.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionAddOnCollectionOperations">
            <summary>
            Implements operations related to a single subscription add-ons.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionAddOnCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionAddOnCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionAddOnCollectionOperations.Get">
            <summary>
            Retrieves the add-on subscriptions.
            </summary>
            <returns>Collection of add-on subscriptions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionAddOnCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the add-on subscriptions.
            </summary>
            <returns>Collection of add-on subscriptions.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations">
            <summary>
            The customer subscriptions implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.usageRecords">
            <summary>
            A lazy reference to the current customer's subscription usage records operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id to whom the subscriptions belong.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.UsageRecords">
            <summary>
            Obtains the subscription usage records behavior for the customer.
            </summary>
            <returns>The customer subscription usage records.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.Item(System.String)">
            <summary>
            Retrieves a specific customer subscription behavior.
            </summary>
            <param name="subscriptionId">The subscription id.</param>
            <returns>The customer subscription behavior.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.ByOrder(System.String)">
            <summary>
            Groups customer subscriptions by an order.
            </summary>
            <param name="orderId">The order id.</param>
            <returns>The order subscriptions operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.ByPartner(System.String)">
            <summary>
            Groups customer subscriptions by a partner.
            </summary>
            <param name="partnerId">The partner id.</param>
            <returns>The partner subscriptions operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.ById(System.String)">
            <summary>
            Retrieves a specific customer subscription behavior.
            </summary>
            <param name="subscriptionId">The subscription id.</param>
            <returns>The customer subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.Get">
            <summary>
            Retrieves all subscriptions.
            </summary>
            <returns>The subscriptions.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionCollectionOperations.GetAsync">
            <summary>
            Retrieves all subscriptions.
            </summary>
            <returns>The subscriptions.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations">
            <summary>
            This class implements the operations for a customer's subscription.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionAddOnsOperations">
            <summary>
            A lazy reference to the current subscription's add-ons operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionUpgradeOperations">
            <summary>
            A lazy reference to the current subscription's upgrade operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionConversionOperations">
            <summary>
            A lazy reference to the current subscription's conversion operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.usageRecordsOperations">
            <summary>
            A lazy reference to the current subscription's resource usage records operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionUsageSummaryOperations">
            <summary>
            A lazy reference to the current subscription's usage summary operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionUtilizationOperations">
            <summary>
            A lazy reference to the current subscription's utilities operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionProvisioningStatusOperations">
            <summary>
            A lazy reference to the current subscription's provisioning status operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionSupportContactOperations">
            <summary>
            A lazy reference to the current subscription's support contact operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionRegistrationOperations">
            <summary>
            A lazy reference to the current subscription's registration operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionRegistrationStatusOperations">
            <summary>
            A lazy reference to the current subscription's registration status operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.subscriptionActivationLinks">
            <summary>
            A lazy reference to the current subscription's activation links.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.AddOns">
            <summary>
            Gets the current subscription's add-ons operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.Upgrades">
            <summary>
            Gets the current subscription's upgrade operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.Conversions">
            <summary>
            Gets the current subscription's conversion operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.UsageRecords">
            <summary>
            Gets the current subscription's resource usage records operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.UsageSummary">
            <summary>
            Gets the current subscription's usage summary operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.Utilization">
            <summary>
            Gets the current subscription's utilization operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.ProvisioningStatus">
            <summary>
            Gets the current subscription's provisioning status operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.SupportContact">
            <summary>
            Gets the current subscription's support contact operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.Registration">
            <summary>
            Gets the current subscription's registration operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.RegistrationStatus">
            <summary>
            Gets the current subscription's registration status operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.ActivationLinks">
            <summary>
            Gets the current subscription's activation links.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.Get">
            <summary>
            Gets the subscription.
            </summary>
            <returns>The subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.GetAsync">
            <summary>
            Asynchronously gets the subscription.
            </summary>
            <returns>The subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.Patch(Microsoft.Store.PartnerCenter.Models.Subscriptions.Subscription)">
            <summary>
            Patches a subscription.
            </summary>
            <param name="subscription">The subscription information.</param>
            <returns>The updated subscription information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Subscriptions.SubscriptionOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.Subscriptions.Subscription)">
            <summary>
            Asynchronously patches a subscription.
            </summary>
            <param name="subscription">The subscription information.</param>
            <returns>The updated subscription information.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.CustomerUsageRecordCollectionOperations">
            <summary>
            Implements operations related to a partner's customers usage record.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageRecordCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.CustomerUsageRecordCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageRecordCollectionOperations.Get">
            <summary>
            Retrieves the collection of customer monthly usage records for a partner.
            </summary>
            <returns>The collection of customer monthly usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageRecordCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the collection of customer monthly usage records for a partner.
            </summary>
            <returns>The collection of customer monthly usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSpendingBudgetOperations">
            <summary>
            This class implements the operations available on a customer's usage spending budget.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSpendingBudgetOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSpendingBudgetOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSpendingBudgetOperations.Get">
            <summary>
            Gets the usage spending budget allocated to a customer by the partner.
            </summary>
            <returns>The customer usage spending budget.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSpendingBudgetOperations.GetAsync">
            <summary>
            Asynchronously gets the usage spending budget allocated to a customer by the partner.
            </summary>
            <returns>The customer usage spending budget.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSpendingBudgetOperations.Patch(Microsoft.Store.PartnerCenter.Models.Usage.SpendingBudget)">
            <summary>
            Updates the usage spending budget allocated to a customer by the partner.
            </summary>
            <param name="usageSpendingBudget">The new customer usage spending budget.</param>
            <returns>The updated customer usage spending budget.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSpendingBudgetOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.Usage.SpendingBudget)">
            <summary>
            Asynchronously updates the usage spending budget allocated to a customer by the partner.
            </summary>
            <param name="usageSpendingBudget">The new customer usage spending budget.</param>
            <returns>The updated customer usage spending budget.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageRecordCollection">
            <summary>
            Defines the behavior of a customer usage record collection operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageRecordCollection.Get">
            <summary>
            Retrieves all customer usage records.
            </summary>
            <returns>The customer usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageRecordCollection.GetAsync">
            <summary>
            Asynchronously retrieves all customer usage records.
            </summary>
            <returns>The customer usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSpendingBudget">
            <summary>
            Defines the operations available on a customer's usage spending budget.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSpendingBudget.Get">
            <summary>
            Retrieves the customer's usage spending budget.
            </summary>
            <returns>The customer's usage spending budget.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSpendingBudget.GetAsync">
            <summary>
            Asynchronously retrieves the customer's usage spending budget.
            </summary>
            <returns>The customer's usage spending budget.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSpendingBudget.Patch(Microsoft.Store.PartnerCenter.Models.Usage.SpendingBudget)">
            <summary>
            Patches the customer's usage spending budget.
            </summary>
            <param name="spendingBudget">The new customer's usage spending budget.</param>
            <returns>The updated customer's usage spending budget.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSpendingBudget.PatchAsync(Microsoft.Store.PartnerCenter.Models.Usage.SpendingBudget)">
            <summary>
            Asynchronously patches the customer's usage spending budget.
            </summary>
            <param name="spendingBudget">The new customer's usage spending budget.</param>
            <returns>The updated customer's usage spending budget.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSummary">
            <summary>
            Defines the operations available on a customer's usage summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSummary.Get">
            <summary>
            Retrieves the customer usage summary.
            </summary>
            <returns>The customer usage summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ICustomerUsageSummary.GetAsync">
            <summary>
            Asynchronously retrieves the customer usage summary.
            </summary>
            <returns>The customer usage summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSummaryOperations">
            <summary>
            This class implements the operations for a customer's summary of usage-based subscriptions.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSummaryOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSummaryOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSummaryOperations.Get">
            <summary>
            Gets the customer usage summary.
            </summary>
            <returns>The customer usage summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.CustomerUsageSummaryOperations.GetAsync">
            <summary>
            Asynchronously gets the customer usage summary.
            </summary>
            <returns>The customer usage summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionMonthlyUsageRecordCollectionOperations">
            <summary>
            Implements operations related to a single customer's subscription usage records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionMonthlyUsageRecordCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionMonthlyUsageRecordCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionMonthlyUsageRecordCollectionOperations.Get">
            <summary>
            Retrieves the subscription usage records.
            </summary>
            <returns>Collection of subscription usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionMonthlyUsageRecordCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the subscription usage records.
            </summary>
            <returns>Collection of subscription usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ISubscriptionMonthlyUsageRecordCollection">
            <summary>
            Defines the behavior for a customer's subscription usage records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ISubscriptionMonthlyUsageRecordCollection.Get">
            <summary>
            Retrieves the customer's subscription usage records.
            </summary>
            <returns>The customer's subscription usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ISubscriptionMonthlyUsageRecordCollection.GetAsync">
            <summary>
            Asynchronously retrieves the customer's subscription usage records.
            </summary>
            <returns>The customer's subscription usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ISubscriptionDailyUsageRecordCollection">
            <summary>
            Defines the behavior for a subscription's daily usage records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ISubscriptionDailyUsageRecordCollection.Get">
            <summary>
            Retrieves the subscription's daily usage records.
            </summary>
            <returns>The subscription's daily usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ISubscriptionDailyUsageRecordCollection.GetAsync">
            <summary>
            Asynchronously retrieves the subscription's daily usage records.
            </summary>
            <returns>The subscription's daily usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.IResourceUsageRecordCollection">
            <summary>
            Defines the behavior for a subscription's resource usage records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.IResourceUsageRecordCollection.Get">
            <summary>
            Retrieves the subscription's resource usage records.
            </summary>
            <returns>The subscription's resource usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.IResourceUsageRecordCollection.GetAsync">
            <summary>
            Asynchronously retrieves the subscription's resource usage records.
            </summary>
            <returns>The subscription's resource usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ISubscriptionUsageSummary">
            <summary>
            This interface defines the operations available on a customer's subscription usage summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ISubscriptionUsageSummary.Get">
            <summary>
            Retrieves the customer's subscription usage summary.
            </summary>
            <returns>The customer's subscription usage summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ISubscriptionUsageSummary.GetAsync">
            <summary>
            Asynchronously retrieves the customer's subscription usage summary.
            </summary>
            <returns>The customer's subscription usage summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ISubscriptionUsageRecordCollection">
            <summary>
            This interface defines behavior for a single subscription usage records.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Usage.ISubscriptionUsageRecordCollection.Resources">
            <summary>
            Gets the subscription usage records grouped by resources.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Usage.ISubscriptionUsageRecordCollection.Daily">
            <summary>
            Gets the subscription usage records grouped by days.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionDailyUsageRecordCollectionOperations">
            <summary>
            Implements operations related to a single subscription daily usage records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionDailyUsageRecordCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionDailyUsageRecordCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionDailyUsageRecordCollectionOperations.Get">
            <summary>
            Retrieves the subscription daily usage records.
            </summary>
            <returns>Collection of subscription daily usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionDailyUsageRecordCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the subscription daily usage records.
            </summary>
            <returns>Collection of subscription daily usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.ResourceUsageRecordCollectionOperations">
            <summary>
            Implements operations related to a single subscription resource usage records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ResourceUsageRecordCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.ResourceUsageRecordCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ResourceUsageRecordCollectionOperations.Get">
            <summary>
            Retrieves the subscription usage records.
            </summary>
            <returns>Collection of subscription usage records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.ResourceUsageRecordCollectionOperations.GetAsync">
            <summary>
            Asynchronously retrieves the subscription usage records.
            </summary>
            <returns>Collection of subscription usage records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageSummaryOperations">
            <summary>
            This class implements the operations for a customer's subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageSummaryOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageSummaryOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageSummaryOperations.Get">
            <summary>
            Gets the subscription usage summary.
            </summary>
            <returns>The subscription usage summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageSummaryOperations.GetAsync">
            <summary>
            Asynchronously gets the subscription usage summary.
            </summary>
            <returns>The subscription usage summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageRecordCollectionOperations">
            <summary>
            Implementation class for subscription usage record collection operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageRecordCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageRecordCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageRecordCollectionOperations.Resources">
            <summary>
            Gets the subscription usage records grouped by resources.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Usage.SubscriptionUsageRecordCollectionOperations.Daily">
            <summary>
            Gets the subscription usage records grouped by days.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.IPartnerUsageSummary">
            <summary>
            Defines the operations available on a partner's usage summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.IPartnerUsageSummary.Get">
            <summary>
            Retrieves the partner's usage summary.
            </summary>
            <returns>The partner's usage summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.IPartnerUsageSummary.GetAsync">
            <summary>
            Asynchronously retrieves the partner's usage summary.
            </summary>
            <returns>The partner's usage summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Usage.PartnerUsageSummaryOperations">
            <summary>
            This class implements the operations available on a partner's usage summary.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.PartnerUsageSummaryOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Usage.PartnerUsageSummaryOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.PartnerUsageSummaryOperations.Get">
            <summary>
            Gets the partner's usage summary.
            </summary>
            <returns>The partner's usage summary.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Usage.PartnerUsageSummaryOperations.GetAsync">
            <summary>
            Asynchronously gets the partner's usage summary.
            </summary>
            <returns>The partner's usage summary.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Domains.DomainCollectionOperations">
            <summary>
            Domains collection operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.DomainCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Domains.DomainCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.DomainCollectionOperations.ByDomain(System.String)">
            <summary>
            Obtains a specific domain behavior.
            </summary>
            <param name="domain">The domain.</param>
            <returns>The domain operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Domains.DomainOperations">
            <summary>
            The domain operations implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.DomainOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Domains.DomainOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="domain">The domain.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.DomainOperations.Exists">
            <summary>
            Checks the availability of a domain.
            </summary>
            <returns>A boolean value to indicate if the domain is available.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.DomainOperations.ExistsAsync">
            <summary>
            Asynchronously checks the availability of a domain.
            </summary>
            <returns>A boolean value to indicate if the domain is available.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Domains.IDomainCollection">
            <summary>
            Encapsulates domains behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.IDomainCollection.ByDomain(System.String)">
            <summary>
            Obtains a specific domain behavior.
            </summary>
            <param name="domain">The domain.</param>
            <returns>The domain operations.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Domains.IDomain">
            <summary>
            Represents the behavior of a domain.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.IDomain.Exists">
            <summary>
            Checks if the domain is available or not.
            </summary>
            <returns>True if the domain exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Domains.IDomain.ExistsAsync">
            <summary>
            Asynchronously checks if the domain is available or not.
            </summary>
            <returns>True if the domain exists, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Properties.Resources.Configuration">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RelationshipRequests.CustomerRelationshipRequestOperations">
            <summary>
            Customer relationship request implementation class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RelationshipRequests.CustomerRelationshipRequestOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RelationshipRequests.CustomerRelationshipRequestOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RelationshipRequests.CustomerRelationshipRequestOperations.Get">
            <summary>
            Retrieves the customer relationship request which can be used by a customer to establish a relationship with the current partner.
            </summary>
            <returns>A customer relationship request.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RelationshipRequests.CustomerRelationshipRequestOperations.GetAsync">
            <summary>
            Asynchronously retrieves the customer relationship request which can be used by a customer to establish a relationship with the current partner.
            </summary>
            <returns>A customer relationship request.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RelationshipRequests.ICustomerRelationshipRequest">
            <summary>
            Holds operations that apply to customer relationship requests.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RelationshipRequests.ICustomerRelationshipRequest.Get">
            <summary>
            Retrieves the customer relationship request which can be used by a customer to establish a relationship with the current partner.
            </summary>
            <returns>A customer relationship request.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RelationshipRequests.ICustomerRelationshipRequest.GetAsync">
            <summary>
            Asynchronously retrieves the customer relationship request which can be used by a customer to establish a relationship with the current partner.
            </summary>
            <returns>A customer relationship request.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RequestContext.IRequestContext">
            <summary>
            Bundles context information which is amended to the partner SDK operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RequestContext.IRequestContext.RequestId">
            <summary>
            Gets the request Id. Uniquely identifies the partner service operation.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RequestContext.IRequestContext.CorrelationId">
            <summary>
            Gets the correlation Id. This Id is used to group logical operations together.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RequestContext.IRequestContext.Locale">
            <summary>
            Gets the Locale.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContext">
            <summary>
            Request context implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContext"/> class. Correlation Id will be generated. The request Id will be automatically generated
            for each service API call.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContext"/> class with provided locale. Correlation Id will be generated. The request Id will be automatically generated
            for each service API call.
            </summary>
            <param name="locale">The locale.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContext"/> class with a correlation Id. The request Id will be automatically generated
            and a default Locale is set for each service API call.
            </summary>
            <param name="correlationId">The correlation Id. This Id is used to group logical operations together.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContext"/> class with a correlation Id and the provided locale. The request Id will be automatically generated
            for each service API call.
            </summary>
            <param name="correlationId">The correlation Id. This Id is used to group logical operations together.</param>
            <param name="locale">The locale.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.#ctor(System.Guid,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContext"/> class with the given correlation, request Ids and locale.
            </summary>
            <param name="correlationId">The correlation Id. This Id is used to group logical operations together.</param>
            <param name="requestId">The request Id. Uniquely identifies the operation.</param>
            <param name="locale">The locale.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.RequestId">
            <summary>
            Gets the request Id. Uniquely identifies the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.CorrelationId">
            <summary>
            Gets the correlation Id. This Id is used to group logical operations together.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.Locale">
            <summary>
            Gets the Locale.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContext.ToString">
            <summary>
            Returns a string representation of the request context.
            </summary>
            <returns>A string representation of the request context.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory">
            <summary>
            Creates instances of <see cref="T:Microsoft.Store.PartnerCenter.RequestContext.IRequestContext"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.instance">
            <summary>
            A singleton instance of the request context factory.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory"/> class from being created.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.Instance">
            <summary>
            Gets an instance of the request context factory.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.Create">
            <summary>
            Creates a request context object which will use a randomly generated correlation Id and a unique request Id for each partner API call.
            </summary>
            <returns>A request context object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.Create(System.String)">
            <summary>
            Creates a request context object which will use a randomly generated correlation Id, a unique request Id and provided locale for each partner API call.
            </summary>
            <param name="locale">The locale.</param>
            <returns>A request context object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.Create(System.Guid)">
            <summary>
            Creates a request context object with the provided correlation Id and a unique request Id for each partner API call.
            </summary>
            <param name="correlationId">The correlation Id.</param>
            <returns>A request context object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.Create(System.Guid,System.String)">
            <summary>
            Creates a request context object with the provided correlation Id, a unique request Id and provided locale for each partner API call.
            </summary>
            <param name="correlationId">The correlation Id.</param>
            <param name="locale">The locale</param>
            <returns>A request context object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.Create(System.Guid,System.Guid)">
            <summary>
            Creates a request context object with the provided correlation and request Ids.
            </summary>
            <param name="correlationId">The correlation Id.</param>
            <param name="requestId">The request Id.</param>
            <returns>A request context object.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.RequestContext.RequestContextFactory.Create(System.Guid,System.Guid,System.String)">
            <summary>
            Creates a request context object with the provided correlation, request Ids and locale.
            </summary>
            <param name="correlationId">The correlation Id.</param>
            <param name="requestId">The request Id.</param>
            <param name="locale">The locale.</param>
            <returns>A request context object.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ErrorHandling.DefaultPartnerServiceErrorHandler">
            <summary>
            The default handling policy for failed partner service responses.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ErrorHandling.DefaultPartnerServiceErrorHandler.HandleFailedResponse(System.Net.Http.HttpResponseMessage,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Handles failed partner service responses.
            </summary>
            <param name="response">The partner service response.</param>
            <param name="context">An optional partner context.</param>
            <returns>The exception to throw.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ErrorHandling.DefaultPartnerServiceErrorHandler.ToPartnerErrorCategory(System.Net.HttpStatusCode)">
            <summary>
            Generates the partner error category based on the HTTP response code.
            </summary>
            <param name="statusCode">The HTTP response code.</param>
            <returns>The partner error category.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ErrorHandling.IFailedPartnerServiceResponseHandler">
            <summary>
            Defines behavior for handling non successful responses from the partner service.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ErrorHandling.IFailedPartnerServiceResponseHandler.HandleFailedResponse(System.Net.Http.HttpResponseMessage,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Handles failed partner service responses.
            </summary>
            <param name="response">The partner service response.</param>
            <param name="context">An optional partner context.</param>
            <returns>The exception to throw.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory">
            <summary>
            Defines the error categories of the partner SDK.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.NotSpecified">
            <summary>
            Unknown error type.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.BadInput">
            <summary>
            The error was due to bad inputs from the user.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.Unauthorized">
            <summary>
            The user is not authorized to perform the requested action.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.Forbidden">
            <summary>
            The operation was not granted to the caller.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.NotFound">
            <summary>
            The resource was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.UnsupportedDataFormat">
            <summary>
            The requested data format is unsupported.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.AlreadyExists">
            <summary>
            The resource already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.InvalidOperation">
            <summary>
            The requested operation is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.ServerError">
            <summary>
            The partner service failed to process the request.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.ServerBusy">
            <summary>
            The partner service is overloaded currently.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.Timeout">
            <summary>
            The partner service did not respond in a timely manner.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.ResponseParsing">
            <summary>
            The partner service response could not be parsed according to the preset expectation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory.TooManyRequests">
            <summary>
            There have been too many requests in a given amount of time.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerException">
            <summary>
            The standard exception thrown by the partner SDK. This pertains to errors accessing the partner service. Other standard exceptions
            such as null argument exceptions will also be thrown in case of malformed input.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.ErrorCategoryFieldName">
            <summary>
            The error category field name used in serialization.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.ServiceErrorPayloadFieldName">
            <summary>
            The service error payload field name used in serialization.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.PartnerContextFieldName">
            <summary>
            The partner context field name used in serialization.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.#ctor(System.String,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext,Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="context">The partner context.</param>
            <param name="errorCategory">An optional error category.</param>
            <param name="innerException">An optional inner exception.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.#ctor(Microsoft.Store.PartnerCenter.Models.ApiFault,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext,Microsoft.Store.PartnerCenter.Exceptions.PartnerErrorCategory,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerException"/> class.
            </summary>
            <param name="apiFault">The API fault object returned by the partner service.</param>
            <param name="context">The partner context.</param>
            <param name="errorCategory">An optional error category.</param>
            <param name="innerException">An optional inner exception.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerException"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.ErrorCategory">
            <summary>
            Gets the error classification that resulted in this exception.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.ServiceErrorPayload">
            <summary>
            Gets the service error payload.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.Context">
            <summary>
            Gets the partner context associated with the exception.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Required override to add in the serialized parameters.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerException.ToString">
            <summary>
            Displays the partner exception details.
            </summary>
            <returns>A string representing the partner exception including the base and extended properties.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException">
            <summary>
            This exception is thrown by <see cref="T:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2"/> objects when they fail to parse the response according to the
            caller's expectations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.ResponseFieldName">
            <summary>
            The response field name used in serialization.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.#ctor(System.String,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException"/> class.
            </summary>
            <param name="response">The HTTP response payload which could not be parsed.</param>
            <param name="context">The partner context.</param>
            <param name="message">The exception message.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.Response">
            <summary>
            Gets the HTTP response payload which could not be parsed.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Required override to add in the serialized parameters.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Exceptions.PartnerResponseParseException.ToString">
            <summary>
            Displays the partner API network exception details.
            </summary>
            <returns>A string representing the network exception including the base and extended properties.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Factory.IndexBasedCollectionEnumeratorFactory`2">
            <summary>
            Factory method for creating a new instance of index based collection enumerator.
            </summary>
            <typeparam name="T">The type of resource.</typeparam>
            /// <typeparam name="TResourceCollection">The type of resource collection.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Factory.IndexBasedCollectionEnumeratorFactory`2.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Factory.IndexBasedCollectionEnumeratorFactory`2"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Factory.IndexBasedCollectionEnumeratorFactory`2.Create(`1)">
            <summary>
            Creates a index based collection enumerator capable of traversing resources that uses offset and page size for pagination.
            </summary>
            <param name="resourceCollection">The initial resource collection to start from.</param>
            <returns>A resource collection enumerator capable of traversing the resource objects within the collection.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Factory.IPartnerFactory">
            <summary>
            Creates instances of <see cref="T:Microsoft.Store.PartnerCenter.IPartner"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Factory.IPartnerFactory.Build(Microsoft.Store.PartnerCenter.IPartnerCredentials)">
            <summary>
            Builds a <see cref="T:Microsoft.Store.PartnerCenter.IAggregatePartner"/> instance and configures it using the provided partner credentials.
            </summary>
            <param name="credentials">The partner credentials. Use the extensions to obtain these.</param>
            <returns>A configured partner object.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Factory.IResourceCollectionEnumeratorFactory`1">
            <summary>
            Creates resource collection enumerators which can enumerate through resource collections.
            </summary>
            <typeparam name="T">The collection type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Factory.IResourceCollectionEnumeratorFactory`1.Create(`0)">
            <summary>
            Creates a resource collection enumerator capable of traversing the input collection.
            </summary>
            <param name="resourceCollection">The initial resource collection to start from.</param>
            <returns>A resource collection enumerator capable of traversing the resource objects within the collection.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Factory.StandardPartnerFactory">
            <summary>
            Standard implementation of the partner factory.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Factory.StandardPartnerFactory.Build(Microsoft.Store.PartnerCenter.IPartnerCredentials)">
            <summary>
            Builds a <see cref="T:Microsoft.Store.PartnerCenter.IAggregatePartner"/> instance and configures it using the provided partner credentials.
            </summary>
            <param name="credentials">The partner credentials. Use the extensions to obtain these.</param>
            <returns>A configured partner object.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.IPagedEntityCollectionRetrievalOperations`2">
            <summary>
            A generic interface which represents paged entity retrieval operations.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <typeparam name="TResourceCollection">The entity collection type.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.IPagedEntityCollectionRetrievalOperations`2.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of entities.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of entities to return.</param>
            <returns>The requested entities subset.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.IPagedEntityCollectionRetrievalOperations`2.GetAsync(System.Int32,System.Int32)">
            <summary>
            Asynchronously retrieves a subset of entities.
            </summary>
            <param name="offset">The starting index.</param>
            <param name="size">The maximum number of entities to return.</param>
            <returns>The requested entities subset.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.IAggregatePartner">
            <summary>
            A partner operations interface which can be used to generate scoped partner operations that use a specific partner context.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.IAggregatePartner.With(Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Returns a partner operations object which uses the provided context when executing operations.
            </summary>
            <param name="context">An operation context object.</param>
            <returns>A partner operations object which uses the provided operation context.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.IPartnerComponent`1">
            <summary>
            Represents a partner SDK component.
            </summary>
            <typeparam name="TContext">The type of the component's context object.</typeparam>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartnerComponent`1.Partner">
            <summary>
            Gets a reference to the partner operations instance that generated this component.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartnerComponent`1.Context">
            <summary>
            Gets the component context object.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.IPartnerComponent">
            <summary>
            Represents a partner SDK component which has a string context.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.IPartnerCredentials">
            <summary>
            The credentials needed to access the partner API service.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartnerCredentials.PartnerServiceToken">
            <summary>
            Gets the token needed to authenticate with the partner API service.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartnerCredentials.ExpiresAt">
            <summary>
            Gets the expiry time in UTC for the token.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.IPartnerCredentials.IsExpired">
            <summary>
            Indicates whether the partner credentials have expired or not.
            </summary>
            <returns>True if credentials have expired. False if not.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.IPartner">
            <summary>
            The main entry point into using the partner SDK functionality. Represents a partner and encapsulates all the behavior attached to partners.
            Use this interface to get to the partner's customers, profiles, and customer orders, profiles and subscriptions and more.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Credentials">
            <summary>
            Gets the partner credentials.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.RequestContext">
            <summary>
            Gets the partner context.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Enumerators">
            <summary>
            Gets the collection enumerators available for traversing through results.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.OfferCategories">
            <summary>
            Gets the offer categories operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Offers">
            <summary>
            Gets the offer operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Products">
            <summary>
            Gets the product operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Extensions">
            <summary>
            Gets the extensions operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Profiles">
            <summary>
            Gets the profiles operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Customers">
            <summary>
            Gets the partner's customers operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.AgreementDetails">
            <summary>
            Gets the agreement details.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Invoices">
            <summary>
            Gets the partner's invoices operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.ServiceRequests">
            <summary>
            Gets the operations that can be performed on a partners' service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.ServiceIncidents">
            <summary>
            Gets the service health operations that can be performed on a partner's subscribed services.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.CountryValidationRules">
            <summary>
            Gets the country validation rules collection operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.UsageSummary">
            <summary>
            Gets the usage summary operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Domains">
            <summary>
            Gets the domains operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.AuditRecords">
            <summary>
            Gets the audit records operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.RateCards">
            <summary>
            Gets the rate card operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Relationships">
            <summary>
            Gets the relationship collection operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Analytics">
            <summary>
            Gets the analytics collection operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.IPartner.Validations">
            <summary>
            Gets the validation operations available to the partner.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Logging.DebugWindowLogger">
            <summary>
            A logger that writes to the debug window to aid in debugging.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.DebugWindowLogger.Information(System.String)">
            <summary>
            Logs a piece of information.
            </summary>
            <param name="message">The informational message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.DebugWindowLogger.Warning(System.String)">
            <summary>
            Logs a warning.
            </summary>
            <param name="message">The warning message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.DebugWindowLogger.Error(System.String)">
            <summary>
            Logs an error.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Logging.ILogger">
            <summary>
            Defines logger behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.ILogger.Information(System.String)">
            <summary>
            Logs a piece of information.
            </summary>
            <param name="message">The informational message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.ILogger.Warning(System.String)">
            <summary>
            Logs a warning.
            </summary>
            <param name="message">The warning message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.ILogger.Error(System.String)">
            <summary>
            Logs an error.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Logging.LogManager">
            <summary>
            Use this class for logging messages. This class supports pluggable loggers.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Logging.LogManager.LogManagerSingleton">
            <summary>
            The singleton log manager instance.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Logging.LogManager.registeredLoggers">
            <summary>
            The registered loggers collection.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.LogManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Store.PartnerCenter.Logging.LogManager"/> class from being created.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Logging.LogManager.Instance">
            <summary>
            Gets the singleton log manager instance.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Logging.LogManager.Loggers">
            <summary>
            Gets the registered loggers collection. You can add your custom loggers here.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.LogManager.Information(System.String)">
            <summary>
            Logs a piece of information.
            </summary>
            <param name="message">The informational message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.LogManager.Warning(System.String)">
            <summary>
            Logs a warning.
            </summary>
            <param name="message">The warning message.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Logging.LogManager.Error(System.String)">
            <summary>
            Logs an error.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ManagedServices.IManagedServiceCollection">
            <summary>
            Holds the customer's managed services operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ManagedServices.IManagedServiceCollection.Get">
            <summary>
            Retrieves all managed services. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The managed services.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ManagedServices.IManagedServiceCollection.GetAsync">
            <summary>
            Asynchronously retrieves all managed services. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The managed services.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ManagedServices.ManagedServiceCollectionOperations">
            <summary>
            Implements a customer's managed services operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ManagedServices.ManagedServiceCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.ManagedServices.ManagedServiceCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ManagedServices.ManagedServiceCollectionOperations.Get">
            <summary>
            Gets managed services for a customer.
            </summary>
            <returns>The customer's managed services.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ManagedServices.ManagedServiceCollectionOperations.GetAsync">
            <summary>
            Asynchronously gets managed services for a customer.
            </summary>
            <returns>The customer's managed services.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.PartnerService">
            <summary>
            This class contains the partner SDK properties and acts as the main entry point to create partners.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerService.instance">
            <summary>
            A singleton instance of the partner service.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerService.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Store.PartnerCenter.PartnerService"/> class from being created.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.PartnerService.RefreshCredentialsHandler">
            <summary>
            Defines a delegate which is called to refresh stale partner credentials.
            </summary>
            <param name="credentials">The outdated partner credentials.</param>
            <param name="context">The partner context.</param>
            <returns>A task that completes when the refresh is complete.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.Instance">
            <summary>
            Gets an instance of the partner service.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.ApiRootUrl">
            <summary>
            Gets or sets the partner service API root URL.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.ApiVersion">
            <summary>
            Gets the partner service API version.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.ApplicationName">
            <summary>
            Gets or sets an application name used to identify the calling application.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.ApiSubscriptionKey">
            <summary>
            Gets the partner service API subscription key.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.AdditionalHeaders">
            <summary>
            Gets or sets additional headers to be included with the API requests.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.AssemblyVersion">
            <summary>
            Gets the current Partner Center SDK version.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.Configuration">
            <summary>
            Gets the SDK's configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.Factory">
            <summary>
            Gets the partner factory used to create partner objects.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.RetryPolicy">
            <summary>
            Gets the default retry policy used by the partner SDK.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerService.RefreshCredentials">
            <summary>
            This callback is invoked when the partner SDK needs to refresh a partner credentials.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerService.CreatePartnerOperations(Microsoft.Store.PartnerCenter.IPartnerCredentials)">
            <summary>
            Creates a <see cref="T:Microsoft.Store.PartnerCenter.IAggregatePartner" /> instance and configures it using the provided partner credentials. The partner instance can be used to
            access all the Partner Center APIs.
            </summary>
            <param name="credentials">The partner credentials. Use the <see cref="T:Microsoft.Store.PartnerCenter.IPartnerCredentials" /> class to obtain these.</param>
            <returns>
            A configured partner operations object.
            </returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerService.SynchronousExecute``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Executes an asynchronous method synchronously in a way that prevents deadlocks in UI applications.
            </summary>
            <typeparam name="T">The return type.</typeparam>
            <param name="operation">The asynchronous operation to execute.</param>
            <returns>The operation's return value.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerService.SynchronousExecute(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Executes an asynchronous method synchronously in a way that prevents deadlocks in UI applications.
            </summary>
            <param name="operation">The asynchronous operation to execute.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerService.ReadPartnerSdkConfiguration">
            <summary>
            Reads the partner SDK configuration from the embedded resource file and massages its fields to be easily accessible.
            </summary>
            <returns>The partner SDK configuration.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2">
            <summary>
            This interface acts as a mediator between the SDK and the partner API service. It automatically adds customer HTTP headers and allows
            configuring them before executing the requests. It also handles responses in a standard manner. 
            </summary>
            <typeparam name="TRequest">The type of content that will be passed to the partner service API.</typeparam>
            <typeparam name="TResponse">The type of response produced from the partner service API.</typeparam>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.RequestId">
            <summary>
            Gets or sets the assigned Microsoft Id.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.CorrelationId">
            <summary>
            Gets or sets the assigned Microsoft correlation Id.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.Locale">
            <summary>
            Gets or sets the assigned Locale.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.IfMatch">
            <summary>
            Gets or sets the e-tag used for concurrency control.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.ContentType">
            <summary>
            Gets or sets the request content type.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.Accept">
            <summary>
            Gets or sets the accepted response type.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.AdditionalRequestHeaders">
            <summary>
            Gets the additional request headers.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.UriParameters">
            <summary>
            Gets a collection of Uri parameters which will be added to the request query string. You can add your own uri parameters to this collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.ResourcePath">
            <summary>
            Gets or sets the resource path which will be appended to the root URL.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.GetAsync">
            <summary>
            Executes a GET request against the partner service.
            </summary>
            <returns>The GET response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.GetFileContentAsync">
            <summary>
            Executes a file content request against the partner service.
            </summary>
            <returns>The file content stream.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.PostAsync(`0)">
            <summary>
            Executes a POST request against the partner service.
            </summary>
            <param name="content">The request body content.</param>
            <returns>The POST response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.PatchAsync(`0)">
            <summary>
            Executes a PATCH request against the partner service.
            </summary>
            <param name="content">The request body content.</param>
            <returns>The PATCH response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.PutAsync(`0)">
            <summary>
            Executes a PUT request against the partner service.
            </summary>
            <param name="content">The request body content.</param>
            <returns>The PUT response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.DeleteAsync">
            <summary>
            Executes a DELETE request against the partner service.
            </summary>
            <returns>The DELETE response task.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy`2.HeadAsync">
            <summary>
            Executes a HEAD request against the partner service.
            </summary>
            <returns>The HEAD response.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Network.PartnerServiceHttpMessageHandler`2">
            <summary>
            Appends the needed HTTP headers to the partner service HTTP requests.
            </summary>
            <typeparam name="T">The type of content that will be passed to the partner service API.</typeparam>
            <typeparam name="TU">The type of response produced from the partner service API.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceHttpMessageHandler`2.#ctor(Microsoft.Store.PartnerCenter.Network.IPartnerServiceProxy{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Network.PartnerServiceHttpMessageHandler`2"/> class.
            </summary>
            <param name="partnerServiceProxy">The partner service proxy instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceHttpMessageHandler`2.PartnerServiceProxy">
            <summary>
            Gets or sets the partner service proxy instance this handler will be attached to.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceHttpMessageHandler`2.InjectHeaders(System.Net.Http.HttpRequestMessage)">
            <summary>
            Injects the headers expected by the partner service.
            </summary>
            <param name="request">The HTTP request.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceHttpMessageHandler`2.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends the HTTP request.
            </summary>
            <param name="request">The HTTP request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The HTTP response.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2">
            <summary>
            An implementation of the partner service proxy which automatically serializes request content into JSON payload and deserializes the response from JSON
            into the given response type.
            </summary>
            <typeparam name="TRequest">The type of content that will be passed to the partner service API.</typeparam>
            <typeparam name="TResponse">The type of response produced from the partner service API.</typeparam>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.UriPathSeparator">
            <summary>
            The uri path separator
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.requestContext">
            <summary>
            The request context the proxy will use in executing the network calls.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.jsonSerializerSettings">
            <summary>
            Setting used on JSON serialization.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,Microsoft.Store.PartnerCenter.ErrorHandling.IFailedPartnerServiceResponseHandler,Newtonsoft.Json.JsonConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="resourcePath">The resource path which will be appended to the root URL.</param>
            <param name="errorHandler">An optional handler for failed responses. The default will be used if not provided.</param>
            <param name="jsonConverter">An optional JSON response converter. The default will be used if not provided.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.RequestId">
            <summary>
            Gets or sets the assigned Microsoft Id.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.CorrelationId">
            <summary>
            Gets or sets the assigned Microsoft correlation Id.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.Locale">
            <summary>
            Gets or sets the locale.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.IfMatch">
            <summary>
            Gets or sets the e-tag used for concurrency control.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.ContentType">
            <summary>
            Gets or sets the request content type.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.Accept">
            <summary>
            Gets or sets the accepted response type.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.IsUrlPathAlreadyBuilt">
            <summary>
            Gets or sets whether the proxy should build the URL or the URL has already been built.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.AdditionalRequestHeaders">
            <summary>
            Gets the additional request headers.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.UriParameters">
            <summary>
            Gets a collection of Uri parameters which will be added to the request query string. You can add your own uri parameters to this collection.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.ResourcePath">
            <summary>
            Gets or sets the resource path which will be appended to the root URL.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.JsonConverter">
            <summary>
            Gets an optional JSON converter to use.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.ErrorHandler">
            <summary>
            Gets or sets the error handler for non successful responses.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.GetAsync">
            <summary>
            Executes a GET request against the partner service.
            </summary>
            <returns>The GET response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.GetFileContentAsync">
            <summary>
            Executes a file content request against the partner service.
            </summary>
            <returns>The file content stream.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.PostAsync(`0)">
            <summary>
            Executes a POST request against the partner service.
            </summary>
            <param name="content">The request body content.</param>
            <returns>The POST response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.PatchAsync(`0)">
            <summary>
            Executes a PATCH request against the partner service.
            </summary>
            <param name="content">The request body content.</param>
            <returns>The PATCH response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.PutAsync(`0)">
            <summary>
            Executes a PUT request against the partner service.
            </summary>
            <param name="content">The request body content.</param>
            <returns>The PUT response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.DeleteAsync">
            <summary>
            Executes a DELETE request against the partner service.
            </summary>
            <returns>The DELETE response task.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.HeadAsync">
            <summary>
            Executes a HEAD request against the partner service.
            </summary>
            <returns>The HEAD response task.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.BuildPartnerServiceApiUri">
            <summary>
            Builds the partner service API Uri based on the configured properties.
            </summary>
            <returns>The complete partner service API Uri needed to invoke the current operation.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.BuildHttpClient">
            <summary>
            Builds the HTTP client needed to perform network calls. This method aids in mocking the HttpClient in unit tests
            and hence was implemented as protected in order not to expose it to other SDK classes.
            </summary>
            <returns>A configured HTTP client.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.SendAsync(System.Func{System.Net.Http.HttpClient,System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>
            Sends an HTTP request to the partner service after checking that the credentials are not
            expired. It will also handle the response.
            </summary>
            <param name="httpOperation">The HTTP operation to execute.</param>
            <returns>A deserialized HTTP response.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.BuildQueryString">
            <summary>
            Builds the query string part of the REST API URL.
            </summary>
            <returns>The query string.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.HandleResponseAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles partner service responses.
            </summary>
            <param name="response">The partner service response.</param>
            <returns>The configured response result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.PartnerServiceProxy`2.ValidateCredentialsAsync">
            <summary>
            Ensures that the partner credentials are up to date.
            </summary>
            <returns>A task that is complete when the verification is done.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Network.RetryableHttpCall">
            <summary>
            Implements retryable HTTP calls. Use this class with the retry policy you need to implement HTTP call retries.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Network.RetryableHttpCall.nonRetryableHttpCodes">
            <summary>
            Responses with codes listed here will not be retried.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.RetryableHttpCall.#ctor(Microsoft.Store.PartnerCenter.Retries.IRetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Network.RetryableHttpCall"/> class.
            </summary>
            <param name="retryPolicy">An optional retry policy. The default policy will be used if not provided.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Network.RetryableHttpCall.RetryPolicy">
            <summary>
            Gets or set the retry policy.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Network.RetryableHttpCall.Execute(System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
            <summary>
            Executes an HTTP operation with the configured retry policy.
            </summary>
            <param name="httpCall">The HTTP call.</param>
            <returns>The HTTP response.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.PartnerExtensions">
            <summary>
            Holds useful extension methods used across the partner SDK.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerExtensions.IsFatalException(System.Exception)">
            <summary>
            Checks if an exception is fatal.
            </summary>
            <param name="ex">The exception to check.</param>
            <returns>True if Exception is fatal and process should die.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerExtensions.Invoke``2(Microsoft.Store.PartnerCenter.Models.Link,Microsoft.Store.PartnerCenter.IPartner,``0,Newtonsoft.Json.JsonConverter)">
            <summary>
            Invokes a link with a request body and returns the result.
            </summary>
            <typeparam name="TRequest">The type of the request body.</typeparam>
            <typeparam name="TResponse">The return type of the invocation.</typeparam>
            <param name="link">The link to invoke.</param>
            <param name="partnerOperations">A partner operations object from which credentials and context are extracted.</param>
            <param name="requestBody">The request body to send.</param>
            <param name="converter">An optional JSON converter to be used in encoding and decoding requests and responses.</param>
            <returns>The link invocation result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerExtensions.InvokeAsync``2(Microsoft.Store.PartnerCenter.Models.Link,Microsoft.Store.PartnerCenter.IPartner,``0,Newtonsoft.Json.JsonConverter)">
            <summary>
            Asynchronously invokes a link with a request body and returns the result.
            </summary>
            <typeparam name="TRequest">The type of the request body.</typeparam>
            <typeparam name="TResponse">The return type of the invocation.</typeparam>
            <param name="link">The link to invoke.</param>
            <param name="partnerOperations">A partner operations object from which credentials and context are extracted.</param>
            <param name="requestBody">The request body to send.</param>
            <param name="converter">An optional JSON converter to be used in encoding and decoding requests and responses.</param>
            <returns>The link invocation result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerExtensions.Invoke``1(Microsoft.Store.PartnerCenter.Models.Link,Microsoft.Store.PartnerCenter.IPartner,Newtonsoft.Json.JsonConverter)">
            <summary>
            Invokes a link and returns the result.
            </summary>
            <typeparam name="TResponse">The return type of the invocation.</typeparam>
            <param name="link">The link to invoke.</param>
            <param name="partnerOperations">A partner operations object from which credentials and context are extracted.</param>
            <param name="converter">An optional JSON converter to be used in encoding and decoding requests and responses.</param>
            <returns>The link invocation result.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerExtensions.InvokeAsync``1(Microsoft.Store.PartnerCenter.Models.Link,Microsoft.Store.PartnerCenter.IPartner,Newtonsoft.Json.JsonConverter)">
            <summary>
            Asynchronously invokes a link and returns the result.
            </summary>
            <typeparam name="TResponse">The return type of the invocation.</typeparam>
            <param name="link">The link to invoke.</param>
            <param name="partnerOperations">A partner operations object from which credentials and context are extracted.</param>
            <param name="converter">An optional JSON converter to be used in encoding and decoding requests and responses.</param>
            <returns>The link invocation result.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.PartnerOperations">
            <summary>
            The partner implementation class.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.enumeratorContainer">
            <summary>
            The resource collection enumerator container.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.customers">
            <summary>
            The partner customers operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.offerCategories">
            <summary>
            The offer categories.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.offers">
            <summary>
            The offers operation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.products">
            <summary>
            The products operation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.extensions">
            <summary>
            The extensions operation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.profiles">
            <summary>
            The profile operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.invoices">
            <summary>
            The partner invoices.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.serviceRequests">
            <summary>
            The service request operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.agreementDetails">
            <summary>
            The agreement details operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.serviceIncidents">
            <summary>
            The service incidents operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.countryValidationRules">
            <summary>
            The country validation rules operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.usageSummary">
            <summary>
            The partner usage summary operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.domains">
            <summary>
            The domains operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.auditRecords">
            <summary>
            The audit records collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.rateCards">
            <summary>
            The rate cards collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.relationships">
            <summary>
            The relationship collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.analytics">
            <summary>
            The analytics collection operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.PartnerOperations.validations">
            <summary>
            The validation operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.PartnerOperations.#ctor(Microsoft.Store.PartnerCenter.IPartnerCredentials,Microsoft.Store.PartnerCenter.RequestContext.IRequestContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.PartnerOperations"/> class.
            </summary>
            <param name="credentials">The partner credentials.</param>
            <param name="context">A partner context.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Credentials">
            <summary>
            Gets the partner credentials.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.RequestContext">
            <summary>
            Gets the partner context.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Enumerators">
            <summary>
            Gets the collection enumerators available for traversing through results.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.OfferCategories">
            <summary>
            Gets the offer categories operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Profiles">
            <summary>
            Gets the partner profiles operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Customers">
            <summary>
            Gets the partner customers operations.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Offers">
            <summary>
            Gets the offer operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Products">
            <summary>
            Gets the product operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Extensions">
            <summary>
            Gets the extensions operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Invoices">
            <summary>
            Gets the partner's invoices.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.ServiceRequests">
            <summary>
            Gets the Service Request operations available.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.AgreementDetails">
            <summary>
            Gets the agreement details operations available.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.ServiceIncidents">
            <summary>
            Gets the Service incidents operations available.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.CountryValidationRules">
            <summary>
            Gets the country validation rules operations available.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.UsageSummary">
            <summary>
            Gets the usage summary operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Domains">
            <summary>
            Gets the Domains operations available.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.AuditRecords">
            <summary>
            Gets the audit records operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.RateCards">
            <summary>
            Gets the rate card operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Relationships">
            <summary>
            Gets the relationship collection operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Analytics">
            <summary>
            Gets the analytics collection operations available to the partner.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.PartnerOperations.Validations">
            <summary>
            Gets the validation operations available to the partner.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.OrganizationProfileOperations">
            <summary>
            The organization profile operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.OrganizationProfileOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Profiles.OrganizationProfileOperations"/> class. 
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.OrganizationProfileOperations.Get">
            <summary>
            Retrieves the organization profile.
            </summary>
            <returns>The organization profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.OrganizationProfileOperations.GetAsync">
            <summary>
            Asynchronously retrieves the organization profile.
            </summary>
            <returns>The organization profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.OrganizationProfileOperations.Update(Microsoft.Store.PartnerCenter.Models.Partners.OrganizationProfile)">
            <summary>
            Updates the Organization Profile
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated Organization Profile</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.OrganizationProfileOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.OrganizationProfile)">
            <summary>
            Updates the Organization Profile 
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated Organization Profile</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.IOrganizationProfile">
            <summary>
            Encapsulates the behavior of an organization profile.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IOrganizationProfile.Get">
            <summary>
            Retrieves the partner's organization profile.
            </summary>
            <returns>The organization profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IOrganizationProfile.GetAsync">
            <summary>
            Asynchronously retrieves the partner's organization profile.
            </summary>
            <returns>The organization profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IOrganizationProfile.Update(Microsoft.Store.PartnerCenter.Models.Partners.OrganizationProfile)">
            <summary>
            Updates the partner's organization profile.
            </summary>
            <param name="organizationProfile">The organization profile.</param>
            <returns>The updated organization profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IOrganizationProfile.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.OrganizationProfile)">
            <summary>
            Asynchronously updates the partner's organization profile.
            </summary>
            <param name="organizationProfile">The organization profile.</param>
            <returns>The updated organization profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.ILegalBusinessProfile">
            <summary>
            Encapsulates behavior of a partner's legal business profile.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ILegalBusinessProfile.Get(Microsoft.Store.PartnerCenter.Models.Partners.VettingVersion)">
            <summary>
            Retrieves the legal business profile.
            </summary>
            <param name="vettingVersion">(Optional) The vetting version. The default value is set to Current.</param>
            <returns>The legal business profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ILegalBusinessProfile.GetAsync(Microsoft.Store.PartnerCenter.Models.Partners.VettingVersion)">
            <summary>
            Asynchronously retrieves the legal business profile.
            </summary>
            <param name="vettingVersion">(Optional) The vetting version. The default value is set to Current.</param>
            <returns>The legal business profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ILegalBusinessProfile.Update(Microsoft.Store.PartnerCenter.Models.Partners.LegalBusinessProfile)">
            <summary>
            Updates the legal business profile.
            </summary>
            <param name="legalBusinessProfile">The legal business profile information.</param>
            <returns>The updated legal business profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ILegalBusinessProfile.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.LegalBusinessProfile)">
            <summary>
            Asynchronously updates the legal business profile.
            </summary>
            <param name="legalBusinessProfile">The legal business profile information.</param>
            <returns>The updated legal business profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.IMpnProfile">
            <summary>
            Encapsulates behavior of a partner's MPN profile.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IMpnProfile.Get">
            <summary>
            Retrieves the logged in partner's MPN profile.
            </summary>
            <returns>The partner's MPN profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IMpnProfile.GetAsync">
            <summary>
            Asynchronously retrieves the logged in partner's MPN profile.
            </summary>
            <returns>The partner's MPN profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IMpnProfile.Get(System.String)">
            <summary>
            Retrieves a partner's MPN profile by MPN Id.
            </summary>
            <param name="mpnId">The MPN id.</param>
            <returns>The partner's MPN profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IMpnProfile.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a partner's MPN profile by MPN Id.
            </summary>
            <param name="mpnId">The MPN id.</param>
            <returns>The partner's MPN profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.IPartnerProfileCollection">
            <summary>
            Represents the behavior of a partner's profiles.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.IPartnerProfileCollection.LegalBusinessProfile">
            <summary>
            Gets the operations available for the legal business profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.IPartnerProfileCollection.MpnProfile">
            <summary>
            Gets the operations available for the Mpn profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.IPartnerProfileCollection.SupportProfile">
            <summary>
            Gets the operations available for the partner support profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.IPartnerProfileCollection.OrganizationProfile">
            <summary>
            Gets the operations available for the organization profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.IPartnerProfileCollection.BillingProfile">
            <summary>
            Gets the operations available for the partner billing profile.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.IBillingProfile">
            <summary>
            Encapsulates behavior of a billing profile.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IBillingProfile.Get">
            <summary>
            Retrieves a partner's billing profile.
            </summary>
            <returns>The billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IBillingProfile.GetAsync">
            <summary>
            Asynchronously retrieves a partner's billing profile.
            </summary>
            <returns>The billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IBillingProfile.Update(Microsoft.Store.PartnerCenter.Models.Partners.BillingProfile)">
            <summary>
            Updates the partner's billing profile.
            </summary>
            <param name="billingProfile">The billing profile information.</param>
            <returns>The updated billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.IBillingProfile.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.BillingProfile)">
            <summary>
            Asynchronously updates the partner's billing profile.
            </summary>
            <param name="billingProfile">The billing profile information.</param>
            <returns>The updated billing profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.ISupportProfile">
            <summary>
            Encapsulates behavior of a support profile.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ISupportProfile.Get">
            <summary>
            Retrieves the support profile. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The support profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ISupportProfile.GetAsync">
            <summary>
            Asynchronously retrieves the support profile. This operation is currently only supported for user based credentials.
            </summary>
            <returns>The support profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ISupportProfile.Update(Microsoft.Store.PartnerCenter.Models.Partners.SupportProfile)">
            <summary>
            Updates the support profile. This operation is currently only supported for user based credentials.
            </summary>
            <param name="supportProfile">The support profile.</param>
            <returns>The updated support profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.ISupportProfile.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.SupportProfile)">
            <summary>
            Asynchronously updates the support profile. This operation is currently only supported for user based credentials.
            </summary>
            <param name="supportProfile">The support profile.</param>
            <returns>The updated support profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.LegalBusinessProfileOperations">
            <summary>
            The legal business profile operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.LegalBusinessProfileOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Profiles.LegalBusinessProfileOperations"/> class. 
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.LegalBusinessProfileOperations.Get(Microsoft.Store.PartnerCenter.Models.Partners.VettingVersion)">
            <summary>
            Retrieves the legal business profile.
            </summary>
            <param name="vettingVersion">(Optional) The vetting version. The default value is set to Current.</param>
            <returns>The legal business profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.LegalBusinessProfileOperations.GetAsync(Microsoft.Store.PartnerCenter.Models.Partners.VettingVersion)">
            <summary>
            Asynchronously retrieves the legal business profile.
            </summary>
            <param name="vettingVersion">(Optional) The vetting version. The default value is set to Current.</param>
            <returns>The legal business profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.LegalBusinessProfileOperations.Update(Microsoft.Store.PartnerCenter.Models.Partners.LegalBusinessProfile)">
            <summary>
            Updates the Legal Business Profile.
            </summary>
            <param name="legalBusinessProfile">Payload of the update request.</param>
            <returns>Updated Legal Business Profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.LegalBusinessProfileOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.LegalBusinessProfile)">
            <summary>
            Asynchronously updates the Legal Business Profile.
            </summary>
            <param name="legalBusinessProfile">Payload of the update request.</param>
            <returns>Updated Legal Business Profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.MpnProfileOperations">
            <summary>
            Class which contains operations for Microsoft Partner Network Profile
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.MpnProfileOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Profiles.MpnProfileOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.MpnProfileOperations.Get">
            <summary>
            Retrieves the logged in reseller's MpnProfile.
            </summary>
            <returns>The Mpn profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.MpnProfileOperations.GetAsync">
            <summary>
            Asynchronously retrieves the logged in reseller's MpnProfile.
            </summary>
            <returns>The Mpn profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.MpnProfileOperations.Get(System.String)">
            <summary>
            Retrieves a MpnProfile by MPN Id.
            </summary>
            <param name="mpnId">The MPN Id.</param>
            <returns>The Mpn profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.MpnProfileOperations.GetAsync(System.String)">
            <summary>
            Asynchronously retrieves a MpnProfile by MPN Id.
            </summary>
            <param name="mpnId">The MPN id.</param>
            <returns>The Mpn profile</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations">
            <summary>
            The partner profile collection operations implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.legalBusinessProfile">
            <summary>
            The legal business profile operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.mpnProfileOperations">
            <summary>
            The Mpn profile operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.supportProfileOperations">
            <summary>
            The support profile operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.organizationProfile">
            <summary>
            The organization profile operations.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.billingProfile">
            <summary>
            The billing profile operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.LegalBusinessProfile">
            <summary>
            Gets the operations available for the legal business profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.MpnProfile">
            <summary>
            Gets the operations available for the Mpn profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.SupportProfile">
            <summary>
            Gets the operations available for the support profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.OrganizationProfile">
            <summary>
            Gets the operations available for the organization profile.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Profiles.PartnerProfileCollectionOperations.BillingProfile">
            <summary>
            Gets the operations available for the billing profile.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.BillingProfileOperations">
            <summary>
            The billing profile operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.BillingProfileOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Profiles.BillingProfileOperations"/> class. 
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.BillingProfileOperations.Get">
            <summary>
            Retrieves the billing profile.
            </summary>
            <returns>The billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.BillingProfileOperations.GetAsync">
            <summary>
            Asynchronously retrieves the billing profile.
            </summary>
            <returns>The billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.BillingProfileOperations.Update(Microsoft.Store.PartnerCenter.Models.Partners.BillingProfile)">
            <summary>
            Updates the billing profile.
            </summary>
            <param name="updatePayload">Payload of the update request.</param>
            <returns>Updated billing profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.BillingProfileOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.BillingProfile)">
            <summary>
            Updates the billing profile.
            </summary>
            <param name="updatePayload">Payload of the update request.</param>
            <returns>Updated billing Profile.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Profiles.SupportProfileOperations">
            <summary>
            The support profile operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.SupportProfileOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Profiles.SupportProfileOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.SupportProfileOperations.Get">
            <summary>
            Retrieves the support profile.
            </summary>
            <returns>The support profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.SupportProfileOperations.GetAsync">
            <summary>
            Asynchronously Retrieves the support profile.
            </summary>
            <returns>The support profile.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.SupportProfileOperations.Update(Microsoft.Store.PartnerCenter.Models.Partners.SupportProfile)">
            <summary>
            Updates the support profile.
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated support profile</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Profiles.SupportProfileOperations.UpdateAsync(Microsoft.Store.PartnerCenter.Models.Partners.SupportProfile)">
            <summary>
            Asynchronously updates the support Profile.
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated support profile</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Retries.ExponentialBackOffRetryPolicy">
            <summary>
            This class implements binary exponential back off retries. Each time an operation fails, the amount of time
            to wait before executing the next retry increases.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Retries.ExponentialBackOffRetryPolicy.maxRetries">
            <summary>
            The maximum number of retry attempts.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.ExponentialBackOffRetryPolicy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Retries.ExponentialBackOffRetryPolicy"/> class.
            </summary>
            <param name="maxRetries">The maximum number of retries.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Retries.ExponentialBackOffRetryPolicy.MaxRetries">
            <summary>
            Gets or sets the maximum number of retries to perform.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.ExponentialBackOffRetryPolicy.ShouldRetry(System.Int32)">
            <summary>
            Indicates whether a retry should be performed or not.
            </summary>
            <param name="attempt">The attempt number.</param>
            <returns>True to retry, false to not.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.ExponentialBackOffRetryPolicy.BackOffTime(System.Int32)">
            <summary>
            Indicates the time to hold off before executing the next retry.
            </summary>
            <param name="attempt">The attempt number.</param>
            <returns>The back off time.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Retries.IRetryableOperation`1">
            <summary>
            Defines a retryable operation.
            </summary>
            <typeparam name="T">The return type of the operation.</typeparam>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.IRetryableOperation`1.Execute(System.Func{`0})">
            <summary>
            Executes the operation with retries.
            </summary>
            <param name="operation">The operation to execute.</param>
            <returns>The operation's result.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Retries.IRetryPolicy">
            <summary>
            Defines a retry policy.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.IRetryPolicy.ShouldRetry(System.Int32)">
            <summary>
            Indicates whether a retry should be performed or not.
            </summary>
            <param name="attempt">The attempt number.</param>
            <returns>True to retry, false to not.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.IRetryPolicy.BackOffTime(System.Int32)">
            <summary>
            Indicates the time to hold off before executing the next retry.
            </summary>
            <param name="attempt">The attempt number.</param>
            <returns>The back off time.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy">
            <summary>
            A linear back off policy waits for a constant amount of time between retries.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy.maxRetries">
            <summary>
            The maximum number of retry attempts.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy"/> class.
            </summary>
            <param name="backOff">The back off time between retries.</param>
            <param name="maxRetries">The maximum number of retries.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy.BackOff">
            <summary>
            Gets or sets the back off time between retries.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy.MaxRetries">
            <summary>
            Gets or sets the maximum number of retries to perform.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy.ShouldRetry(System.Int32)">
            <summary>
            Indicates whether a retry should be performed or not.
            </summary>
            <param name="attempt">The attempt number.</param>
            <returns>True to retry, false to not.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Retries.LinearBackOffRetryPolicy.BackOffTime(System.Int32)">
            <summary>
            Indicates the time to hold off before executing the next retry.
            </summary>
            <param name="attempt">The attempt number.</param>
            <returns>The back off time.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations">
            <summary>
            The customer's service requests operations implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations.Item(System.String)">
            <summary>
            Gets a Service Request specified by Id.
            </summary>
            <param name="serviceRequestId">Service Request Id.</param>
            <returns>Service Request Operation.s</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations.ById(System.String)">
            <summary>
            Retrieves a Service Request specified by Id.
            </summary>
            <param name="serviceRequestId">Service Request Id.</param>
            <returns>Service Request Operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries for service requests associated with a customer
            </summary>
            <param name="serviceRequestsQuery">The query with search parameters</param>
            <returns>A collection of service requests matching the criteria</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries asynchronously for service requests associated with a customer
            </summary>
            <param name="serviceRequestsQuery">The query with search parameters</param>
            <returns>A collection of service requests matching the criteria</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations.Get">
            <summary>
            Retrieves Service Requests associated to the customer.
            </summary>
            <returns>A collection of service requests</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestCollectionOperations.GetAsync">
            <summary>
            Retrieves Service Requests associated to the customer asynchronously.
            </summary>
            <returns>A collection of service requests</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestOperations">
            <summary>
            Implements operations that can be performed on a single customer's service requests.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer tenant Id.</param>
            <param name="serviceRequestId">The service Request Id</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestOperations.Get">
            <summary>
            Get Service Request By customer ID
            </summary>
            <returns>Service Request</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestOperations.GetAsync">
            <summary>
            Get Service Request By ID
            </summary>
            <returns>Service Request</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestOperations.Patch(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest)">
            <summary>
            Patches a Service Request.
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated Service Request</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.CustomerServiceRequestOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest)">
            <summary>
            Patches a Service Request.
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated Service Request</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.IPartnerServiceRequestCollection">
            <summary>
            Represents the behavior of partner service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.ServiceRequests.IPartnerServiceRequestCollection.SupportTopics">
            <summary>
            Gets a set of operations that can be performed on Support Topics.
            </summary>
            <returns>Support topic operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IPartnerServiceRequestCollection.Create(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest,System.String)">
            <summary>
            Creates a new service request.
            </summary>
            <param name="serviceRequest">The new service request information.</param>
            <param name="agentLocale">The agent locale.</param>
            <returns>The service request information that was just created.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IPartnerServiceRequestCollection.CreateAsync(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest,System.String)">
            <summary>
            Asynchronously creates a new service request.
            </summary>
            <param name="serviceRequest">The new service request  information.</param>
            <param name="agentLocale">The agent locale.</param>
            <returns>The service request information that was just created.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection">
            <summary>
            Represents the behavior of service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.Item(System.String)">
            <summary>
            Gets a single service request behavior.
            </summary>
            <param name="serviceRequestId">The service request ID.</param>
            <returns>The service request operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.ById(System.String)">
            <summary>
            Gets a single service request behavior.
            </summary>
            <param name="serviceRequestId">The service request ID.</param>
            <returns>The service request operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.Get">
            <summary>
            Retrieves all service requests.
            </summary>
            <returns>The service requests.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.GetAsync">
            <summary>
            Asynchronously retrieves all service requests.
            </summary>
            <returns>The service requests.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries service requests.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported. Default sorting is on status field.
            </summary>
            <param name="serviceRequestsQuery">A query to apply onto service requests. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested service requests.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequestCollection.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Asynchronously queries service requests.
            - Count queries are not supported by this operation.
            - You can set the page size or filter or do both at the same time.
            - Sort is not supported. Default sorting is on status field.
            </summary>
            <param name="serviceRequestsQuery">A query to apply onto service requests. Check <see cref="T:Microsoft.Store.PartnerCenter.Models.Query.QueryFactory"/> to see how
            to build queries.</param>
            <returns>The requested service requests.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest">
            <summary>
            Groups operations that can be performed on a single service request.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest.Get">
            <summary>
            Retrieves the service request.
            </summary>
            <returns>The service request information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest.GetAsync">
            <summary>
            Asynchronously retrieves the service request.
            </summary>
            <returns>The service request information.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest.Patch(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest)">
            <summary>
            Patches a service request.
            </summary>
            <param name="serviceRequest">The service request that has the properties to be patched set.</param>
            <returns>The updated service request.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.IServiceRequest.PatchAsync(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest)">
            <summary>
            Asynchronously patches a service request.
            </summary>
            <param name="serviceRequest">The service request that has the properties to be patched set.</param>
            <returns>The updated service request.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.ISupportTopicsCollection">
            <summary>
            Represents the behavior of support topics.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.ISupportTopicsCollection.Get">
            <summary>
            Retrieves all the support topics.
            </summary>
            <returns>The support topics.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.ISupportTopicsCollection.GetAsync">
            <summary>
            Asynchronously retrieves all the support topics.
            </summary>
            <returns>The support topics.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations">
            <summary>
            The partner's service requests operations and implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.SupportTopics">
            <summary>
            Retrieves a collection of operations that can be performed on support topics.
            </summary>
            <returns>a collection of operations that can be performed on support topics.</returns>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.Item(System.String)">
            <summary>
            Gets a Service Request specified by Id.
            </summary>
            <param name="serviceRequestId">Incident Id.</param>
            <returns>Service Request Operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.ById(System.String)">
            <summary>
            Retrieves a Service Request specified by Id.
            </summary>
            <param name="serviceRequestId">Incident Id.</param>
            <returns>Service Request Operations.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.Query(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries for service requests associated with the partner.
            </summary>
            <param name="serviceRequestsQuery">The query with search parameters.</param>
            <returns>A collection of service requests matching the criteria.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.QueryAsync(Microsoft.Store.PartnerCenter.Models.Query.IQuery)">
            <summary>
            Queries asynchronously for service requests associated with the partner
            </summary>
            <param name="serviceRequestsQuery">The query with search parameters.</param>
            <returns>A collection of service requests matching the criteria.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.Get">
            <summary>
            Retrieves Service Requests associated to the partner.
            </summary>
            <returns>A collection of service requests.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.GetAsync">
            <summary>
            Retrieves Service Requests associated to the partner asynchronously.
            </summary>
            <returns>A collection of service requests.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.Create(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest,System.String)">
            <summary>
            Creates a service request.
            </summary>
            <param name="serviceRequest">Service request to be created.</param>
            <param name="agentLocale">The agent locale.</param>
            <returns>The created service request with associated Identifier.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestCollectionOperations.CreateAsync(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest,System.String)">
            <summary>
            Creates a service request asynchronously .
            </summary>
            <param name="serviceRequest">Service request to be created.</param>
            <param name="agentLocale">The agent locale.</param>
            <returns>The created service request with associated Identifier.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestOperations">
            <summary>
            Implements operations that can be performed on a single partner's service requests.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="serviceRequestId">The service request Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestOperations.Get">
            <summary>
            Get Service Request By ID
            </summary>
            <returns>Service Request</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestOperations.GetAsync">
            <summary>
            Get Service Request By ID
            </summary>
            <returns>Service Request</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestOperations.Patch(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest)">
            <summary>
            Patches a Service Request.
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated Service Request</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.PartnerServiceRequestOperations.PatchAsync(Microsoft.Store.PartnerCenter.Models.ServiceRequests.ServiceRequest)">
            <summary>
            Patches a Service Request.
            </summary>
            <param name="updatePayload">Payload of the update request</param>
            <returns>Updated Service Request</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.ServiceRequests.SupportTopicsCollectionOperations">
            <summary>
            The operations that can be performed on support topics. Support Topics operations are localizable.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.SupportTopicsCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.ServiceRequests.SupportTopicsCollectionOperations"/> class with default locale.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.SupportTopicsCollectionOperations.Get">
            <summary>
            Gets a collection of available support topics to create service request.
            </summary>
            <returns>Collection of Support Topic Info.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.ServiceRequests.SupportTopicsCollectionOperations.GetAsync">
            <summary>
            Gets a collection of available support topics to create service request asynchronously.
            </summary>
            <returns>Collection of Support Topic Info.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Utilization.AzureUtilizationCollectionOperations">
            <summary>
            Groups behavior related to Azure subscription utilization records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.AzureUtilizationCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Utilization.AzureUtilizationCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
            <param name="customerId">The customer Id.</param>
            <param name="subscriptionId">The subscription Id.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.AzureUtilizationCollectionOperations.Query(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Store.PartnerCenter.Models.Utilizations.AzureUtilizationGranularity,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Retrieves utilization records for the Azure subscription.
            </summary>
            <param name="startTime">The starting time of when the utilization was metered in the billing system.</param>
            <param name="endTime">The ending time of when the utilization was metered in the billing system.</param>
            <param name="granularity">The resource usage time granularity. Can either be daily or hourly. Default is daily.</param>
            <param name="showDetails">If set to true, the utilization records will be split by the resource instance levels. If set to false, the utilization records
            will be aggregated on the resource level. Default is true.</param>
            <param name="size">An optional maximum number of records to return. Default is 1000. The returned resource collection will specify a next link in case there
            were more utilization records available.</param>
            <returns>The Azure resource utilization for the subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.AzureUtilizationCollectionOperations.QueryAsync(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Store.PartnerCenter.Models.Utilizations.AzureUtilizationGranularity,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Asynchronously retrieves utilization records for the Azure subscription.
            </summary>
            <param name="startTime">The starting time of when the utilization was metered in the billing system.</param>
            <param name="endTime">The ending time of when the utilization was metered in the billing system.</param>
            <param name="granularity">The resource usage time granularity. Can either be daily or hourly. Default is daily.</param>
            <param name="showDetails">If set to true, the utilization records will be split by the resource instance levels. If set to false, the utilization records
            will be aggregated on the resource level. Default is true.</param>
            <param name="size">An optional maximum number of records to return. The returned resource collection will specify a next link in case there
            were more utilization records available.</param>
            <returns>A task that returns the Azure resource utilization for the subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.AzureUtilizationCollectionOperations.Seek(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Seeks pages of of utilization for resources that belong to an Azure subscription owned by a customer of the partner.
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>The next page of utilization records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.AzureUtilizationCollectionOperations.SeekAsync(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Asynchronously seeks pages of utilization for resources that belong to an Azure subscription owned by a customer of the partner.
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>A task that returns the next page of utilization records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Utilization.IAzureUtilizationCollection">
            <summary>
            Groups behavior related to Azure subscription utilization records.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.IAzureUtilizationCollection.Query(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Store.PartnerCenter.Models.Utilizations.AzureUtilizationGranularity,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Retrieves utilization records for the Azure subscription.
            </summary>
            <param name="startTime">The starting time of when the utilization was metered in the billing system.</param>
            <param name="endTime">The ending time of when the utilization was metered in the billing system.</param>
            <param name="granularity">The resource usage time granularity. Can either be daily or hourly. Default is daily.</param>
            <param name="showDetails">If set to true, the utilization records will be split by the resource instance levels. If set to false, the utilization records
            will be aggregated on the resource level. Default is true.</param>
            <param name="size">An optional maximum number of records to return. The returned resource collection will specify a next link in case there
            were more utilization records available.</param>
            <returns>The Azure resource utilization for the subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.IAzureUtilizationCollection.QueryAsync(System.DateTimeOffset,System.DateTimeOffset,Microsoft.Store.PartnerCenter.Models.Utilizations.AzureUtilizationGranularity,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Asynchronously retrieves utilization records for the Azure subscription.
            </summary>
            <param name="startTime">The starting time of when the utilization was metered in the billing system.</param>
            <param name="endTime">The ending time of when the utilization was metered in the billing system.</param>
            <param name="granularity">The resource usage time granularity. Can either be daily or hourly. Default is daily.</param>
            <param name="showDetails">If set to true, the utilization records will be split by the resource instance levels. If set to false, the utilization records
            will be aggregated on the resource level. Default is true.</param>
            <param name="size">An optional maximum number of records to return. The returned resource collection will specify a next link in case there
            were more utilization records available.</param>
            <returns>A task that returns the Azure resource utilization for the subscription.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.IAzureUtilizationCollection.Seek(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Seeks pages of of utilization for resources that belong to an Azure subscription owned by a customer of the partner.
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>The next page of utilization records.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.IAzureUtilizationCollection.SeekAsync(System.String,Microsoft.Store.PartnerCenter.Models.Query.SeekOperation)">
            <summary>
            Asynchronously seeks pages of utilization for resources that belong to an Azure subscription owned by a customer of the partner.
            </summary>
            <param name="continuationToken">The continuation token from the previous results.</param>
            <param name="seekOperation">The seek operation to perform. Next is only supported.</param>
            <returns>A task that returns the next page of utilization records.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Utilization.UtilizationCollectionOperations">
            <summary>
            Implements subscription utilization behavior.
            </summary>
        </member>
        <member name="F:Microsoft.Store.PartnerCenter.Utilization.UtilizationCollectionOperations.azureUtilizationOperations">
            <summary>
            A lazy reference to Azure utilization collection object.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilization.UtilizationCollectionOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Utilization.UtilizationCollectionOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations.</param>
            <param name="customerId">The customer ID.</param>
            <param name="subscriptionId">The subscription ID.</param>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Utilization.UtilizationCollectionOperations.Azure">
            <summary>
            Gets Azure subscription utilization behavior.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Utilization.IUtilizationCollection">
            <summary>
            Groups subscription utilization behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Store.PartnerCenter.Utilization.IUtilizationCollection.Azure">
            <summary>
            Gets Azure subscription utilization behavior.
            </summary>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Utilities.ParameterValidator">
            <summary>
            Helper class for validating parameters on method calls.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilities.ParameterValidator.Required(System.Object,System.String)">
            <summary>
            Validates that a parameter is not null or empty
            </summary>
            <param name="parameterValue">value of the method parameter</param>
            <param name="errorMessage">error message</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the parameter is not set.</exception>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilities.ParameterValidator.IsInclusive``1(``0,``0,``0,System.String)">
            <summary>
            Validates that a parameter is in the given range.
            </summary>
            <typeparam name="T">The parameter type.</typeparam>
            <param name="min">The minimum valid value.</param>
            <param name="max">The maximum valid value.</param>
            <param name="parameterValue">The given parameter value.</param>
            <param name="errorMessage">The error message to set in the thrown exception if the parameter was not in range.</param>
            <exception cref="T:System.ArgumentException">Thrown if the parameter is not in the given range.</exception>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Utilities.ParameterValidator.ValidateCountryCode(System.String)">
            <summary>
            Ensures that a given country code is valid.
            </summary>
            <param name="countryCode">The country code to validate.</param>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Validations.IValidations">
            <summary>
            Represents the behavior of a validation operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.IValidations.IsAddressValid(Microsoft.Store.PartnerCenter.Models.Address)">
            <summary>
            Checks if the address is valid or not.
            </summary>
            <param name="address">The address to be validated.</param>
            <returns>True if the address is valid, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.IValidations.IsAddressValidAsync(Microsoft.Store.PartnerCenter.Models.Address)">
            <summary>
            Asynchronously checks if the address is valid or not.
            </summary>
            <param name="address">The address to be validated.</param>
            <returns>True if the address is valid, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.IValidations.GetValidationCodes">
            <summary>
            Gets validation code which is used for Government Community Cloud customers qualification.
            </summary>
            <returns>List of validation codes.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.IValidations.GetValidationCodesAsync">
            <summary>
            Asynchronously gets validation code which is used for Government Community Cloud customers qualification.
            </summary>
            <returns>List of validation codes.</returns>
        </member>
        <member name="T:Microsoft.Store.PartnerCenter.Validations.ValidationOperations">
            <summary>
            Represents the behavior of a validation operations.
            </summary>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.ValidationOperations.#ctor(Microsoft.Store.PartnerCenter.IPartner)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Store.PartnerCenter.Validations.ValidationOperations"/> class.
            </summary>
            <param name="rootPartnerOperations">The root partner operations instance.</param>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.ValidationOperations.IsAddressValid(Microsoft.Store.PartnerCenter.Models.Address)">
            <summary>
            Checks if the address is valid or not.
            </summary>
            <param name="address">The address to be validated.</param>
            <returns>True if the address is valid, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.ValidationOperations.IsAddressValidAsync(Microsoft.Store.PartnerCenter.Models.Address)">
            <summary>
            Asynchronously checks if the address is valid or not.
            </summary>
            <param name="address">The address to be validated.</param>
            <returns>True if the address is valid, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.ValidationOperations.GetValidationCodes">
            <summary>
            Gets validation code.  Used for Government Community Cloud.
            </summary>
            <returns>List of validation codes.</returns>
        </member>
        <member name="M:Microsoft.Store.PartnerCenter.Validations.ValidationOperations.GetValidationCodesAsync">
            <summary>
            Asynchronously gets validation codes. Used for Government Community Cloud.
            </summary>
            <returns>List of validation codes.</returns>
        </member>
    </members>
</doc>
